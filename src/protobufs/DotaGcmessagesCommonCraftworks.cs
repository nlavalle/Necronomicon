// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dota_gcmessages_common_craftworks.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Steam.Protos.Dota2 {

  /// <summary>Holder for reflection information generated from dota_gcmessages_common_craftworks.proto</summary>
  public static partial class DotaGcmessagesCommonCraftworksReflection {

    #region Descriptor
    /// <summary>File descriptor for dota_gcmessages_common_craftworks.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DotaGcmessagesCommonCraftworksReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cidkb3RhX2djbWVzc2FnZXNfY29tbW9uX2NyYWZ0d29ya3MucHJvdG8aE3N0",
            "ZWFtbWVzc2FnZXMucHJvdG8aF2RvdGFfc2hhcmVkX2VudW1zLnByb3RvGhZn",
            "Y3Nka19nY21lc3NhZ2VzLnByb3RvIqQBChhDTXNnQ3JhZnR3b3Jrc0NvbXBv",
            "bmVudHMSUAoUY29tcG9uZW50X3F1YW50aXRpZXMYASADKAsyMi5DTXNnQ3Jh",
            "ZnR3b3Jrc0NvbXBvbmVudHMuQ29tcG9uZW50UXVhbnRpdGllc0VudHJ5GjYK",
            "GENvbXBvbmVudFF1YW50aXRpZXNFbnRyeRILCgNrZXkYASABKA0SDQoFdmFs",
            "dWUYAiABKA0idwoZQ01zZ0NyYWZ0d29ya3NRdWVzdFJld2FyZBIQCghxdWVz",
            "dF9pZBgBIAEoDRI0ChFyZXdhcmRfY29tcG9uZW50cxgCIAEoCzIZLkNNc2dD",
            "cmFmdHdvcmtzQ29tcG9uZW50cxISCgpzdGF0X3ZhbHVlGAMgASgNKm0KFkVD",
            "cmFmdHdvcmtzQXVkaXRBY3Rpb24SDgoKa19lSW52YWxpZBAAEhQKEGtfZVJl",
            "Y2lwZUNyYWZ0ZWQQARITCg9rX2VNYXRjaFJld2FyZHMQAhIYChRrX2VNYXRj",
            "aFJld2FyZHNUdXJibxADQhWqAhJTdGVhbS5Qcm90b3MuRG90YTI="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Steam.Protos.Dota2.SteammessagesReflection.Descriptor, global::Steam.Protos.Dota2.DotaSharedEnumsReflection.Descriptor, global::Steam.Protos.Dota2.GcsdkGcmessagesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Steam.Protos.Dota2.ECraftworksAuditAction), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgCraftworksComponents), global::Steam.Protos.Dota2.CMsgCraftworksComponents.Parser, new[]{ "ComponentQuantities" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgCraftworksComponents.Types.ComponentQuantitiesEntry), global::Steam.Protos.Dota2.CMsgCraftworksComponents.Types.ComponentQuantitiesEntry.Parser, new[]{ "Key", "Value" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgCraftworksQuestReward), global::Steam.Protos.Dota2.CMsgCraftworksQuestReward.Parser, new[]{ "QuestId", "RewardComponents", "StatValue" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ECraftworksAuditAction {
    [pbr::OriginalName("k_eInvalid")] KEInvalid = 0,
    [pbr::OriginalName("k_eRecipeCrafted")] KERecipeCrafted = 1,
    [pbr::OriginalName("k_eMatchRewards")] KEMatchRewards = 2,
    [pbr::OriginalName("k_eMatchRewardsTurbo")] KEMatchRewardsTurbo = 3,
  }

  #endregion

  #region Messages
  public sealed partial class CMsgCraftworksComponents : pb::IMessage<CMsgCraftworksComponents>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgCraftworksComponents> _parser = new pb::MessageParser<CMsgCraftworksComponents>(() => new CMsgCraftworksComponents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgCraftworksComponents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.DotaGcmessagesCommonCraftworksReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgCraftworksComponents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgCraftworksComponents(CMsgCraftworksComponents other) : this() {
      componentQuantities_ = other.componentQuantities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgCraftworksComponents Clone() {
      return new CMsgCraftworksComponents(this);
    }

    /// <summary>Field number for the "component_quantities" field.</summary>
    public const int ComponentQuantitiesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgCraftworksComponents.Types.ComponentQuantitiesEntry> _repeated_componentQuantities_codec
        = pb::FieldCodec.ForMessage(10, global::Steam.Protos.Dota2.CMsgCraftworksComponents.Types.ComponentQuantitiesEntry.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgCraftworksComponents.Types.ComponentQuantitiesEntry> componentQuantities_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgCraftworksComponents.Types.ComponentQuantitiesEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgCraftworksComponents.Types.ComponentQuantitiesEntry> ComponentQuantities {
      get { return componentQuantities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgCraftworksComponents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgCraftworksComponents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!componentQuantities_.Equals(other.componentQuantities_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= componentQuantities_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      componentQuantities_.WriteTo(output, _repeated_componentQuantities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      componentQuantities_.WriteTo(ref output, _repeated_componentQuantities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += componentQuantities_.CalculateSize(_repeated_componentQuantities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgCraftworksComponents other) {
      if (other == null) {
        return;
      }
      componentQuantities_.Add(other.componentQuantities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            componentQuantities_.AddEntriesFrom(input, _repeated_componentQuantities_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            componentQuantities_.AddEntriesFrom(ref input, _repeated_componentQuantities_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgCraftworksComponents message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ComponentQuantitiesEntry : pb::IMessage<ComponentQuantitiesEntry>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ComponentQuantitiesEntry> _parser = new pb::MessageParser<ComponentQuantitiesEntry>(() => new ComponentQuantitiesEntry());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ComponentQuantitiesEntry> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgCraftworksComponents.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ComponentQuantitiesEntry() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ComponentQuantitiesEntry(ComponentQuantitiesEntry other) : this() {
          _hasBits0 = other._hasBits0;
          key_ = other.key_;
          value_ = other.value_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ComponentQuantitiesEntry Clone() {
          return new ComponentQuantitiesEntry(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private readonly static uint KeyDefaultValue = 0;

        private uint key_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Key {
          get { if ((_hasBits0 & 1) != 0) { return key_; } else { return KeyDefaultValue; } }
          set {
            _hasBits0 |= 1;
            key_ = value;
          }
        }
        /// <summary>Gets whether the "key" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasKey {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "key" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearKey() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private readonly static uint ValueDefaultValue = 0;

        private uint value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Value {
          get { if ((_hasBits0 & 2) != 0) { return value_; } else { return ValueDefaultValue; } }
          set {
            _hasBits0 |= 2;
            value_ = value;
          }
        }
        /// <summary>Gets whether the "value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasValue {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "value" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearValue() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ComponentQuantitiesEntry);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ComponentQuantitiesEntry other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Key != other.Key) return false;
          if (Value != other.Value) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasKey) hash ^= Key.GetHashCode();
          if (HasValue) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasKey) {
            output.WriteRawTag(8);
            output.WriteUInt32(Key);
          }
          if (HasValue) {
            output.WriteRawTag(16);
            output.WriteUInt32(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasKey) {
            output.WriteRawTag(8);
            output.WriteUInt32(Key);
          }
          if (HasValue) {
            output.WriteRawTag(16);
            output.WriteUInt32(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasKey) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Key);
          }
          if (HasValue) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ComponentQuantitiesEntry other) {
          if (other == null) {
            return;
          }
          if (other.HasKey) {
            Key = other.Key;
          }
          if (other.HasValue) {
            Value = other.Value;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Key = input.ReadUInt32();
                break;
              }
              case 16: {
                Value = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Key = input.ReadUInt32();
                break;
              }
              case 16: {
                Value = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgCraftworksQuestReward : pb::IMessage<CMsgCraftworksQuestReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgCraftworksQuestReward> _parser = new pb::MessageParser<CMsgCraftworksQuestReward>(() => new CMsgCraftworksQuestReward());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgCraftworksQuestReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.DotaGcmessagesCommonCraftworksReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgCraftworksQuestReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgCraftworksQuestReward(CMsgCraftworksQuestReward other) : this() {
      _hasBits0 = other._hasBits0;
      questId_ = other.questId_;
      rewardComponents_ = other.rewardComponents_ != null ? other.rewardComponents_.Clone() : null;
      statValue_ = other.statValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgCraftworksQuestReward Clone() {
      return new CMsgCraftworksQuestReward(this);
    }

    /// <summary>Field number for the "quest_id" field.</summary>
    public const int QuestIdFieldNumber = 1;
    private readonly static uint QuestIdDefaultValue = 0;

    private uint questId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint QuestId {
      get { if ((_hasBits0 & 1) != 0) { return questId_; } else { return QuestIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        questId_ = value;
      }
    }
    /// <summary>Gets whether the "quest_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuestId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "quest_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuestId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reward_components" field.</summary>
    public const int RewardComponentsFieldNumber = 2;
    private global::Steam.Protos.Dota2.CMsgCraftworksComponents rewardComponents_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CMsgCraftworksComponents RewardComponents {
      get { return rewardComponents_; }
      set {
        rewardComponents_ = value;
      }
    }

    /// <summary>Field number for the "stat_value" field.</summary>
    public const int StatValueFieldNumber = 3;
    private readonly static uint StatValueDefaultValue = 0;

    private uint statValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StatValue {
      get { if ((_hasBits0 & 2) != 0) { return statValue_; } else { return StatValueDefaultValue; } }
      set {
        _hasBits0 |= 2;
        statValue_ = value;
      }
    }
    /// <summary>Gets whether the "stat_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatValue {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "stat_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatValue() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgCraftworksQuestReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgCraftworksQuestReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestId != other.QuestId) return false;
      if (!object.Equals(RewardComponents, other.RewardComponents)) return false;
      if (StatValue != other.StatValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasQuestId) hash ^= QuestId.GetHashCode();
      if (rewardComponents_ != null) hash ^= RewardComponents.GetHashCode();
      if (HasStatValue) hash ^= StatValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasQuestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(QuestId);
      }
      if (rewardComponents_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RewardComponents);
      }
      if (HasStatValue) {
        output.WriteRawTag(24);
        output.WriteUInt32(StatValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasQuestId) {
        output.WriteRawTag(8);
        output.WriteUInt32(QuestId);
      }
      if (rewardComponents_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RewardComponents);
      }
      if (HasStatValue) {
        output.WriteRawTag(24);
        output.WriteUInt32(StatValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasQuestId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuestId);
      }
      if (rewardComponents_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RewardComponents);
      }
      if (HasStatValue) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StatValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgCraftworksQuestReward other) {
      if (other == null) {
        return;
      }
      if (other.HasQuestId) {
        QuestId = other.QuestId;
      }
      if (other.rewardComponents_ != null) {
        if (rewardComponents_ == null) {
          RewardComponents = new global::Steam.Protos.Dota2.CMsgCraftworksComponents();
        }
        RewardComponents.MergeFrom(other.RewardComponents);
      }
      if (other.HasStatValue) {
        StatValue = other.StatValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (rewardComponents_ == null) {
              RewardComponents = new global::Steam.Protos.Dota2.CMsgCraftworksComponents();
            }
            input.ReadMessage(RewardComponents);
            break;
          }
          case 24: {
            StatValue = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (rewardComponents_ == null) {
              RewardComponents = new global::Steam.Protos.Dota2.CMsgCraftworksComponents();
            }
            input.ReadMessage(RewardComponents);
            break;
          }
          case 24: {
            StatValue = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
