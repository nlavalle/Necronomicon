// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: econ_gcmessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Steam.Protos.Dota2 {

  /// <summary>Holder for reflection information generated from econ_gcmessages.proto</summary>
  public static partial class EconGcmessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for econ_gcmessages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EconGcmessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVlY29uX2djbWVzc2FnZXMucHJvdG8aE3N0ZWFtbWVzc2FnZXMucHJvdG8a",
            "F2Vjb25fc2hhcmVkX2VudW1zLnByb3RvGhZnY3Nka19nY21lc3NhZ2VzLnBy",
            "b3RvGhViYXNlX2djbWVzc2FnZXMucHJvdG8iRQoSQ01zZ0FwcGx5QXV0b2dy",
            "YXBoEhkKEWF1dG9ncmFwaF9pdGVtX2lkGAEgASgEEhQKDGl0ZW1faXRlbV9p",
            "ZBgCIAEoBCJtChtDTXNnQWRqdXN0SXRlbUVxdWlwcGVkU3RhdGUSDwoHaXRl",
            "bV9pZBgBIAEoBBIRCgluZXdfY2xhc3MYAiABKA0SEAoIbmV3X3Nsb3QYAyAB",
            "KA0SGAoLc3R5bGVfaW5kZXgYBCABKA06AzI1NSKEAgokQ01zZ0Vjb25QbGF5",
            "ZXJTdHJhbmdlQ291bnRBZGp1c3RtZW50EhIKCmFjY291bnRfaWQYASABKA0S",
            "YAoZc3RyYW5nZV9jb3VudF9hZGp1c3RtZW50cxgCIAMoCzI9LkNNc2dFY29u",
            "UGxheWVyU3RyYW5nZUNvdW50QWRqdXN0bWVudC5DU3RyYW5nZUNvdW50QWRq",
            "dXN0bWVudBISCgp0dXJib19tb2RlGAMgASgIGlIKF0NTdHJhbmdlQ291bnRB",
            "ZGp1c3RtZW50EhIKCmV2ZW50X3R5cGUYASABKA0SDwoHaXRlbV9pZBgCIAEo",
            "BBISCgphZGp1c3RtZW50GAMgASgNIigKFENNc2dDcmFmdGluZ1Jlc3BvbnNl",
            "EhAKCGl0ZW1faWRzGAEgAygEIkAKG0NNc2dHQ1JlcXVlc3RTdG9yZVNhbGVz",
            "RGF0YRIPCgd2ZXJzaW9uGAEgASgNEhAKCGN1cnJlbmN5GAIgASgNIrkBCiND",
            "TXNnR0NSZXF1ZXN0U3RvcmVTYWxlc0RhdGFSZXNwb25zZRI+CgpzYWxlX3By",
            "aWNlGAEgAygLMiouQ01zZ0dDUmVxdWVzdFN0b3JlU2FsZXNEYXRhUmVzcG9u",
            "c2UuUHJpY2USDwoHdmVyc2lvbhgCIAEoDRIXCg9leHBpcmF0aW9uX3RpbWUY",
            "AyABKA0aKAoFUHJpY2USEAoIaXRlbV9kZWYYASABKA0SDQoFcHJpY2UYAiAB",
            "KA0iVworQ01zZ0dDUmVxdWVzdFN0b3JlU2FsZXNEYXRhVXBUb0RhdGVSZXNw",
            "b25zZRIPCgd2ZXJzaW9uGAEgASgNEhcKD2V4cGlyYXRpb25fdGltZRgCIAEo",
            "DSIXChVDTXNnR0NUb0dDUGluZ1JlcXVlc3QiGAoWQ01zZ0dDVG9HQ1BpbmdS",
            "ZXNwb25zZSI0Ch5DTXNnR0NUb0dDR2V0VXNlclNlc3Npb25TZXJ2ZXISEgoK",
            "YWNjb3VudF9pZBgBIAEoDSJUCiZDTXNnR0NUb0dDR2V0VXNlclNlc3Npb25T",
            "ZXJ2ZXJSZXNwb25zZRIXCg9zZXJ2ZXJfc3RlYW1faWQYASABKAYSEQoJaXNf",
            "b25saW5lGAIgASgIIkwKHkNNc2dHQ1RvR0NHZXRVc2VyU2VydmVyTWVtYmVy",
            "cxISCgphY2NvdW50X2lkGAEgASgNEhYKDm1heF9zcGVjdGF0b3JzGAIgASgN",
            "IkMKJkNNc2dHQ1RvR0NHZXRVc2VyU2VydmVyTWVtYmVyc1Jlc3BvbnNlEhkK",
            "EW1lbWJlcl9hY2NvdW50X2lkGAEgAygNIjgKHkNNc2dMb29rdXBNdWx0aXBs",
            "ZUFjY291bnROYW1lcxIWCgphY2NvdW50aWRzGAEgAygNQgIQASKaAQomQ01z",
            "Z0xvb2t1cE11bHRpcGxlQWNjb3VudE5hbWVzUmVzcG9uc2USQQoIYWNjb3Vu",
            "dHMYASADKAsyLy5DTXNnTG9va3VwTXVsdGlwbGVBY2NvdW50TmFtZXNSZXNw",
            "b25zZS5BY2NvdW50Gi0KB0FjY291bnQSEQoJYWNjb3VudGlkGAEgASgNEg8K",
            "B3BlcnNvbmEYAiABKAkiLwoVQ01zZ1JlcXVlc3RDcmF0ZUl0ZW1zEhYKDmNy",
            "YXRlX2l0ZW1fZGVmGAEgASgNIqgBCh1DTXNnUmVxdWVzdENyYXRlSXRlbXNS",
            "ZXNwb25zZRIQCghyZXNwb25zZRgBIAEoDRIRCglpdGVtX2RlZnMYAiADKA0S",
            "FgoOcGVla19pdGVtX2RlZnMYAyADKA0SIAoKcGVla19pdGVtcxgEIAMoCzIM",
            "LkNTT0Vjb25JdGVtIigKB0VSZXN1bHQSDwoLa19TdWNjZWVkZWQQABIMCghr",
            "X0ZhaWxlZBABIjkKH0NNc2dSZXF1ZXN0Q3JhdGVFc2NhbGF0aW9uTGV2ZWwS",
            "FgoOY3JhdGVfaXRlbV9kZWYYASABKA0i0QEKJ0NNc2dSZXF1ZXN0Q3JhdGVF",
            "c2NhbGF0aW9uTGV2ZWxSZXNwb25zZRIQCghyZXNwb25zZRgBIAEoDRIZChFl",
            "c2NhbGF0aW9uX2xldmVsMBgCIAEoDRIZChFlc2NhbGF0aW9uX2xldmVsMRgD",
            "IAEoDRIZChFlc2NhbGF0aW9uX2xldmVsMhgEIAEoDRIZChFlc2NhbGF0aW9u",
            "X2xldmVsMxgFIAEoDSIoCgdFUmVzdWx0Eg8KC2tfU3VjY2VlZGVkEAASDAoI",
            "a19GYWlsZWQQASKYAQodQ01zZ0dDVG9HQ0NhblVzZURyb3BSYXRlQm9udXMS",
            "EgoKYWNjb3VudF9pZBgBIAEoDRIXCg9kcm9wX3JhdGVfYm9udXMYAiABKAIS",
            "FAoMYm9vc3Rlcl90eXBlGAMgASgNEhoKEmV4Y2x1c2l2ZV9pdGVtX2RlZhgE",
            "IAEoDRIYChBhbGxvd19lcXVhbF9yYXRlGAUgASgIIrEBChdDTXNnU1FMQWRk",
            "RHJvcFJhdGVCb251cxISCgphY2NvdW50X2lkGAEgASgNEg8KB2l0ZW1faWQY",
            "AiABKAQSEAoIaXRlbV9kZWYYAyABKA0SFwoPZHJvcF9yYXRlX2JvbnVzGAQg",
            "ASgCEhQKDGJvb3N0ZXJfdHlwZRgFIAEoDRIYChBzZWNvbmRzX2R1cmF0aW9u",
            "GAYgASgNEhYKDmVuZF90aW1lX3N0YW1wGAcgASgNIm8KG0NNc2dTUUxVcGdy",
            "YWRlQmF0dGxlQm9vc3RlchISCgphY2NvdW50X2lkGAEgASgNEhAKCGl0ZW1f",
            "ZGVmGAIgASgNEhQKDGJvbnVzX3RvX2FkZBgDIAEoAhIUCgxib29zdGVyX3R5",
            "cGUYBCABKA0iPgoYQ01zZ0dDVG9HQ1JlZnJlc2hTT0NhY2hlEhIKCmFjY291",
            "bnRfaWQYASABKA0SDgoGcmVsb2FkGAIgASgIInoKHUNNc2dHQ1RvR0NBZGRT",
            "dWJzY3JpcHRpb25UaW1lEhIKCmFjY291bnRfaWQYASABKA0SKQohbWF0Y2hp",
            "bmdfc3Vic2NyaXB0aW9uX2RlZl9pbmRleGVzGAIgAygNEhoKEmFkZGl0aW9u",
            "YWxfc2Vjb25kcxgDIAEoDSKRBQohQ01zZ0dDVG9HQ0dyYW50QWNjb3VudFJv",
            "bGxlZEl0ZW1zEhIKCmFjY291bnRfaWQYASABKA0SNgoFaXRlbXMYAiADKAsy",
            "Jy5DTXNnR0NUb0dDR3JhbnRBY2NvdW50Um9sbGVkSXRlbXMuSXRlbRIUCgxh",
            "dWRpdF9hY3Rpb24YAyABKA0SEgoKYXVkaXRfZGF0YRgEIAEoBBr1AwoESXRl",
            "bRIQCghpdGVtX2RlZhgBIAEoDRISCgpsb290X2xpc3RzGAIgAygJEhQKDGln",
            "bm9yZV9saW1pdBgDIAEoCBIOCgZvcmlnaW4YBCABKA0SVAoSZHluYW1pY19h",
            "dHRyaWJ1dGVzGAUgAygLMjguQ01zZ0dDVG9HQ0dyYW50QWNjb3VudFJvbGxl",
            "ZEl0ZW1zLkl0ZW0uRHluYW1pY0F0dHJpYnV0ZRJeChhhZGRpdGlvbmFsX2F1",
            "ZGl0X2VudHJpZXMYBiADKAsyPC5DTXNnR0NUb0dDR3JhbnRBY2NvdW50Um9s",
            "bGVkSXRlbXMuSXRlbS5BZGRpdGlvbmFsQXVkaXRFbnRyeRIXCg9pbnZlbnRv",
            "cnlfdG9rZW4YByABKA0SEwoHcXVhbGl0eRgIIAEoBToCLTEaYQoQRHluYW1p",
            "Y0F0dHJpYnV0ZRIMCgRuYW1lGAEgASgJEhQKDHZhbHVlX3VpbnQzMhgCIAEo",
            "DRITCgt2YWx1ZV9mbG9hdBgDIAEoAhIUCgx2YWx1ZV9zdHJpbmcYBCABKAka",
            "WgoUQWRkaXRpb25hbEF1ZGl0RW50cnkSGAoQb3duZXJfYWNjb3VudF9pZBgB",
            "IAEoDRIUCgxhdWRpdF9hY3Rpb24YAiABKA0SEgoKYXVkaXRfZGF0YRgDIAEo",
            "BCJUChlDTXNnR0NUb0dDQmV0YURlbGV0ZUl0ZW1zEhIKCmFjY291bnRfaWQY",
            "ASABKA0SEAoIaXRlbV9pZHMYAiADKAQSEQoJaXRlbV9kZWZzGAMgAygNIlEK",
            "JENNc2dHQ1RvR0NHcmFudFNlbGZNYWRlSXRlbVRvQWNjb3VudBIWCg5pdGVt",
            "X2RlZl9pbmRleBgBIAEoDRIRCglhY2NvdW50aWQYAiABKA0isQEKC0NNc2dV",
            "c2VJdGVtEg8KB2l0ZW1faWQYASABKAQSFwoPdGFyZ2V0X3N0ZWFtX2lkGAIg",
            "ASgGEh8KF2dpZnRfX3BvdGVudGlhbF90YXJnZXRzGAMgAygNEhgKEGR1ZWxf",
            "X2NsYXNzX2xvY2sYBCABKA0SGgoSaW5pdGlhdG9yX3N0ZWFtX2lkGAUgASgE",
            "EiEKGWl0ZW1wYWNrX19hY2tfaW1tZWRpYXRlbHkYBiABKAgiVQoRQ01zZ1Nl",
            "cnZlclVzZUl0ZW0SHAoUaW5pdGlhdG9yX2FjY291bnRfaWQYASABKA0SIgoM",
            "dXNlX2l0ZW1fbXNnGAIgASgLMgwuQ01zZ1VzZUl0ZW0iKAoUQ01zZ1VzZU11",
            "bHRpcGxlSXRlbXMSEAoIaXRlbV9pZHMYASADKAQiSgohQ0dDU3RvcmVSZWNo",
            "YXJnZVJlZGlyZWN0X0xpbmVJdGVtEhMKC2l0ZW1fZGVmX2lkGAEgASgNEhAK",
            "CHF1YW50aXR5GAIgASgNIqsBCilDTXNnR0NFY29uU1FMV29ya0l0ZW1FbWJl",
            "ZGRlZFJvbGxiYWNrRGF0YRISCgphY2NvdW50X2lkGAEgASgNEhcKD2RlbGV0",
            "ZWRfaXRlbV9pZBgCIAEoBBIYChBvbGRfYXVkaXRfYWN0aW9uGAMgASgNEhgK",
            "EG5ld19hdWRpdF9hY3Rpb24YBCABKA0SHQoVZXhwZWN0ZWRfYXVkaXRfYWN0",
            "aW9uGAUgASgNIoUBCg9DTXNnQ3JhZnRTdGF0dWUSDgoGaGVyb2lkGAEgASgN",
            "EhQKDHNlcXVlbmNlbmFtZRgCIAEoCRINCgVjeWNsZRgDIAEoAhITCgtkZXNj",
            "cmlwdGlvbhgEIAEoCRIYChBwZWRlc3RhbF9pdGVtZGVmGAUgASgNEg4KBnRv",
            "b2xpZBgGIAEoBCIeCg5DTXNnUmVkZWVtQ29kZRIMCgRjb2RlGAEgASgJIq0B",
            "ChZDTXNnUmVkZWVtQ29kZVJlc3BvbnNlEhAKCHJlc3BvbnNlGAEgASgNEg8K",
            "B2l0ZW1faWQYAiABKAQicAoLRVJlc3VsdENvZGUSDwoLa19TdWNjZWVkZWQQ",
            "ABIZChVrX0ZhaWxlZF9Db2RlTm90Rm91bmQQARIcChhrX0ZhaWxlZF9Db2Rl",
            "QWxyZWFkeVVzZWQQAhIXChNrX0ZhaWxlZF9PdGhlckVycm9yEAMihwEKFUNN",
            "c2dEZXZOZXdJdGVtUmVxdWVzdBIVCg1pdGVtX2RlZl9uYW1lGAMgASgJEhYK",
            "Dmxvb3RfbGlzdF9uYW1lGAQgASgJEhUKDWF0dHJfZGVmX25hbWUYBSADKAkS",
            "EgoKYXR0cl92YWx1ZRgGIAMoCRIUCgxpdGVtX3F1YWxpdHkYByABKA0iMAod",
            "Q01zZ0Rldk5ld0l0ZW1SZXF1ZXN0UmVzcG9uc2USDwoHc3VjY2VzcxgBIAEo",
            "CCItChpDTXNnRGV2VW5sb2NrQWxsSXRlbVN0eWxlcxIPCgdpdGVtX2lkGAEg",
            "ASgEIjUKIkNNc2dEZXZVbmxvY2tBbGxJdGVtU3R5bGVzUmVzcG9uc2USDwoH",
            "c3VjY2VzcxgBIAEoCCI2CiBDTXNnR0NHZXRBY2NvdW50U3Vic2NyaXB0aW9u",
            "SXRlbRISCgphY2NvdW50X2lkGAEgASgNIj0KKENNc2dHQ0dldEFjY291bnRT",
            "dWJzY3JpcHRpb25JdGVtUmVzcG9uc2USEQoJZGVmX2luZGV4GAEgASgNIqUB",
            "ChFDTXNnR0NBZGRHaWZ0SXRlbRIZChFnaWZ0ZXJfYWNjb3VudF9pZBgBIAEo",
            "DRIbChNyZWNlaXZlcl9hY2NvdW50X2lkGAIgASgNEiIKDHdyYXBwZWRfaXRl",
            "bRgDIAEoCzIMLkNTT0Vjb25JdGVtEhQKDGdpZnRfbWVzc2FnZRgEIAEoCRIe",
            "ChZpc193YWxsZXRfY2FzaF90cnVzdGVkGAUgASgIImUKIENNc2dDbGllbnRU",
            "b0dDV3JhcEFuZERlbGl2ZXJHaWZ0Eg8KB2l0ZW1faWQYASABKAQSGgoSZ2l2",
            "ZV90b19hY2NvdW50X2lkGAIgASgNEhQKDGdpZnRfbWVzc2FnZRgDIAEoCSJM",
            "CiBDTXNnU1FMR0NUb0dDUmV2b2tlVW50cnVzdGVkR2lmdBISCgphY2NvdW50",
            "X2lkGAEgASgNEhQKDHNlbnRfaXRlbV9pZBgEIAEoBCLEAgooQ01zZ0NsaWVu",
            "dFRvR0NXcmFwQW5kRGVsaXZlckdpZnRSZXNwb25zZRI1CghyZXNwb25zZRgB",
            "IAEoDjIPLkVHQ01zZ1Jlc3BvbnNlOhJrX0VHQ01zZ1Jlc3BvbnNlT0sSGwoT",
            "Z2lmdGluZ19jaGFyZ2VfdXNlcxgCIAEoDRIaChJnaWZ0aW5nX2NoYXJnZV9t",
            "YXgYAyABKAUSFAoMZ2lmdGluZ191c2VzGAQgASgNEhMKC2dpZnRpbmdfbWF4",
            "GAUgASgFEhwKFGdpZnRpbmdfd2luZG93X2hvdXJzGAYgASgNEl8KEXRyYWRl",
            "X3Jlc3RyaWN0aW9uGAcgASgOMhwuRUdDTXNnSW5pdGlhdGVUcmFkZVJlc3Bv",
            "bnNlOiZrX0VHQ01zZ0luaXRpYXRlVHJhZGVSZXNwb25zZV9BY2NlcHRlZCIr",
            "ChhDTXNnQ2xpZW50VG9HQ1Vud3JhcEdpZnQSDwoHaXRlbV9pZBgBIAEoBCIi",
            "CiBDTXNnQ2xpZW50VG9HQ0dldEdpZnRQZXJtaXNzaW9ucyLnAwooQ01zZ0Ns",
            "aWVudFRvR0NHZXRHaWZ0UGVybWlzc2lvbnNSZXNwb25zZRIUCgxpc191bmxp",
            "bWl0ZWQYASABKAgSFgoOaGFzX3R3b19mYWN0b3IYAyABKAgSXwoRc2VuZGVy",
            "X3Blcm1pc3Npb24YBiABKA4yHC5FR0NNc2dJbml0aWF0ZVRyYWRlUmVzcG9u",
            "c2U6JmtfRUdDTXNnSW5pdGlhdGVUcmFkZVJlc3BvbnNlX0FjY2VwdGVkEiIK",
            "GmZyaWVuZHNoaXBfYWdlX3JlcXVpcmVtZW50GAcgASgNEi0KJWZyaWVuZHNo",
            "aXBfYWdlX3JlcXVpcmVtZW50X3R3b19mYWN0b3IYCCABKA0SVgoSZnJpZW5k",
            "X3Blcm1pc3Npb25zGAkgAygLMjouQ01zZ0NsaWVudFRvR0NHZXRHaWZ0UGVy",
            "bWlzc2lvbnNSZXNwb25zZS5GcmllbmRQZXJtaXNzaW9uGoABChBGcmllbmRQ",
            "ZXJtaXNzaW9uEhIKCmFjY291bnRfaWQYASABKA0SWAoKcGVybWlzc2lvbhgC",
            "IAEoDjIcLkVHQ01zZ0luaXRpYXRlVHJhZGVSZXNwb25zZToma19FR0NNc2dJ",
            "bml0aWF0ZVRyYWRlUmVzcG9uc2VfQWNjZXB0ZWQiLQoaQ01zZ0NsaWVudFRv",
            "R0NVbnBhY2tCdW5kbGUSDwoHaXRlbV9pZBgBIAEoBCL9AwoiQ01zZ0NsaWVu",
            "dFRvR0NVbnBhY2tCdW5kbGVSZXNwb25zZRIZChF1bnBhY2tlZF9pdGVtX2lk",
            "cxgBIAMoBBJdCghyZXNwb25zZRgCIAEoDjIxLkNNc2dDbGllbnRUb0dDVW5w",
            "YWNrQnVuZGxlUmVzcG9uc2UuRVVucGFja0J1bmRsZToYa19VbnBhY2tCdW5k",
            "bGVfU3VjY2VlZGVkEiEKGXVucGFja2VkX2l0ZW1fZGVmX2luZGV4ZXMYAyAD",
            "KA0iuQIKDUVVbnBhY2tCdW5kbGUSHAoYa19VbnBhY2tCdW5kbGVfU3VjY2Vl",
            "ZGVkEAASKQola19VbnBhY2tCdW5kbGVfRmFpbGVkX0l0ZW1Jc05vdEJ1bmRs",
            "ZRABEjUKMWtfVW5wYWNrQnVuZGxlX0ZhaWxlZF9VbmFibGVUb0NyZWF0ZUNv",
            "bnRhaW5lZEl0ZW0QAhImCiJrX1VucGFja0J1bmRsZV9GYWlsZWRfU09DYWNo",
            "ZUVycm9yEAMSJwoja19VbnBhY2tCdW5kbGVfRmFpbGVkX0l0ZW1Jc0ludmFs",
            "aWQQBBIpCiVrX1VucGFja0J1bmRsZV9GYWlsZWRfQmFkSXRlbVF1YW50aXR5",
            "EAUSLAooa19VbnBhY2tCdW5kbGVfRmFpbGVkX1VuYWJsZVRvRGVsZXRlSXRl",
            "bRAGIksKGENNc2dDbGllbnRUb0dDUGFja0J1bmRsZRIQCghpdGVtX2lkcxgB",
            "IAMoBBIdChVidW5kbGVfaXRlbV9kZWZfaW5kZXgYAiABKA0i8gUKIENNc2dD",
            "bGllbnRUb0dDUGFja0J1bmRsZVJlc3BvbnNlEg8KB2l0ZW1faWQYASABKAQS",
            "VwoIcmVzcG9uc2UYAiABKA4yLS5DTXNnQ2xpZW50VG9HQ1BhY2tCdW5kbGVS",
            "ZXNwb25zZS5FUGFja0J1bmRsZToWa19QYWNrQnVuZGxlX1N1Y2NlZWRlZCLj",
            "BAoLRVBhY2tCdW5kbGUSGgoWa19QYWNrQnVuZGxlX1N1Y2NlZWRlZBAAEiUK",
            "IWtfUGFja0J1bmRsZV9GYWlsZWRfSW50ZXJuYWxFcnJvchABEicKI2tfUGFj",
            "a0J1bmRsZV9GYWlsZWRfSXRlbUlzTm90QnVuZGxlEAISJAoga19QYWNrQnVu",
            "ZGxlX0ZhaWxlZF9TT0NhY2hlRXJyb3IQAxIlCiFrX1BhY2tCdW5kbGVfRmFp",
            "bGVkX0l0ZW1Jc0ludmFsaWQQBBInCiNrX1BhY2tCdW5kbGVfRmFpbGVkX0Jh",
            "ZEl0ZW1RdWFudGl0eRAFEioKJmtfUGFja0J1bmRsZV9GYWlsZWRfVW5hYmxl",
            "VG9EZWxldGVJdGVtEAYSLAooa19QYWNrQnVuZGxlX0ZhaWxlZF9CdW5kbGVD",
            "YW5ub3RCZVBhY2tlZBAHEikKJWtfUGFja0J1bmRsZV9GYWlsZWRfSXRlbUlz",
            "VW50cmFkZWFibGUQCBImCiJrX1BhY2tCdW5kbGVfRmFpbGVkX0l0ZW1Jc0Vx",
            "dWlwcGVkEAkSIwofa19QYWNrQnVuZGxlX0ZhaWxlZF9JdGVtSGFzR2VtcxAK",
            "EigKJGtfUGFja0J1bmRsZV9GYWlsZWRfSXRlbU1peGVkUXVhbGl0eRALEioK",
            "JmtfUGFja0J1bmRsZV9GYWlsZWRfSXRlbUludmFsaWRRdWFsaXR5EAwSKAok",
            "a19QYWNrQnVuZGxlX0ZhaWxlZF9JdGVtSXNOb25FY29ub215EA0SIAoca19Q",
            "YWNrQnVuZGxlX0ZhaWxlZF9EaXNhYmxlZBAOIksKJ0NNc2dHQ1RvQ2xpZW50",
            "U3RvcmVUcmFuc2FjdGlvbkNvbXBsZXRlZBIOCgZ0eG5faWQYASABKAQSEAoI",
            "aXRlbV9pZHMYAiADKAQiSAoYQ01zZ0NsaWVudFRvR0NFcXVpcEl0ZW1zEiwK",
            "BmVxdWlwcxgBIAMoCzIcLkNNc2dBZGp1c3RJdGVtRXF1aXBwZWRTdGF0ZSI/",
            "CiBDTXNnQ2xpZW50VG9HQ0VxdWlwSXRlbXNSZXNwb25zZRIbChNzb19jYWNo",
            "ZV92ZXJzaW9uX2lkGAEgASgGIkcKGkNNc2dDbGllbnRUb0dDU2V0SXRlbVN0",
            "eWxlEg8KB2l0ZW1faWQYASABKAQSGAoLc3R5bGVfaW5kZXgYAiABKA06AzI1",
            "NSLeAQoiQ01zZ0NsaWVudFRvR0NTZXRJdGVtU3R5bGVSZXNwb25zZRJVCghy",
            "ZXNwb25zZRgBIAEoDjItLkNNc2dDbGllbnRUb0dDU2V0SXRlbVN0eWxlUmVz",
            "cG9uc2UuRVNldFN0eWxlOhRrX1NldFN0eWxlX1N1Y2NlZWRlZCJhCglFU2V0",
            "U3R5bGUSGAoUa19TZXRTdHlsZV9TdWNjZWVkZWQQABIVChFrX1NldFN0eWxl",
            "X0ZhaWxlZBABEiMKH2tfU2V0U3R5bGVfRmFpbGVkX1N0eWxlSXNMb2NrZWQQ",
            "AiJuCh1DTXNnQ2xpZW50VG9HQ1VubG9ja0l0ZW1TdHlsZRIWCg5pdGVtX3Rv",
            "X3VubG9jaxgBIAEoBBIYCgtzdHlsZV9pbmRleBgCIAEoDToDMjU1EhsKE2Nv",
            "bnN1bWFibGVfaXRlbV9pZHMYAyADKAQirAUKJUNNc2dDbGllbnRUb0dDVW5s",
            "b2NrSXRlbVN0eWxlUmVzcG9uc2USXgoIcmVzcG9uc2UYASABKA4yMy5DTXNn",
            "Q2xpZW50VG9HQ1VubG9ja0l0ZW1TdHlsZVJlc3BvbnNlLkVVbmxvY2tTdHls",
            "ZToXa19VbmxvY2tTdHlsZV9TdWNjZWVkZWQSDwoHaXRlbV9pZBgCIAEoBBIY",
            "CgtzdHlsZV9pbmRleBgDIAEoDToDMjU1EhkKDHN0eWxlX3ByZXJlcRgEIAEo",
            "DToDMjU1ItwDCgxFVW5sb2NrU3R5bGUSGwoXa19VbmxvY2tTdHlsZV9TdWNj",
            "ZWVkZWQQABIfChtrX1VubG9ja1N0eWxlX0ZhaWxlZF9QcmVSZXEQARIjCh9r",
            "X1VubG9ja1N0eWxlX0ZhaWxlZF9DYW50QWZmb3JkEAISIwofa19VbmxvY2tT",
            "dHlsZV9GYWlsZWRfQ2FudENvbW1pdBADEiYKImtfVW5sb2NrU3R5bGVfRmFp",
            "bGVkX0NhbnRMb2NrQ2FjaGUQBBIpCiVrX1VubG9ja1N0eWxlX0ZhaWxlZF9D",
            "YW50QWZmb3JkQXR0cmliEAUSJgoia19VbmxvY2tTdHlsZV9GYWlsZWRfQ2Fu",
            "dEFmZm9yZEdlbRAGEioKJmtfVW5sb2NrU3R5bGVfRmFpbGVkX05vQ29tcGVu",
            "ZGl1bUxldmVsEAcSKAoka19VbmxvY2tTdHlsZV9GYWlsZWRfQWxyZWFkeVVu",
            "bG9ja2VkEAgSIwofa19VbmxvY2tTdHlsZV9GYWlsZWRfT3RoZXJFcnJvchAJ",
            "EiYKImtfVW5sb2NrU3R5bGVfRmFpbGVkX0l0ZW1Jc0ludmFsaWQQChImCiJr",
            "X1VubG9ja1N0eWxlX0ZhaWxlZF9Ub29sSXNJbnZhbGlkEAsigwEKJkNNc2dD",
            "bGllbnRUb0dDU2V0SXRlbUludmVudG9yeUNhdGVnb3J5EhAKCGl0ZW1faWRz",
            "GAEgAygEEhQKDHNldF90b192YWx1ZRgCIAEoDRIZChFyZW1vdmVfY2F0ZWdv",
            "cmllcxgDIAEoDRIWCg5hZGRfY2F0ZWdvcmllcxgEIAEoDSJHChlDTXNnQ2xp",
            "ZW50VG9HQ1VubG9ja0NyYXRlEhUKDWNyYXRlX2l0ZW1faWQYASABKAQSEwoL",
            "a2V5X2l0ZW1faWQYAiABKAQixAEKIUNNc2dDbGllbnRUb0dDVW5sb2NrQ3Jh",
            "dGVSZXNwb25zZRIzCgZyZXN1bHQYASABKA4yDy5FR0NNc2dSZXNwb25zZToS",
            "a19FR0NNc2dSZXNwb25zZU9LEj4KDWdyYW50ZWRfaXRlbXMYAiADKAsyJy5D",
            "TXNnQ2xpZW50VG9HQ1VubG9ja0NyYXRlUmVzcG9uc2UuSXRlbRoqCgRJdGVt",
            "Eg8KB2l0ZW1faWQYASABKAQSEQoJZGVmX2luZGV4GAIgASgNIjQKIUNNc2dD",
            "bGllbnRUb0dDUmVtb3ZlSXRlbUF0dHJpYnV0ZRIPCgdpdGVtX2lkGAEgASgE",
            "IrIDCilDTXNnQ2xpZW50VG9HQ1JlbW92ZUl0ZW1BdHRyaWJ1dGVSZXNwb25z",
            "ZRJyCghyZXNwb25zZRgBIAEoDjI/LkNNc2dDbGllbnRUb0dDUmVtb3ZlSXRl",
            "bUF0dHJpYnV0ZVJlc3BvbnNlLkVSZW1vdmVJdGVtQXR0cmlidXRlOh9rX1Jl",
            "bW92ZUl0ZW1BdHRyaWJ1dGVfU3VjY2VlZGVkEg8KB2l0ZW1faWQYAiABKAQi",
            "/wEKFEVSZW1vdmVJdGVtQXR0cmlidXRlEiMKH2tfUmVtb3ZlSXRlbUF0dHJp",
            "YnV0ZV9TdWNjZWVkZWQQABIgChxrX1JlbW92ZUl0ZW1BdHRyaWJ1dGVfRmFp",
            "bGVkEAESLgoqa19SZW1vdmVJdGVtQXR0cmlidXRlX0ZhaWxlZF9JdGVtSXNJ",
            "bnZhbGlkEAISOQo1a19SZW1vdmVJdGVtQXR0cmlidXRlX0ZhaWxlZF9BdHRy",
            "aWJ1dGVDYW5ub3RCZVJlbW92ZWQQAxI1CjFrX1JlbW92ZUl0ZW1BdHRyaWJ1",
            "dGVfRmFpbGVkX0F0dHJpYnV0ZURvZXNudEV4aXN0EAQiVQoWQ01zZ0NsaWVu",
            "dFRvR0NOYW1lSXRlbRIXCg9zdWJqZWN0X2l0ZW1faWQYASABKAQSFAoMdG9v",
            "bF9pdGVtX2lkGAIgASgEEgwKBG5hbWUYAyABKAkisgIKHkNNc2dDbGllbnRU",
            "b0dDTmFtZUl0ZW1SZXNwb25zZRJRCghyZXNwb25zZRgBIAEoDjIpLkNNc2dD",
            "bGllbnRUb0dDTmFtZUl0ZW1SZXNwb25zZS5FTmFtZUl0ZW06FGtfTmFtZUl0",
            "ZW1fU3VjY2VlZGVkEg8KB2l0ZW1faWQYAiABKAQiqwEKCUVOYW1lSXRlbRIY",
            "ChRrX05hbWVJdGVtX1N1Y2NlZWRlZBAAEhUKEWtfTmFtZUl0ZW1fRmFpbGVk",
            "EAESIwofa19OYW1lSXRlbV9GYWlsZWRfVG9vbElzSW52YWxpZBACEiMKH2tf",
            "TmFtZUl0ZW1fRmFpbGVkX0l0ZW1Jc0ludmFsaWQQAxIjCh9rX05hbWVJdGVt",
            "X0ZhaWxlZF9OYW1lSXNJbnZhbGlkEAQiPgoVQ01zZ0dDU2V0SXRlbVBvc2l0",
            "aW9uEg8KB2l0ZW1faWQYASABKAQSFAoMbmV3X3Bvc2l0aW9uGAIgASgNIooC",
            "CiVDQXR0cmlidXRlX0l0ZW1EeW5hbWljUmVjaXBlQ29tcG9uZW50EhAKCGl0",
            "ZW1fZGVmGAEgASgNEhQKDGl0ZW1fcXVhbGl0eRgCIAEoDRISCgppdGVtX2Zs",
            "YWdzGAMgASgNEhkKEWF0dHJpYnV0ZXNfc3RyaW5nGAQgASgJEhIKCml0ZW1f",
            "Y291bnQYBSABKA0SFwoPaXRlbXNfZnVsZmlsbGVkGAYgASgNEhMKC2l0ZW1f",
            "cmFyaXR5GAcgASgNEhAKCGxvb3RsaXN0GAggASgJEhkKEWZ1bGZpbGxlZF9p",
            "dGVtX2lkGAkgASgEEhsKE2Fzc29jaWF0ZWRfaXRlbV9kZWYYCiABKA0isgEK",
            "EENQcm90b0l0ZW1Tb2NrZXQSDwoHaXRlbV9pZBgBIAEoBBIWCg5hdHRyX2Rl",
            "Zl9pbmRleBgCIAEoDRIVCg1yZXF1aXJlZF90eXBlGAMgASgNEhUKDXJlcXVp",
            "cmVkX2hlcm8YBCABKAkSFQoNZ2VtX2RlZl9pbmRleBgFIAEoDRIUCgxub3Rf",
            "dHJhZGFibGUYBiABKAgSGgoScmVxdWlyZWRfaXRlbV9zbG90GAcgASgJIjsK",
            "FkNQcm90b0l0ZW1Tb2NrZXRfRW1wdHkSIQoGc29ja2V0GAEgASgLMhEuQ1By",
            "b3RvSXRlbVNvY2tldCJMChdDUHJvdG9JdGVtU29ja2V0X0VmZmVjdBIhCgZz",
            "b2NrZXQYASABKAsyES5DUHJvdG9JdGVtU29ja2V0Eg4KBmVmZmVjdBgCIAEo",
            "DSJlChZDUHJvdG9JdGVtU29ja2V0X0NvbG9yEiEKBnNvY2tldBgBIAEoCzIR",
            "LkNQcm90b0l0ZW1Tb2NrZXQSCwoDcmVkGAIgASgNEg0KBWdyZWVuGAMgASgN",
            "EgwKBGJsdWUYBCABKA0iagoYQ1Byb3RvSXRlbVNvY2tldF9TdHJhbmdlEiEK",
            "BnNvY2tldBgBIAEoCzIRLkNQcm90b0l0ZW1Tb2NrZXQSFAoMc3RyYW5nZV90",
            "eXBlGAIgASgNEhUKDXN0cmFuZ2VfdmFsdWUYAyABKA0inwEKNUNQcm90b0l0",
            "ZW1Tb2NrZXRfU3RyYW5nZV9ERVNFUklBTElaRV9GUk9NX1NUUklOR19PTkxZ",
            "EiEKBnNvY2tldBgBIAEoCzIRLkNQcm90b0l0ZW1Tb2NrZXQSFAoMc3RyYW5n",
            "ZV90eXBlGAIgASgNEhUKDXN0cmFuZ2VfdmFsdWUYAyABKA0SFgoOYWJpbGl0",
            "eV9lZmZlY3QYBCABKA0ikQEKGkNQcm90b0l0ZW1Tb2NrZXRfU3BlY3RhdG9y",
            "EiEKBnNvY2tldBgBIAEoCzIRLkNQcm90b0l0ZW1Tb2NrZXQSFAoMZ2FtZXNf",
            "dmlld2VkGAIgASgNEhYKDmNvcnBvcmF0aW9uX2lkGAMgASgNEhEKCWxlYWd1",
            "ZV9pZBgEIAEoDRIPCgd0ZWFtX2lkGAUgASgNIlsKHkNQcm90b0l0ZW1Tb2Nr",
            "ZXRfQXNzZXRNb2RpZmllchIhCgZzb2NrZXQYASABKAsyES5DUHJvdG9JdGVt",
            "U29ja2V0EhYKDmFzc2V0X21vZGlmaWVyGAIgASgNIqcBCjtDUHJvdG9JdGVt",
            "U29ja2V0X0Fzc2V0TW9kaWZpZXJfREVTRVJJQUxJWkVfRlJPTV9TVFJJTkdf",
            "T05MWRIhCgZzb2NrZXQYASABKAsyES5DUHJvdG9JdGVtU29ja2V0EhYKDmFz",
            "c2V0X21vZGlmaWVyGAIgASgNEhUKDWFuaW1fbW9kaWZpZXIYAyABKA0SFgoO",
            "YWJpbGl0eV9lZmZlY3QYBCABKA0igQEKGkNQcm90b0l0ZW1Tb2NrZXRfQXV0",
            "b2dyYXBoEiEKBnNvY2tldBgBIAEoCzIRLkNQcm90b0l0ZW1Tb2NrZXQSEQoJ",
            "YXV0b2dyYXBoGAIgASgJEhQKDGF1dG9ncmFwaF9pZBgDIAEoDRIXCg9hdXRv",
            "Z3JhcGhfc2NvcmUYBCABKA0iQwoeQ1Byb3RvSXRlbVNvY2tldF9TdGF0aWNW",
            "aXN1YWxzEiEKBnNvY2tldBgBIAEoCzIRLkNQcm90b0l0ZW1Tb2NrZXQiIgoR",
            "Q0F0dHJpYnV0ZV9TdHJpbmcSDQoFdmFsdWUYASABKAkibQolQ1dvcmtzaG9w",
            "X0dldEl0ZW1EYWlseVJldmVudWVfUmVxdWVzdBINCgVhcHBpZBgBIAEoDRIP",
            "CgdpdGVtX2lkGAIgASgNEhIKCmRhdGVfc3RhcnQYAyABKA0SEAoIZGF0ZV9l",
            "bmQYBCABKA0i3QEKJkNXb3Jrc2hvcF9HZXRJdGVtRGFpbHlSZXZlbnVlX1Jl",
            "c3BvbnNlElQKD2NvdW50cnlfcmV2ZW51ZRgBIAMoCzI7LkNXb3Jrc2hvcF9H",
            "ZXRJdGVtRGFpbHlSZXZlbnVlX1Jlc3BvbnNlLkNvdW50cnlEYWlseVJldmVu",
            "dWUaXQoTQ291bnRyeURhaWx5UmV2ZW51ZRIUCgxjb3VudHJ5X2NvZGUYASAB",
            "KAkSDAoEZGF0ZRgCIAEoDRITCgtyZXZlbnVlX3VzZBgDIAEoAxINCgV1bml0",
            "cxgEIAEoBSJjCihDV29ya3Nob3BfR2V0UGFja2FnZURhaWx5UmV2ZW51ZV9S",
            "ZXF1ZXN0EhEKCXBhY2thZ2VpZBgBIAEoDRISCgpkYXRlX3N0YXJ0GAIgASgN",
            "EhAKCGRhdGVfZW5kGAMgASgNIuMBCilDV29ya3Nob3BfR2V0UGFja2FnZURh",
            "aWx5UmV2ZW51ZV9SZXNwb25zZRJXCg9jb3VudHJ5X3JldmVudWUYASADKAsy",
            "Pi5DV29ya3Nob3BfR2V0UGFja2FnZURhaWx5UmV2ZW51ZV9SZXNwb25zZS5D",
            "b3VudHJ5RGFpbHlSZXZlbnVlGl0KE0NvdW50cnlEYWlseVJldmVudWUSFAoM",
            "Y291bnRyeV9jb2RlGAEgASgJEgwKBGRhdGUYAiABKA0SEwoLcmV2ZW51ZV91",
            "c2QYAyABKAMSDQoFdW5pdHMYBCABKAUiSAofQ01zZ1NRTEdDVG9HQ0dyYW50",
            "QmFja3BhY2tTbG90cxISCgphY2NvdW50X2lkGAEgASgNEhEKCWFkZF9zbG90",
            "cxgCIAEoDSI1Ch9DTXNnQ2xpZW50VG9HQ0xvb2t1cEFjY291bnROYW1lEhIK",
            "CmFjY291bnRfaWQYASABKA0iUwonQ01zZ0NsaWVudFRvR0NMb29rdXBBY2Nv",
            "dW50TmFtZVJlc3BvbnNlEhIKCmFjY291bnRfaWQYASABKA0SFAoMYWNjb3Vu",
            "dF9uYW1lGAIgASgJIp0BCiBDTXNnQ2xpZW50VG9HQ0NyZWF0ZVN0YXRpY1Jl",
            "Y2lwZRI1CgVpdGVtcxgBIAMoCzImLkNNc2dDbGllbnRUb0dDQ3JlYXRlU3Rh",
            "dGljUmVjaXBlLkl0ZW0SGAoQcmVjaXBlX2RlZl9pbmRleBgCIAEoDRooCgRJ",
            "dGVtEg8KB2l0ZW1faWQYASABKAQSDwoHc2xvdF9pZBgCIAEoDSKYBgooQ01z",
            "Z0NsaWVudFRvR0NDcmVhdGVTdGF0aWNSZWNpcGVSZXNwb25zZRJYCghyZXNw",
            "b25zZRgBIAEoDjIzLkNNc2dDbGllbnRUb0dDQ3JlYXRlU3RhdGljUmVjaXBl",
            "UmVzcG9uc2UuRVJlc3BvbnNlOhFlUmVzcG9uc2VfU3VjY2VzcxJKCgxvdXRw",
            "dXRfaXRlbXMYAiADKAsyNC5DTXNnQ2xpZW50VG9HQ0NyZWF0ZVN0YXRpY1Jl",
            "Y2lwZVJlc3BvbnNlLk91dHB1dEl0ZW0SSgoMaW5wdXRfZXJyb3JzGAMgAygL",
            "MjQuQ01zZ0NsaWVudFRvR0NDcmVhdGVTdGF0aWNSZWNpcGVSZXNwb25zZS5J",
            "bnB1dEVycm9yElYKEmFkZGl0aW9uYWxfb3V0cHV0cxgEIAMoCzI6LkNNc2dD",
            "bGllbnRUb0dDQ3JlYXRlU3RhdGljUmVjaXBlUmVzcG9uc2UuQWRkaXRpb25h",
            "bE91dHB1dBpBCgpPdXRwdXRJdGVtEhEKCWRlZl9pbmRleBgBIAEoDRIPCgdp",
            "dGVtX2lkGAIgASgEEg8KB3Nsb3RfaWQYAyABKA0adAoKSW5wdXRFcnJvchIP",
            "CgdzbG90X2lkGAEgASgNElUKBWVycm9yGAIgASgOMjMuQ01zZ0NsaWVudFRv",
            "R0NDcmVhdGVTdGF0aWNSZWNpcGVSZXNwb25zZS5FUmVzcG9uc2U6EWVSZXNw",
            "b25zZV9TdWNjZXNzGjIKEEFkZGl0aW9uYWxPdXRwdXQSDwoHc2xvdF9pZBgB",
            "IAEoDRINCgV2YWx1ZRgCIAEoBCK0AQoJRVJlc3BvbnNlEhUKEWVSZXNwb25z",
            "ZV9TdWNjZXNzEAASHgoaZVJlc3BvbnNlX09mZmVyaW5nRGlzYWJsZWQQARIa",
            "ChZlUmVzcG9uc2VfSW52YWxpZEl0ZW1zEAISGwoXZVJlc3BvbnNlX0ludGVy",
            "bmFsRXJyb3IQAxIbChdlUmVzcG9uc2VfTWlzc2luZ0xlYWd1ZRAEEhoKFmVS",
            "ZXNwb25zZV9NaXNzaW5nRXZlbnQQBSLwAwobQ01zZ1Byb2Nlc3NUcmFuc2Fj",
            "dGlvbk9yZGVyEg4KBnR4bl9pZBgBIAEoBBIUCgxzdGVhbV90eG5faWQYAiAB",
            "KAQSFgoOcGFydG5lcl90eG5faWQYAyABKAQSEAoIc3RlYW1faWQYBCABKAYS",
            "EgoKdGltZV9zdGFtcBgFIAEoDRIRCgl3YXRlcm1hcmsYBiABKAQSHgoWcHVy",
            "Y2hhc2VfcmVwb3J0X3N0YXR1cxgHIAEoBRIQCghjdXJyZW5jeRgIIAEoDRIw",
            "CgVpdGVtcxgJIAMoCzIhLkNNc2dQcm9jZXNzVHJhbnNhY3Rpb25PcmRlci5J",
            "dGVtGvUBCgRJdGVtEhYKDml0ZW1fZGVmX2luZGV4GAEgASgNEhIKCml0ZW1f",
            "cHJpY2UYAiABKA0SEAoIcXVhbnRpdHkYAyABKA0SFQoNY2F0ZWdvcnlfZGVz",
            "YxgEIAEoCRIbChNzdG9yZV9wdXJjaGFzZV90eXBlGAUgASgNEhsKE3NvdXJj",
            "ZV9yZWZlcmVuY2VfaWQYBiABKAQSGgoScGFyZW50X3N0YWNrX2luZGV4GAcg",
            "ASgFEhUKDWRlZmF1bHRfcHJpY2UYCCABKAgSFgoOaXNfdXNlcl9mYWNpbmcY",
            "CSABKAgSEwoLcHJpY2VfaW5kZXgYCyABKAUiewomQ01zZ0dDVG9HQ1N0b3Jl",
            "UHJvY2Vzc0NES2V5VHJhbnNhY3Rpb24SKwoFb3JkZXIYASABKAsyHC5DTXNn",
            "UHJvY2Vzc1RyYW5zYWN0aW9uT3JkZXISEwoLcmVhc29uX2NvZGUYAiABKA0S",
            "DwoHcGFydG5lchgDIAEoDSJBCi5DTXNnR0NUb0dDU3RvcmVQcm9jZXNzQ0RL",
            "ZXlUcmFuc2FjdGlvblJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgiTwogQ01z",
            "Z0dDVG9HQ1N0b3JlUHJvY2Vzc1NldHRsZW1lbnQSKwoFb3JkZXIYASABKAsy",
            "HC5DTXNnUHJvY2Vzc1RyYW5zYWN0aW9uT3JkZXIiOwooQ01zZ0dDVG9HQ1N0",
            "b3JlUHJvY2Vzc1NldHRsZW1lbnRSZXNwb25zZRIPCgdzdWNjZXNzGAEgASgI",
            "IpgBCiFDTXNnR0NUb0dDQnJvYWRjYXN0Q29uc29sZUNvbW1hbmQSEwoLY29u",
            "X2NvbW1hbmQYASABKAkSFQoNcmVwb3J0X291dHB1dBgCIAEoCBIWCgpzZW5k",
            "aW5nX2djGAMgASgFOgItMRIYChBvdXRwdXRfaW5pdGlhdG9yGAQgASgJEhUK",
            "DXNlbmRlcl9zb3VyY2UYBSABKAkixwEKF0NNc2dHQ1RvR0NDb25zb2xlT3V0",
            "cHV0EhEKCWluaXRpYXRvchgBIAEoCRIWCgpzZW5kaW5nX2djGAIgASgFOgIt",
            "MRIxCgRtc2dzGAMgAygLMiMuQ01zZ0dDVG9HQ0NvbnNvbGVPdXRwdXQuT3V0",
            "cHV0TGluZRIeChZpc19sYXN0X2Zvcl9zb3VyY2Vfam9iGAQgASgIGi4KCk91",
            "dHB1dExpbmUSDAoEdGV4dBgBIAEoCRISCgpzcGV3X2xldmVsGAIgASgNIo4B",
            "CgxDTXNnSXRlbUFnZXMSQAoWbWF4X2l0ZW1faWRfdGltZXN0YW1wcxgBIAMo",
            "CzIgLkNNc2dJdGVtQWdlcy5NYXhJdGVtSURUaW1lc3RhbXAaPAoSTWF4SXRl",
            "bUlEVGltZXN0YW1wEhEKCXRpbWVzdGFtcBgBIAEoDRITCgttYXhfaXRlbV9p",
            "ZBgCIAEoBCKvAQoZQ01zZ0dDVG9HQ0ludGVybmFsVGVzdE1zZxIWCgpzZW5k",
            "aW5nX2djGAEgASgFOgItMRIRCglzZW5kZXJfaWQYAiABKAYSDwoHY29udGV4",
            "dBgDIAEoDRISCgptZXNzYWdlX2lkGAQgASgNEhQKDG1lc3NhZ2VfYm9keRgF",
            "IAEoDBIVCg1qb2JfaWRfc291cmNlGAYgASgGEhUKDWpvYl9pZF90YXJnZXQY",
            "ByABKAYiwAEKJUNNc2dHQ1RvR0NDbGllbnRTZXJ2ZXJWZXJzaW9uc1VwZGF0",
            "ZWQSIgoaY2xpZW50X21pbl9hbGxvd2VkX3ZlcnNpb24YASABKA0SHQoVY2xp",
            "ZW50X2FjdGl2ZV92ZXJzaW9uGAIgASgNEh0KFXNlcnZlcl9hY3RpdmVfdmVy",
            "c2lvbhgDIAEoDRIfChdzZXJ2ZXJfZGVwbG95ZWRfdmVyc2lvbhgEIAEoDRIU",
            "Cgx3aGF0X2NoYW5nZWQYBSABKA0igwEKIUNNc2dHQ1RvR0NCcm9hZGNhc3RN",
            "ZXNzYWdlRnJvbVN1YhIOCgZtc2dfaWQYASABKA0SFgoOc2VyaWFsaXplZF9t",
            "c2cYAiABKAwSGwoPYWNjb3VudF9pZF9saXN0GAMgAygNQgIQARIZCg1zdGVh",
            "bV9pZF9saXN0GAQgAygGQgIQASK4AQohQ01zZ0dDVG9DbGllbnRDdXJyZW5j",
            "eVByaWNlUG9pbnRzEhUKCXByaWNlX2tleRgBIAMoBEICEAESPwoKY3VycmVu",
            "Y2llcxgCIAMoCzIrLkNNc2dHQ1RvQ2xpZW50Q3VycmVuY3lQcmljZVBvaW50",
            "cy5DdXJyZW5jeRo7CghDdXJyZW5jeRITCgtjdXJyZW5jeV9pZBgBIAEoDRIa",
            "Cg5jdXJyZW5jeV9wcmljZRgCIAMoBEICEAEiOwoSQ01zZ0Jhbm5lZFdvcmRM",
            "aXN0Eg8KB3ZlcnNpb24YASABKA0SFAoMYmFubmVkX3dvcmRzGAIgAygJIoYB",
            "CiJDTXNnR0NUb0dDRmx1c2hTdGVhbUludmVudG9yeUNhY2hlEjUKBGtleXMY",
            "ASADKAsyJy5DTXNnR0NUb0dDRmx1c2hTdGVhbUludmVudG9yeUNhY2hlLktl",
            "eRopCgNLZXkSDwoHc3RlYW1pZBgBIAEoBBIRCgljb250ZXh0aWQYAiABKAQi",
            "TgohQ01zZ0dDVG9HQ1VwZGF0ZVN1YnNjcmlwdGlvbkl0ZW1zEhIKCmFjY291",
            "bnRfaWQYASABKA0SFQoNYWx3YXlzX25vdGlmeRgCIAEoCCInChJDTXNnR0NU",
            "b0dDU2VsZlBpbmcSEQoJc2FtcGxlX2lkGAEgASgNIiEKH0NNc2dHQ1RvR0NH",
            "ZXRJbmZ1eEludGVydmFsU3RhdHMiowEKJ0NNc2dHQ1RvR0NHZXRJbmZ1eElu",
            "dGVydmFsU3RhdHNSZXNwb25zZRIUCghzdGF0X2lkcxgBIAMoB0ICEAESFgoK",
            "c3RhdF90b3RhbBgCIAMoBEICEAESGAoMc3RhdF9zYW1wbGVzGAMgAygNQgIQ",
            "ARIUCghzdGF0X21heBgEIAMoDUICEAESGgoSc2FtcGxlX2R1cmF0aW9uX21z",
            "GAUgASgNIh0KG0NNc2dHQ1RvR0NQdXJjaGFzZVN1Y2NlZWRlZCJACixDTXNn",
            "Q2xpZW50VG9HQ0dldExpbWl0ZWRJdGVtUHVyY2hhc2VRdWFudGl0eRIQCghp",
            "dGVtX2RlZhgBIAEoDSLLAgo0Q01zZ0NsaWVudFRvR0NHZXRMaW1pdGVkSXRl",
            "bVB1cmNoYXNlUXVhbnRpdHlSZXNwb25zZRJhCgZyZXN1bHQYASABKA4yPy5D",
            "TXNnQ2xpZW50VG9HQ0dldExpbWl0ZWRJdGVtUHVyY2hhc2VRdWFudGl0eVJl",
            "c3BvbnNlLkVSZXNwb25zZToQa19lSW50ZXJuYWxFcnJvchIaChJxdWFudGl0",
            "eV9wdXJjaGFzZWQYAiABKA0ikwEKCUVSZXNwb25zZRIUChBrX2VJbnRlcm5h",
            "bEVycm9yEAASDgoKa19lU3VjY2VzcxABEg4KCmtfZVRvb0J1c3kQAhIPCgtr",
            "X2VEaXNhYmxlZBADEg4KCmtfZVRpbWVvdXQQBBIVChFrX2VJbnZhbGlkSXRl",
            "bURlZhAFEhgKFGtfZUl0ZW1EZWZOb3RMaW1pdGVkEAYiOAokQ01zZ0NsaWVu",
            "dFRvR0NHZXRJbkZsaWdodEl0ZW1DaGFyZ2VzEhAKCGl0ZW1fZGVmGAEgASgN",
            "Ip8CCixDTXNnQ2xpZW50VG9HQ0dldEluRmxpZ2h0SXRlbUNoYXJnZXNSZXNw",
            "b25zZRJZCgZyZXN1bHQYASABKA4yNy5DTXNnQ2xpZW50VG9HQ0dldEluRmxp",
            "Z2h0SXRlbUNoYXJnZXNSZXNwb25zZS5FUmVzcG9uc2U6EGtfZUludGVybmFs",
            "RXJyb3ISGQoRY2hhcmdlc19pbl9mbGlnaHQYAiABKA0ieQoJRVJlc3BvbnNl",
            "EhQKEGtfZUludGVybmFsRXJyb3IQABIOCgprX2VTdWNjZXNzEAESDgoKa19l",
            "VG9vQnVzeRACEg8KC2tfZURpc2FibGVkEAMSDgoKa19lVGltZW91dBAEEhUK",
            "EWtfZUludmFsaWRJdGVtRGVmEAUi2QEKJUNNc2dDbGllbnRUb0dDUHVyY2hh",
            "c2VDaGFyZ2VDb3N0SXRlbXMSOgoFaXRlbXMYASADKAsyKy5DTXNnQ2xpZW50",
            "VG9HQ1B1cmNoYXNlQ2hhcmdlQ29zdEl0ZW1zLkl0ZW0SEAoIY3VycmVuY3kY",
            "AiABKA0aYgoESXRlbRIWCg5pdGVtX2RlZl9pbmRleBgBIAEoDRIQCghxdWFu",
            "dGl0eRgCIAEoDRIbChNzb3VyY2VfcmVmZXJlbmNlX2lkGAMgASgEEhMKC3By",
            "aWNlX2luZGV4GAQgASgFIvICCi1DTXNnQ2xpZW50VG9HQ1B1cmNoYXNlQ2hh",
            "cmdlQ29zdEl0ZW1zUmVzcG9uc2USWgoGcmVzdWx0GAEgASgOMjguQ01zZ0Ns",
            "aWVudFRvR0NQdXJjaGFzZUNoYXJnZUNvc3RJdGVtc1Jlc3BvbnNlLkVSZXNw",
            "b25zZToQa19lSW50ZXJuYWxFcnJvchIQCghpdGVtX2lkcxgCIAMoBCLSAQoJ",
            "RVJlc3BvbnNlEhQKEGtfZUludGVybmFsRXJyb3IQABIOCgprX2VTdWNjZXNz",
            "EAESDgoKa19lVG9vQnVzeRACEg8KC2tfZURpc2FibGVkEAMSDgoKa19lVGlt",
            "ZW91dBAEEhMKD2tfZUludmFsaWRQYXJhbRAFEhMKD2tfZUludmFsaWRQcmlj",
            "ZRAGEhoKFmtfZUluc3VmZmljaWVudENoYXJnZXMQBxISCg5rX2VMaW1pdGVk",
            "SXRlbRAIEhQKEGtfZU1pc3NpbmdQcmVyZXEQCiKwAQokQ01zZ0dDVG9DbGll",
            "bnRJbkZsaWdodENoYXJnZXNVcGRhdGVkEkwKEWluX2ZsaWdodF9jaGFyZ2Vz",
            "GAIgAygLMjEuQ01zZ0dDVG9DbGllbnRJbkZsaWdodENoYXJnZXNVcGRhdGVk",
            "Lkl0ZW1DaGFyZ2VzGjoKC0l0ZW1DaGFyZ2VzEhAKCGl0ZW1fZGVmGAEgASgN",
            "EhkKEWNoYXJnZXNfaW5fZmxpZ2h0GAIgASgNIj0KK0NNc2dDbGllbnRUb0dD",
            "Q2FuY2VsVW5maW5hbGl6ZWRUcmFuc2FjdGlvbnMSDgoGdW51c2VkGAEgASgN",
            "IkUKM0NNc2dDbGllbnRUb0dDQ2FuY2VsVW5maW5hbGl6ZWRUcmFuc2FjdGlv",
            "bnNSZXNwb25zZRIOCgZyZXN1bHQYASABKA0iYQoaQ01zZ0dDVG9HQ1VwZGF0",
            "ZVdlbGNvbWVNc2cSDgoGc2VydmVyGAEgASgIEiAKB25ld19tc2cYAiABKAsy",
            "Dy5DRXh0cmFNc2dCbG9jaxIRCglicm9hZGNhc3QYAyABKAgq5ScKCkVHQ0l0",
            "ZW1Nc2cSEQoMa19FTXNnR0NCYXNlEOgHEhwKF2tfRU1zZ0dDU2V0SXRlbVBv",
            "c2l0aW9uEOkHEh8KGmtfRU1zZ0NsaWVudFRvR0NQYWNrQnVuZGxlEOoHEicK",
            "ImtfRU1zZ0NsaWVudFRvR0NQYWNrQnVuZGxlUmVzcG9uc2UQ6wcSEwoOa19F",
            "TXNnR0NEZWxldGUQ7AcSJAofa19FTXNnR0NWZXJpZnlDYWNoZVN1YnNjcmlw",
            "dGlvbhDtBxIdChhrX0VNc2dDbGllbnRUb0dDTmFtZUl0ZW0Q7gcSFgoRa19F",
            "TXNnR0NQYWludEl0ZW0Q8QcSHgoZa19FTXNnR0NQYWludEl0ZW1SZXNwb25z",
            "ZRDyBxIZChRrX0VNc2dHQ05hbWVCYXNlSXRlbRD7BxIhChxrX0VNc2dHQ05h",
            "bWVCYXNlSXRlbVJlc3BvbnNlEPwHEhsKFmtfRU1zZ0dDVXNlSXRlbVJlcXVl",
            "c3QQgQgSHAoXa19FTXNnR0NVc2VJdGVtUmVzcG9uc2UQgggSGAoTa19FTXNn",
            "R0NHaWZ0ZWRJdGVtcxCDCBIeChlrX0VNc2dHQ1Vud3JhcEdpZnRSZXF1ZXN0",
            "EI0IEh8KGmtfRU1zZ0dDVW53cmFwR2lmdFJlc3BvbnNlEI4IEhYKEWtfRU1z",
            "Z0dDU29ydEl0ZW1zEJEIEiEKHGtfRU1zZ0dDQmFja3BhY2tTb3J0RmluaXNo",
            "ZWQQoggSJAofa19FTXNnR0NBZGp1c3RJdGVtRXF1aXBwZWRTdGF0ZRCjCBId",
            "ChhrX0VNc2dHQ0l0ZW1BY2tub3dsZWRnZWQQpggSJQoga19FTXNnQ2xpZW50",
            "VG9HQ05hbWVJdGVtUmVzcG9uc2UQrAgSHQoYa19FTXNnR0NBcHBseVN0cmFu",
            "Z2VQYXJ0ELEIEiAKG2tfRU1zZ0dDQXBwbHlQZW5uYW50VXBncmFkZRC0CBId",
            "ChhrX0VNc2dHQ1NldEl0ZW1Qb3NpdGlvbnMQtQgSHAoXa19FTXNnR0NBcHBs",
            "eUVnZ0Vzc2VuY2UQtggSIwoea19FTXNnR0NOYW1lRWdnRXNzZW5jZVJlc3Bv",
            "bnNlELcIEhgKE2tfRU1zZ0dDRXh0cmFjdEdlbXMQvggSFgoRa19FTXNnR0NB",
            "ZGRTb2NrZXQQvwgSHAoXa19FTXNnR0NBZGRJdGVtVG9Tb2NrZXQQwAgSJAof",
            "a19FTXNnR0NBZGRJdGVtVG9Tb2NrZXRSZXNwb25zZRDBCBIeChlrX0VNc2dH",
            "Q0FkZFNvY2tldFJlc3BvbnNlEMIIEiEKHGtfRU1zZ0dDUmVzZXRTdHJhbmdl",
            "R2VtQ291bnQQwwgSHgoZa19FTXNnR0NSZXF1ZXN0Q3JhdGVJdGVtcxDECBIm",
            "CiFrX0VNc2dHQ1JlcXVlc3RDcmF0ZUl0ZW1zUmVzcG9uc2UQxQgSIAoba19F",
            "TXNnR0NFeHRyYWN0R2Vtc1Jlc3BvbnNlEMYIEikKJGtfRU1zZ0dDUmVzZXRT",
            "dHJhbmdlR2VtQ291bnRSZXNwb25zZRDHCBIhChxrX0VNc2dHQ1NlcnZlclVz",
            "ZUl0ZW1SZXF1ZXN0EM8IEhgKE2tfRU1zZ0dDQWRkR2lmdEl0ZW0Q0AgSJwoi",
            "a19FTXNnU1FMR0NUb0dDUmV2b2tlVW50cnVzdGVkR2lmdBDRCBIvCiprX0VN",
            "c2dDbGllbnRUb0dDUmVtb3ZlSXRlbUdpZnRlckF0dHJpYnV0ZXMQ1QgSIwoe",
            "a19FTXNnQ2xpZW50VG9HQ1JlbW92ZUl0ZW1OYW1lENYIEioKJWtfRU1zZ0Ns",
            "aWVudFRvR0NSZW1vdmVJdGVtRGVzY3JpcHRpb24Q1wgSMAora19FTXNnQ2xp",
            "ZW50VG9HQ1JlbW92ZUl0ZW1BdHRyaWJ1dGVSZXNwb25zZRDYCBIfChprX0VN",
            "c2dHQ0Rldl9OZXdJdGVtUmVxdWVzdBDRDxInCiJrX0VNc2dHQ0Rldl9OZXdJ",
            "dGVtUmVxdWVzdFJlc3BvbnNlENIPEisKJmtfRU1zZ0dDRGV2X1VubG9ja0Fs",
            "bEl0ZW1TdHlsZXNSZXF1ZXN0ENMPEiwKJ2tfRU1zZ0dDRGV2X1VubG9ja0Fs",
            "bEl0ZW1TdHlsZXNSZXNwb25zZRDUDxIiCh1rX0VNc2dHQ1N0b3JlUHVyY2hh",
            "c2VGaW5hbGl6ZRDIExIqCiVrX0VNc2dHQ1N0b3JlUHVyY2hhc2VGaW5hbGl6",
            "ZVJlc3BvbnNlEMkTEiAKG2tfRU1zZ0dDU3RvcmVQdXJjaGFzZUNhbmNlbBDK",
            "ExIoCiNrX0VNc2dHQ1N0b3JlUHVyY2hhc2VDYW5jZWxSZXNwb25zZRDLExIe",
            "ChlrX0VNc2dHQ1N0b3JlUHVyY2hhc2VJbml0EM4TEiYKIWtfRU1zZ0dDU3Rv",
            "cmVQdXJjaGFzZUluaXRSZXNwb25zZRDPExImCiFrX0VNc2dHQ1RvR0NCYW5u",
            "ZWRXb3JkTGlzdFVwZGF0ZWQQ0xMSHgoZa19FTXNnR0NUb0dDRGlydHlTRE9D",
            "YWNoZRDUExIiCh1rX0VNc2dHQ1RvR0NVcGRhdGVTUUxLZXlWYWx1ZRDWExIo",
            "CiNrX0VNc2dHQ1RvR0NCcm9hZGNhc3RDb25zb2xlQ29tbWFuZBDZExIhChxr",
            "X0VNc2dHQ1NlcnZlclZlcnNpb25VcGRhdGVkENoTEhsKFmtfRU1zZ0dDQXBw",
            "bHlBdXRvZ3JhcGgQ2xMSJQoga19FTXNnR0NUb0dDV2ViQVBJQWNjb3VudENo",
            "YW5nZWQQ3BMSIQoca19FTXNnR0NDbGllbnRWZXJzaW9uVXBkYXRlZBDgExIh",
            "ChxrX0VNc2dHQ1RvR0NVcGRhdGVXZWxjb21lTXNnEOETEi4KKWtfRU1zZ0dD",
            "VG9HQ1BsYXllclN0cmFuZ2VDb3VudEFkanVzdG1lbnRzEOcTEiIKHWtfRU1z",
            "Z0dDUmVxdWVzdFN0b3JlU2FsZXNEYXRhEOgTEioKJWtfRU1zZ0dDUmVxdWVz",
            "dFN0b3JlU2FsZXNEYXRhUmVzcG9uc2UQ6RMSMgota19FTXNnR0NSZXF1ZXN0",
            "U3RvcmVTYWxlc0RhdGFVcFRvRGF0ZVJlc3BvbnNlEOoTEhwKF2tfRU1zZ0dD",
            "VG9HQ1BpbmdSZXF1ZXN0EOsTEh0KGGtfRU1zZ0dDVG9HQ1BpbmdSZXNwb25z",
            "ZRDsExIlCiBrX0VNc2dHQ1RvR0NHZXRVc2VyU2Vzc2lvblNlcnZlchDtExIt",
            "CihrX0VNc2dHQ1RvR0NHZXRVc2VyU2Vzc2lvblNlcnZlclJlc3BvbnNlEO4T",
            "EiUKIGtfRU1zZ0dDVG9HQ0dldFVzZXJTZXJ2ZXJNZW1iZXJzEO8TEi0KKGtf",
            "RU1zZ0dDVG9HQ0dldFVzZXJTZXJ2ZXJNZW1iZXJzUmVzcG9uc2UQ8BMSJAof",
            "a19FTXNnR0NUb0dDQ2FuVXNlRHJvcFJhdGVCb251cxDzExIeChlrX0VNc2dT",
            "UUxBZGREcm9wUmF0ZUJvbnVzEPQTEh8KGmtfRU1zZ0dDVG9HQ1JlZnJlc2hT",
            "T0NhY2hlEPUTEigKI2tfRU1zZ0dDVG9HQ0dyYW50QWNjb3VudFJvbGxlZEl0",
            "ZW1zEPoTEisKJmtfRU1zZ0dDVG9HQ0dyYW50U2VsZk1hZGVJdGVtVG9BY2Nv",
            "dW50EPsTEhgKE2tfRU1zZ0dDU3RhdHVlQ3JhZnQQgRQSFwoSa19FTXNnR0NS",
            "ZWRlZW1Db2RlEIIUEh8KGmtfRU1zZ0dDUmVkZWVtQ29kZVJlc3BvbnNlEIMU",
            "EigKI2tfRU1zZ0dDVG9HQ0l0ZW1Db25zdW1wdGlvblJvbGxiYWNrEIQUEicK",
            "ImtfRU1zZ0NsaWVudFRvR0NXcmFwQW5kRGVsaXZlckdpZnQQhRQSLwoqa19F",
            "TXNnQ2xpZW50VG9HQ1dyYXBBbmREZWxpdmVyR2lmdFJlc3BvbnNlEIYUEikK",
            "JGtfRU1zZ0NsaWVudFRvR0NVbnBhY2tCdW5kbGVSZXNwb25zZRCHFBIuCilr",
            "X0VNc2dHQ1RvQ2xpZW50U3RvcmVUcmFuc2FjdGlvbkNvbXBsZXRlZBCIFBIf",
            "ChprX0VNc2dDbGllbnRUb0dDRXF1aXBJdGVtcxCJFBInCiJrX0VNc2dDbGll",
            "bnRUb0dDRXF1aXBJdGVtc1Jlc3BvbnNlEIoUEiQKH2tfRU1zZ0NsaWVudFRv",
            "R0NVbmxvY2tJdGVtU3R5bGUQixQSLAona19FTXNnQ2xpZW50VG9HQ1VubG9j",
            "a0l0ZW1TdHlsZVJlc3BvbnNlEIwUEi0KKGtfRU1zZ0NsaWVudFRvR0NTZXRJ",
            "dGVtSW52ZW50b3J5Q2F0ZWdvcnkQjRQSIAoba19FTXNnQ2xpZW50VG9HQ1Vu",
            "bG9ja0NyYXRlEI4UEigKI2tfRU1zZ0NsaWVudFRvR0NVbmxvY2tDcmF0ZVJl",
            "c3BvbnNlEI8UEiEKHGtfRU1zZ0NsaWVudFRvR0NVbnBhY2tCdW5kbGUQkBQS",
            "IQoca19FTXNnQ2xpZW50VG9HQ1NldEl0ZW1TdHlsZRCRFBIpCiRrX0VNc2dD",
            "bGllbnRUb0dDU2V0SXRlbVN0eWxlUmVzcG9uc2UQkhQSJgoha19FTXNnU1FM",
            "R0NUb0dDR3JhbnRCYWNrcGFja1Nsb3RzEJQUEiYKIWtfRU1zZ0NsaWVudFRv",
            "R0NMb29rdXBBY2NvdW50TmFtZRCVFBIuCilrX0VNc2dDbGllbnRUb0dDTG9v",
            "a3VwQWNjb3VudE5hbWVSZXNwb25zZRCWFBInCiJrX0VNc2dDbGllbnRUb0dD",
            "Q3JlYXRlU3RhdGljUmVjaXBlEJgUEi8KKmtfRU1zZ0NsaWVudFRvR0NDcmVh",
            "dGVTdGF0aWNSZWNpcGVSZXNwb25zZRCZFBItCihrX0VNc2dHQ1RvR0NTdG9y",
            "ZVByb2Nlc3NDREtleVRyYW5zYWN0aW9uEJoUEjUKMGtfRU1zZ0dDVG9HQ1N0",
            "b3JlUHJvY2Vzc0NES2V5VHJhbnNhY3Rpb25SZXNwb25zZRCbFBInCiJrX0VN",
            "c2dHQ1RvR0NTdG9yZVByb2Nlc3NTZXR0bGVtZW50EJwUEi8KKmtfRU1zZ0dD",
            "VG9HQ1N0b3JlUHJvY2Vzc1NldHRsZW1lbnRSZXNwb25zZRCdFBIeChlrX0VN",
            "c2dHQ1RvR0NDb25zb2xlT3V0cHV0EJ4UEh0KGGtfRU1zZ0dDVG9DbGllbnRJ",
            "dGVtQWdlcxCfFBIgChtrX0VNc2dHQ1RvR0NJbnRlcm5hbFRlc3RNc2cQoBQS",
            "LAona19FTXNnR0NUb0dDQ2xpZW50U2VydmVyVmVyc2lvbnNVcGRhdGVkEKEU",
            "EiQKH2tfRU1zZ0dDVXNlTXVsdGlwbGVJdGVtc1JlcXVlc3QQohQSJwoia19F",
            "TXNnR0NHZXRBY2NvdW50U3Vic2NyaXB0aW9uSXRlbRCjFBIvCiprX0VNc2dH",
            "Q0dldEFjY291bnRTdWJzY3JpcHRpb25JdGVtUmVzcG9uc2UQpBQSKAoja19F",
            "TXNnR0NUb0dDQnJvYWRjYXN0TWVzc2FnZUZyb21TdWIQphQSKAoja19FTXNn",
            "R0NUb0NsaWVudEN1cnJlbmN5UHJpY2VQb2ludHMQpxQSJAofa19FTXNnR0NU",
            "b0dDQWRkU3Vic2NyaXB0aW9uVGltZRCoFBIpCiRrX0VNc2dHQ1RvR0NGbHVz",
            "aFN0ZWFtSW52ZW50b3J5Q2FjaGUQqRQSKAoja19FTXNnR0NSZXF1ZXN0Q3Jh",
            "dGVFc2NhbGF0aW9uTGV2ZWwQqhQSMAora19FTXNnR0NSZXF1ZXN0Q3JhdGVF",
            "c2NhbGF0aW9uTGV2ZWxSZXNwb25zZRCrFBIoCiNrX0VNc2dHQ1RvR0NVcGRh",
            "dGVTdWJzY3JpcHRpb25JdGVtcxCsFBIZChRrX0VNc2dHQ1RvR0NTZWxmUGlu",
            "ZxCtFBImCiFrX0VNc2dHQ1RvR0NHZXRJbmZ1eEludGVydmFsU3RhdHMQrhQS",
            "Lgopa19FTXNnR0NUb0dDR2V0SW5mdXhJbnRlcnZhbFN0YXRzUmVzcG9uc2UQ",
            "rxQSIgoda19FTXNnR0NUb0dDUHVyY2hhc2VTdWNjZWVkZWQQsBQSMwoua19F",
            "TXNnQ2xpZW50VG9HQ0dldExpbWl0ZWRJdGVtUHVyY2hhc2VRdWFudGl0eRCx",
            "FBI7CjZrX0VNc2dDbGllbnRUb0dDR2V0TGltaXRlZEl0ZW1QdXJjaGFzZVF1",
            "YW50aXR5UmVzcG9uc2UQshQSIAoba19FTXNnR0NUb0dDQmV0YURlbGV0ZUl0",
            "ZW1zELMUEisKJmtfRU1zZ0NsaWVudFRvR0NHZXRJbkZsaWdodEl0ZW1DaGFy",
            "Z2VzELQUEjMKLmtfRU1zZ0NsaWVudFRvR0NHZXRJbkZsaWdodEl0ZW1DaGFy",
            "Z2VzUmVzcG9uc2UQtRQSKwoma19FTXNnR0NUb0NsaWVudEluRmxpZ2h0Q2hh",
            "cmdlc1VwZGF0ZWQQthQSLAona19FTXNnQ2xpZW50VG9HQ1B1cmNoYXNlQ2hh",
            "cmdlQ29zdEl0ZW1zELcUEjQKL2tfRU1zZ0NsaWVudFRvR0NQdXJjaGFzZUNo",
            "YXJnZUNvc3RJdGVtc1Jlc3BvbnNlELgUEjIKLWtfRU1zZ0NsaWVudFRvR0ND",
            "YW5jZWxVbmZpbmFsaXplZFRyYW5zYWN0aW9ucxC5FBI6CjVrX0VNc2dDbGll",
            "bnRUb0dDQ2FuY2VsVW5maW5hbGl6ZWRUcmFuc2FjdGlvbnNSZXNwb25zZRC6",
            "FCq5CgobRUdDTXNnSW5pdGlhdGVUcmFkZVJlc3BvbnNlEioKJmtfRUdDTXNn",
            "SW5pdGlhdGVUcmFkZVJlc3BvbnNlX0FjY2VwdGVkEAASKgoma19FR0NNc2dJ",
            "bml0aWF0ZVRyYWRlUmVzcG9uc2VfRGVjbGluZWQQARI2CjJrX0VHQ01zZ0lu",
            "aXRpYXRlVHJhZGVSZXNwb25zZV9WQUNfQmFubmVkX0luaXRpYXRvchACEjMK",
            "L2tfRUdDTXNnSW5pdGlhdGVUcmFkZVJlc3BvbnNlX1ZBQ19CYW5uZWRfVGFy",
            "Z2V0EAMSOAo0a19FR0NNc2dJbml0aWF0ZVRyYWRlUmVzcG9uc2VfVGFyZ2V0",
            "X0FscmVhZHlfVHJhZGluZxAEEioKJmtfRUdDTXNnSW5pdGlhdGVUcmFkZVJl",
            "c3BvbnNlX0Rpc2FibGVkEAUSLQopa19FR0NNc2dJbml0aWF0ZVRyYWRlUmVz",
            "cG9uc2VfTm90TG9nZ2VkSW4QBhIoCiRrX0VHQ01zZ0luaXRpYXRlVHJhZGVS",
            "ZXNwb25zZV9DYW5jZWwQBxIpCiVrX0VHQ01zZ0luaXRpYXRlVHJhZGVSZXNw",
            "b25zZV9Ub29Tb29uEAgSMAosa19FR0NNc2dJbml0aWF0ZVRyYWRlUmVzcG9u",
            "c2VfVG9vU29vblBlbmFsdHkQCRI4CjRrX0VHQ01zZ0luaXRpYXRlVHJhZGVS",
            "ZXNwb25zZV9UcmFkZV9CYW5uZWRfSW5pdGlhdG9yEAoSNQoxa19FR0NNc2dJ",
            "bml0aWF0ZVRyYWRlUmVzcG9uc2VfVHJhZGVfQmFubmVkX1RhcmdldBALEkMK",
            "P2tfRUdDTXNnSW5pdGlhdGVUcmFkZVJlc3BvbnNlX0ZyZWVfQWNjb3VudF9J",
            "bml0aWF0b3JfREVQUkVDQVRFRBAMEjoKNmtfRUdDTXNnSW5pdGlhdGVUcmFk",
            "ZVJlc3BvbnNlX1NoYXJlZF9BY2NvdW50X0luaXRpYXRvchANEjUKMWtfRUdD",
            "TXNnSW5pdGlhdGVUcmFkZVJlc3BvbnNlX1NlcnZpY2VfVW5hdmFpbGFibGUQ",
            "DhIwCixrX0VHQ01zZ0luaXRpYXRlVHJhZGVSZXNwb25zZV9UYXJnZXRfQmxv",
            "Y2tlZBAPEjMKL2tfRUdDTXNnSW5pdGlhdGVUcmFkZVJlc3BvbnNlX05lZWRW",
            "ZXJpZmllZEVtYWlsEBASMAosa19FR0NNc2dJbml0aWF0ZVRyYWRlUmVzcG9u",
            "c2VfTmVlZFN0ZWFtR3VhcmQQERI0CjBrX0VHQ01zZ0luaXRpYXRlVHJhZGVS",
            "ZXNwb25zZV9TdGVhbUd1YXJkRHVyYXRpb24QEhIxCi1rX0VHQ01zZ0luaXRp",
            "YXRlVHJhZGVSZXNwb25zZV9UaGV5Q2Fubm90VHJhZGUQExI3CjNrX0VHQ01z",
            "Z0luaXRpYXRlVHJhZGVSZXNwb25zZV9SZWNlbnRfUGFzc3dvcmRfUmVzZXQQ",
            "FBIyCi5rX0VHQ01zZ0luaXRpYXRlVHJhZGVSZXNwb25zZV9Vc2luZ19OZXdf",
            "RGV2aWNlEBUSNQoxa19FR0NNc2dJbml0aWF0ZVRyYWRlUmVzcG9uc2VfU2Vu",
            "dF9JbnZhbGlkX0Nvb2tpZRAWEjEKLWtfRUdDTXNnSW5pdGlhdGVUcmFkZVJl",
            "c3BvbnNlX1Rvb1JlY2VudEZyaWVuZBAXEjcKM2tfRUdDTXNnSW5pdGlhdGVU",
            "cmFkZVJlc3BvbnNlX1dhbGxlZEZ1bmRzTm90VHJ1c3RlZBAYQhWqAhJTdGVh",
            "bS5Qcm90b3MuRG90YTI="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Steam.Protos.Dota2.SteammessagesReflection.Descriptor, global::Steam.Protos.Dota2.EconSharedEnumsReflection.Descriptor, global::Steam.Protos.Dota2.GcsdkGcmessagesReflection.Descriptor, global::Steam.Protos.Dota2.BaseGcmessagesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Steam.Protos.Dota2.EGCItemMsg), typeof(global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgApplyAutograph), global::Steam.Protos.Dota2.CMsgApplyAutograph.Parser, new[]{ "AutographItemId", "ItemItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgAdjustItemEquippedState), global::Steam.Protos.Dota2.CMsgAdjustItemEquippedState.Parser, new[]{ "ItemId", "NewClass", "NewSlot", "StyleIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgEconPlayerStrangeCountAdjustment), global::Steam.Protos.Dota2.CMsgEconPlayerStrangeCountAdjustment.Parser, new[]{ "AccountId", "StrangeCountAdjustments", "TurboMode" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgEconPlayerStrangeCountAdjustment.Types.CStrangeCountAdjustment), global::Steam.Protos.Dota2.CMsgEconPlayerStrangeCountAdjustment.Types.CStrangeCountAdjustment.Parser, new[]{ "EventType", "ItemId", "Adjustment" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgCraftingResponse), global::Steam.Protos.Dota2.CMsgCraftingResponse.Parser, new[]{ "ItemIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCRequestStoreSalesData), global::Steam.Protos.Dota2.CMsgGCRequestStoreSalesData.Parser, new[]{ "Version", "Currency" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCRequestStoreSalesDataResponse), global::Steam.Protos.Dota2.CMsgGCRequestStoreSalesDataResponse.Parser, new[]{ "SalePrice", "Version", "ExpirationTime" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCRequestStoreSalesDataResponse.Types.Price), global::Steam.Protos.Dota2.CMsgGCRequestStoreSalesDataResponse.Types.Price.Parser, new[]{ "ItemDef", "Price_" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCRequestStoreSalesDataUpToDateResponse), global::Steam.Protos.Dota2.CMsgGCRequestStoreSalesDataUpToDateResponse.Parser, new[]{ "Version", "ExpirationTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCPingRequest), global::Steam.Protos.Dota2.CMsgGCToGCPingRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCPingResponse), global::Steam.Protos.Dota2.CMsgGCToGCPingResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCGetUserSessionServer), global::Steam.Protos.Dota2.CMsgGCToGCGetUserSessionServer.Parser, new[]{ "AccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCGetUserSessionServerResponse), global::Steam.Protos.Dota2.CMsgGCToGCGetUserSessionServerResponse.Parser, new[]{ "ServerSteamId", "IsOnline" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCGetUserServerMembers), global::Steam.Protos.Dota2.CMsgGCToGCGetUserServerMembers.Parser, new[]{ "AccountId", "MaxSpectators" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCGetUserServerMembersResponse), global::Steam.Protos.Dota2.CMsgGCToGCGetUserServerMembersResponse.Parser, new[]{ "MemberAccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgLookupMultipleAccountNames), global::Steam.Protos.Dota2.CMsgLookupMultipleAccountNames.Parser, new[]{ "Accountids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgLookupMultipleAccountNamesResponse), global::Steam.Protos.Dota2.CMsgLookupMultipleAccountNamesResponse.Parser, new[]{ "Accounts" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgLookupMultipleAccountNamesResponse.Types.Account), global::Steam.Protos.Dota2.CMsgLookupMultipleAccountNamesResponse.Types.Account.Parser, new[]{ "Accountid", "Persona" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgRequestCrateItems), global::Steam.Protos.Dota2.CMsgRequestCrateItems.Parser, new[]{ "CrateItemDef" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgRequestCrateItemsResponse), global::Steam.Protos.Dota2.CMsgRequestCrateItemsResponse.Parser, new[]{ "Response", "ItemDefs", "PeekItemDefs", "PeekItems" }, null, new[]{ typeof(global::Steam.Protos.Dota2.CMsgRequestCrateItemsResponse.Types.EResult) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgRequestCrateEscalationLevel), global::Steam.Protos.Dota2.CMsgRequestCrateEscalationLevel.Parser, new[]{ "CrateItemDef" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgRequestCrateEscalationLevelResponse), global::Steam.Protos.Dota2.CMsgRequestCrateEscalationLevelResponse.Parser, new[]{ "Response", "EscalationLevel0", "EscalationLevel1", "EscalationLevel2", "EscalationLevel3" }, null, new[]{ typeof(global::Steam.Protos.Dota2.CMsgRequestCrateEscalationLevelResponse.Types.EResult) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCCanUseDropRateBonus), global::Steam.Protos.Dota2.CMsgGCToGCCanUseDropRateBonus.Parser, new[]{ "AccountId", "DropRateBonus", "BoosterType", "ExclusiveItemDef", "AllowEqualRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgSQLAddDropRateBonus), global::Steam.Protos.Dota2.CMsgSQLAddDropRateBonus.Parser, new[]{ "AccountId", "ItemId", "ItemDef", "DropRateBonus", "BoosterType", "SecondsDuration", "EndTimeStamp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgSQLUpgradeBattleBooster), global::Steam.Protos.Dota2.CMsgSQLUpgradeBattleBooster.Parser, new[]{ "AccountId", "ItemDef", "BonusToAdd", "BoosterType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCRefreshSOCache), global::Steam.Protos.Dota2.CMsgGCToGCRefreshSOCache.Parser, new[]{ "AccountId", "Reload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCAddSubscriptionTime), global::Steam.Protos.Dota2.CMsgGCToGCAddSubscriptionTime.Parser, new[]{ "AccountId", "MatchingSubscriptionDefIndexes", "AdditionalSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems), global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Parser, new[]{ "AccountId", "Items", "AuditAction", "AuditData" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item), global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Parser, new[]{ "ItemDef", "LootLists", "IgnoreLimit", "Origin", "DynamicAttributes", "AdditionalAuditEntries", "InventoryToken", "Quality" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Types.DynamicAttribute), global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Types.DynamicAttribute.Parser, new[]{ "Name", "ValueUint32", "ValueFloat", "ValueString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Types.AdditionalAuditEntry), global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Types.AdditionalAuditEntry.Parser, new[]{ "OwnerAccountId", "AuditAction", "AuditData" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCBetaDeleteItems), global::Steam.Protos.Dota2.CMsgGCToGCBetaDeleteItems.Parser, new[]{ "AccountId", "ItemIds", "ItemDefs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCGrantSelfMadeItemToAccount), global::Steam.Protos.Dota2.CMsgGCToGCGrantSelfMadeItemToAccount.Parser, new[]{ "ItemDefIndex", "Accountid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgUseItem), global::Steam.Protos.Dota2.CMsgUseItem.Parser, new[]{ "ItemId", "TargetSteamId", "GiftPotentialTargets", "DuelClassLock", "InitiatorSteamId", "ItempackAckImmediately" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgServerUseItem), global::Steam.Protos.Dota2.CMsgServerUseItem.Parser, new[]{ "InitiatorAccountId", "UseItemMsg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgUseMultipleItems), global::Steam.Protos.Dota2.CMsgUseMultipleItems.Parser, new[]{ "ItemIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CGCStoreRechargeRedirect_LineItem), global::Steam.Protos.Dota2.CGCStoreRechargeRedirect_LineItem.Parser, new[]{ "ItemDefId", "Quantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCEconSQLWorkItemEmbeddedRollbackData), global::Steam.Protos.Dota2.CMsgGCEconSQLWorkItemEmbeddedRollbackData.Parser, new[]{ "AccountId", "DeletedItemId", "OldAuditAction", "NewAuditAction", "ExpectedAuditAction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgCraftStatue), global::Steam.Protos.Dota2.CMsgCraftStatue.Parser, new[]{ "Heroid", "Sequencename", "Cycle", "Description", "PedestalItemdef", "Toolid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgRedeemCode), global::Steam.Protos.Dota2.CMsgRedeemCode.Parser, new[]{ "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgRedeemCodeResponse), global::Steam.Protos.Dota2.CMsgRedeemCodeResponse.Parser, new[]{ "Response", "ItemId" }, null, new[]{ typeof(global::Steam.Protos.Dota2.CMsgRedeemCodeResponse.Types.EResultCode) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgDevNewItemRequest), global::Steam.Protos.Dota2.CMsgDevNewItemRequest.Parser, new[]{ "ItemDefName", "LootListName", "AttrDefName", "AttrValue", "ItemQuality" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgDevNewItemRequestResponse), global::Steam.Protos.Dota2.CMsgDevNewItemRequestResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgDevUnlockAllItemStyles), global::Steam.Protos.Dota2.CMsgDevUnlockAllItemStyles.Parser, new[]{ "ItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgDevUnlockAllItemStylesResponse), global::Steam.Protos.Dota2.CMsgDevUnlockAllItemStylesResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCGetAccountSubscriptionItem), global::Steam.Protos.Dota2.CMsgGCGetAccountSubscriptionItem.Parser, new[]{ "AccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCGetAccountSubscriptionItemResponse), global::Steam.Protos.Dota2.CMsgGCGetAccountSubscriptionItemResponse.Parser, new[]{ "DefIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCAddGiftItem), global::Steam.Protos.Dota2.CMsgGCAddGiftItem.Parser, new[]{ "GifterAccountId", "ReceiverAccountId", "WrappedItem", "GiftMessage", "IsWalletCashTrusted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCWrapAndDeliverGift), global::Steam.Protos.Dota2.CMsgClientToGCWrapAndDeliverGift.Parser, new[]{ "ItemId", "GiveToAccountId", "GiftMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgSQLGCToGCRevokeUntrustedGift), global::Steam.Protos.Dota2.CMsgSQLGCToGCRevokeUntrustedGift.Parser, new[]{ "AccountId", "SentItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCWrapAndDeliverGiftResponse), global::Steam.Protos.Dota2.CMsgClientToGCWrapAndDeliverGiftResponse.Parser, new[]{ "Response", "GiftingChargeUses", "GiftingChargeMax", "GiftingUses", "GiftingMax", "GiftingWindowHours", "TradeRestriction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCUnwrapGift), global::Steam.Protos.Dota2.CMsgClientToGCUnwrapGift.Parser, new[]{ "ItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCGetGiftPermissions), global::Steam.Protos.Dota2.CMsgClientToGCGetGiftPermissions.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCGetGiftPermissionsResponse), global::Steam.Protos.Dota2.CMsgClientToGCGetGiftPermissionsResponse.Parser, new[]{ "IsUnlimited", "HasTwoFactor", "SenderPermission", "FriendshipAgeRequirement", "FriendshipAgeRequirementTwoFactor", "FriendPermissions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCGetGiftPermissionsResponse.Types.FriendPermission), global::Steam.Protos.Dota2.CMsgClientToGCGetGiftPermissionsResponse.Types.FriendPermission.Parser, new[]{ "AccountId", "Permission" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCUnpackBundle), global::Steam.Protos.Dota2.CMsgClientToGCUnpackBundle.Parser, new[]{ "ItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCUnpackBundleResponse), global::Steam.Protos.Dota2.CMsgClientToGCUnpackBundleResponse.Parser, new[]{ "UnpackedItemIds", "Response", "UnpackedItemDefIndexes" }, null, new[]{ typeof(global::Steam.Protos.Dota2.CMsgClientToGCUnpackBundleResponse.Types.EUnpackBundle) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCPackBundle), global::Steam.Protos.Dota2.CMsgClientToGCPackBundle.Parser, new[]{ "ItemIds", "BundleItemDefIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCPackBundleResponse), global::Steam.Protos.Dota2.CMsgClientToGCPackBundleResponse.Parser, new[]{ "ItemId", "Response" }, null, new[]{ typeof(global::Steam.Protos.Dota2.CMsgClientToGCPackBundleResponse.Types.EPackBundle) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToClientStoreTransactionCompleted), global::Steam.Protos.Dota2.CMsgGCToClientStoreTransactionCompleted.Parser, new[]{ "TxnId", "ItemIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCEquipItems), global::Steam.Protos.Dota2.CMsgClientToGCEquipItems.Parser, new[]{ "Equips" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCEquipItemsResponse), global::Steam.Protos.Dota2.CMsgClientToGCEquipItemsResponse.Parser, new[]{ "SoCacheVersionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCSetItemStyle), global::Steam.Protos.Dota2.CMsgClientToGCSetItemStyle.Parser, new[]{ "ItemId", "StyleIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCSetItemStyleResponse), global::Steam.Protos.Dota2.CMsgClientToGCSetItemStyleResponse.Parser, new[]{ "Response" }, null, new[]{ typeof(global::Steam.Protos.Dota2.CMsgClientToGCSetItemStyleResponse.Types.ESetStyle) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCUnlockItemStyle), global::Steam.Protos.Dota2.CMsgClientToGCUnlockItemStyle.Parser, new[]{ "ItemToUnlock", "StyleIndex", "ConsumableItemIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCUnlockItemStyleResponse), global::Steam.Protos.Dota2.CMsgClientToGCUnlockItemStyleResponse.Parser, new[]{ "Response", "ItemId", "StyleIndex", "StylePrereq" }, null, new[]{ typeof(global::Steam.Protos.Dota2.CMsgClientToGCUnlockItemStyleResponse.Types.EUnlockStyle) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCSetItemInventoryCategory), global::Steam.Protos.Dota2.CMsgClientToGCSetItemInventoryCategory.Parser, new[]{ "ItemIds", "SetToValue", "RemoveCategories", "AddCategories" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCUnlockCrate), global::Steam.Protos.Dota2.CMsgClientToGCUnlockCrate.Parser, new[]{ "CrateItemId", "KeyItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCUnlockCrateResponse), global::Steam.Protos.Dota2.CMsgClientToGCUnlockCrateResponse.Parser, new[]{ "Result", "GrantedItems" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCUnlockCrateResponse.Types.Item), global::Steam.Protos.Dota2.CMsgClientToGCUnlockCrateResponse.Types.Item.Parser, new[]{ "ItemId", "DefIndex" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCRemoveItemAttribute), global::Steam.Protos.Dota2.CMsgClientToGCRemoveItemAttribute.Parser, new[]{ "ItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCRemoveItemAttributeResponse), global::Steam.Protos.Dota2.CMsgClientToGCRemoveItemAttributeResponse.Parser, new[]{ "Response", "ItemId" }, null, new[]{ typeof(global::Steam.Protos.Dota2.CMsgClientToGCRemoveItemAttributeResponse.Types.ERemoveItemAttribute) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCNameItem), global::Steam.Protos.Dota2.CMsgClientToGCNameItem.Parser, new[]{ "SubjectItemId", "ToolItemId", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCNameItemResponse), global::Steam.Protos.Dota2.CMsgClientToGCNameItemResponse.Parser, new[]{ "Response", "ItemId" }, null, new[]{ typeof(global::Steam.Protos.Dota2.CMsgClientToGCNameItemResponse.Types.ENameItem) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCSetItemPosition), global::Steam.Protos.Dota2.CMsgGCSetItemPosition.Parser, new[]{ "ItemId", "NewPosition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CAttribute_ItemDynamicRecipeComponent), global::Steam.Protos.Dota2.CAttribute_ItemDynamicRecipeComponent.Parser, new[]{ "ItemDef", "ItemQuality", "ItemFlags", "AttributesString", "ItemCount", "ItemsFulfilled", "ItemRarity", "Lootlist", "FulfilledItemId", "AssociatedItemDef" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CProtoItemSocket), global::Steam.Protos.Dota2.CProtoItemSocket.Parser, new[]{ "ItemId", "AttrDefIndex", "RequiredType", "RequiredHero", "GemDefIndex", "NotTradable", "RequiredItemSlot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CProtoItemSocket_Empty), global::Steam.Protos.Dota2.CProtoItemSocket_Empty.Parser, new[]{ "Socket" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CProtoItemSocket_Effect), global::Steam.Protos.Dota2.CProtoItemSocket_Effect.Parser, new[]{ "Socket", "Effect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CProtoItemSocket_Color), global::Steam.Protos.Dota2.CProtoItemSocket_Color.Parser, new[]{ "Socket", "Red", "Green", "Blue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CProtoItemSocket_Strange), global::Steam.Protos.Dota2.CProtoItemSocket_Strange.Parser, new[]{ "Socket", "StrangeType", "StrangeValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY), global::Steam.Protos.Dota2.CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY.Parser, new[]{ "Socket", "StrangeType", "StrangeValue", "AbilityEffect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CProtoItemSocket_Spectator), global::Steam.Protos.Dota2.CProtoItemSocket_Spectator.Parser, new[]{ "Socket", "GamesViewed", "CorporationId", "LeagueId", "TeamId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CProtoItemSocket_AssetModifier), global::Steam.Protos.Dota2.CProtoItemSocket_AssetModifier.Parser, new[]{ "Socket", "AssetModifier" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY), global::Steam.Protos.Dota2.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.Parser, new[]{ "Socket", "AssetModifier", "AnimModifier", "AbilityEffect" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CProtoItemSocket_Autograph), global::Steam.Protos.Dota2.CProtoItemSocket_Autograph.Parser, new[]{ "Socket", "Autograph", "AutographId", "AutographScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CProtoItemSocket_StaticVisuals), global::Steam.Protos.Dota2.CProtoItemSocket_StaticVisuals.Parser, new[]{ "Socket" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CAttribute_String), global::Steam.Protos.Dota2.CAttribute_String.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CWorkshop_GetItemDailyRevenue_Request), global::Steam.Protos.Dota2.CWorkshop_GetItemDailyRevenue_Request.Parser, new[]{ "Appid", "ItemId", "DateStart", "DateEnd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CWorkshop_GetItemDailyRevenue_Response), global::Steam.Protos.Dota2.CWorkshop_GetItemDailyRevenue_Response.Parser, new[]{ "CountryRevenue" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CWorkshop_GetItemDailyRevenue_Response.Types.CountryDailyRevenue), global::Steam.Protos.Dota2.CWorkshop_GetItemDailyRevenue_Response.Types.CountryDailyRevenue.Parser, new[]{ "CountryCode", "Date", "RevenueUsd", "Units" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CWorkshop_GetPackageDailyRevenue_Request), global::Steam.Protos.Dota2.CWorkshop_GetPackageDailyRevenue_Request.Parser, new[]{ "Packageid", "DateStart", "DateEnd" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CWorkshop_GetPackageDailyRevenue_Response), global::Steam.Protos.Dota2.CWorkshop_GetPackageDailyRevenue_Response.Parser, new[]{ "CountryRevenue" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CWorkshop_GetPackageDailyRevenue_Response.Types.CountryDailyRevenue), global::Steam.Protos.Dota2.CWorkshop_GetPackageDailyRevenue_Response.Types.CountryDailyRevenue.Parser, new[]{ "CountryCode", "Date", "RevenueUsd", "Units" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgSQLGCToGCGrantBackpackSlots), global::Steam.Protos.Dota2.CMsgSQLGCToGCGrantBackpackSlots.Parser, new[]{ "AccountId", "AddSlots" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCLookupAccountName), global::Steam.Protos.Dota2.CMsgClientToGCLookupAccountName.Parser, new[]{ "AccountId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCLookupAccountNameResponse), global::Steam.Protos.Dota2.CMsgClientToGCLookupAccountNameResponse.Parser, new[]{ "AccountId", "AccountName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipe), global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipe.Parser, new[]{ "Items", "RecipeDefIndex" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipe.Types.Item), global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipe.Types.Item.Parser, new[]{ "ItemId", "SlotId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse), global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Parser, new[]{ "Response", "OutputItems", "InputErrors", "AdditionalOutputs" }, null, new[]{ typeof(global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.EResponse) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.OutputItem), global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.OutputItem.Parser, new[]{ "DefIndex", "ItemId", "SlotId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.InputError), global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.InputError.Parser, new[]{ "SlotId", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.AdditionalOutput), global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.AdditionalOutput.Parser, new[]{ "SlotId", "Value" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgProcessTransactionOrder), global::Steam.Protos.Dota2.CMsgProcessTransactionOrder.Parser, new[]{ "TxnId", "SteamTxnId", "PartnerTxnId", "SteamId", "TimeStamp", "Watermark", "PurchaseReportStatus", "Currency", "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgProcessTransactionOrder.Types.Item), global::Steam.Protos.Dota2.CMsgProcessTransactionOrder.Types.Item.Parser, new[]{ "ItemDefIndex", "ItemPrice", "Quantity", "CategoryDesc", "StorePurchaseType", "SourceReferenceId", "ParentStackIndex", "DefaultPrice", "IsUserFacing", "PriceIndex" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCStoreProcessCDKeyTransaction), global::Steam.Protos.Dota2.CMsgGCToGCStoreProcessCDKeyTransaction.Parser, new[]{ "Order", "ReasonCode", "Partner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCStoreProcessCDKeyTransactionResponse), global::Steam.Protos.Dota2.CMsgGCToGCStoreProcessCDKeyTransactionResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCStoreProcessSettlement), global::Steam.Protos.Dota2.CMsgGCToGCStoreProcessSettlement.Parser, new[]{ "Order" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCStoreProcessSettlementResponse), global::Steam.Protos.Dota2.CMsgGCToGCStoreProcessSettlementResponse.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCBroadcastConsoleCommand), global::Steam.Protos.Dota2.CMsgGCToGCBroadcastConsoleCommand.Parser, new[]{ "ConCommand", "ReportOutput", "SendingGc", "OutputInitiator", "SenderSource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCConsoleOutput), global::Steam.Protos.Dota2.CMsgGCToGCConsoleOutput.Parser, new[]{ "Initiator", "SendingGc", "Msgs", "IsLastForSourceJob" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCConsoleOutput.Types.OutputLine), global::Steam.Protos.Dota2.CMsgGCToGCConsoleOutput.Types.OutputLine.Parser, new[]{ "Text", "SpewLevel" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgItemAges), global::Steam.Protos.Dota2.CMsgItemAges.Parser, new[]{ "MaxItemIdTimestamps" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgItemAges.Types.MaxItemIDTimestamp), global::Steam.Protos.Dota2.CMsgItemAges.Types.MaxItemIDTimestamp.Parser, new[]{ "Timestamp", "MaxItemId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCInternalTestMsg), global::Steam.Protos.Dota2.CMsgGCToGCInternalTestMsg.Parser, new[]{ "SendingGc", "SenderId", "Context", "MessageId", "MessageBody", "JobIdSource", "JobIdTarget" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCClientServerVersionsUpdated), global::Steam.Protos.Dota2.CMsgGCToGCClientServerVersionsUpdated.Parser, new[]{ "ClientMinAllowedVersion", "ClientActiveVersion", "ServerActiveVersion", "ServerDeployedVersion", "WhatChanged" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCBroadcastMessageFromSub), global::Steam.Protos.Dota2.CMsgGCToGCBroadcastMessageFromSub.Parser, new[]{ "MsgId", "SerializedMsg", "AccountIdList", "SteamIdList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToClientCurrencyPricePoints), global::Steam.Protos.Dota2.CMsgGCToClientCurrencyPricePoints.Parser, new[]{ "PriceKey", "Currencies" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToClientCurrencyPricePoints.Types.Currency), global::Steam.Protos.Dota2.CMsgGCToClientCurrencyPricePoints.Types.Currency.Parser, new[]{ "CurrencyId", "CurrencyPrice" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgBannedWordList), global::Steam.Protos.Dota2.CMsgBannedWordList.Parser, new[]{ "Version", "BannedWords" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCFlushSteamInventoryCache), global::Steam.Protos.Dota2.CMsgGCToGCFlushSteamInventoryCache.Parser, new[]{ "Keys" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCFlushSteamInventoryCache.Types.Key), global::Steam.Protos.Dota2.CMsgGCToGCFlushSteamInventoryCache.Types.Key.Parser, new[]{ "Steamid", "Contextid" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCUpdateSubscriptionItems), global::Steam.Protos.Dota2.CMsgGCToGCUpdateSubscriptionItems.Parser, new[]{ "AccountId", "AlwaysNotify" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCSelfPing), global::Steam.Protos.Dota2.CMsgGCToGCSelfPing.Parser, new[]{ "SampleId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCGetInfuxIntervalStats), global::Steam.Protos.Dota2.CMsgGCToGCGetInfuxIntervalStats.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCGetInfuxIntervalStatsResponse), global::Steam.Protos.Dota2.CMsgGCToGCGetInfuxIntervalStatsResponse.Parser, new[]{ "StatIds", "StatTotal", "StatSamples", "StatMax", "SampleDurationMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCPurchaseSucceeded), global::Steam.Protos.Dota2.CMsgGCToGCPurchaseSucceeded.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCGetLimitedItemPurchaseQuantity), global::Steam.Protos.Dota2.CMsgClientToGCGetLimitedItemPurchaseQuantity.Parser, new[]{ "ItemDef" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCGetLimitedItemPurchaseQuantityResponse), global::Steam.Protos.Dota2.CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.Parser, new[]{ "Result", "QuantityPurchased" }, null, new[]{ typeof(global::Steam.Protos.Dota2.CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.Types.EResponse) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCGetInFlightItemCharges), global::Steam.Protos.Dota2.CMsgClientToGCGetInFlightItemCharges.Parser, new[]{ "ItemDef" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCGetInFlightItemChargesResponse), global::Steam.Protos.Dota2.CMsgClientToGCGetInFlightItemChargesResponse.Parser, new[]{ "Result", "ChargesInFlight" }, null, new[]{ typeof(global::Steam.Protos.Dota2.CMsgClientToGCGetInFlightItemChargesResponse.Types.EResponse) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItems), global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItems.Parser, new[]{ "Items", "Currency" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItems.Types.Item), global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItems.Types.Item.Parser, new[]{ "ItemDefIndex", "Quantity", "SourceReferenceId", "PriceIndex" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItemsResponse), global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItemsResponse.Parser, new[]{ "Result", "ItemIds" }, null, new[]{ typeof(global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItemsResponse.Types.EResponse) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToClientInFlightChargesUpdated), global::Steam.Protos.Dota2.CMsgGCToClientInFlightChargesUpdated.Parser, new[]{ "InFlightCharges" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToClientInFlightChargesUpdated.Types.ItemCharges), global::Steam.Protos.Dota2.CMsgGCToClientInFlightChargesUpdated.Types.ItemCharges.Parser, new[]{ "ItemDef", "ChargesInFlight" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCCancelUnfinalizedTransactions), global::Steam.Protos.Dota2.CMsgClientToGCCancelUnfinalizedTransactions.Parser, new[]{ "Unused" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgClientToGCCancelUnfinalizedTransactionsResponse), global::Steam.Protos.Dota2.CMsgClientToGCCancelUnfinalizedTransactionsResponse.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Steam.Protos.Dota2.CMsgGCToGCUpdateWelcomeMsg), global::Steam.Protos.Dota2.CMsgGCToGCUpdateWelcomeMsg.Parser, new[]{ "Server", "NewMsg", "Broadcast" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EGCItemMsg {
    [pbr::OriginalName("k_EMsgGCBase")] KEmsgGcbase = 1000,
    [pbr::OriginalName("k_EMsgGCSetItemPosition")] KEmsgGcsetItemPosition = 1001,
    [pbr::OriginalName("k_EMsgClientToGCPackBundle")] KEmsgClientToGcpackBundle = 1002,
    [pbr::OriginalName("k_EMsgClientToGCPackBundleResponse")] KEmsgClientToGcpackBundleResponse = 1003,
    [pbr::OriginalName("k_EMsgGCDelete")] KEmsgGcdelete = 1004,
    [pbr::OriginalName("k_EMsgGCVerifyCacheSubscription")] KEmsgGcverifyCacheSubscription = 1005,
    [pbr::OriginalName("k_EMsgClientToGCNameItem")] KEmsgClientToGcnameItem = 1006,
    [pbr::OriginalName("k_EMsgGCPaintItem")] KEmsgGcpaintItem = 1009,
    [pbr::OriginalName("k_EMsgGCPaintItemResponse")] KEmsgGcpaintItemResponse = 1010,
    [pbr::OriginalName("k_EMsgGCNameBaseItem")] KEmsgGcnameBaseItem = 1019,
    [pbr::OriginalName("k_EMsgGCNameBaseItemResponse")] KEmsgGcnameBaseItemResponse = 1020,
    [pbr::OriginalName("k_EMsgGCUseItemRequest")] KEmsgGcuseItemRequest = 1025,
    [pbr::OriginalName("k_EMsgGCUseItemResponse")] KEmsgGcuseItemResponse = 1026,
    [pbr::OriginalName("k_EMsgGCGiftedItems")] KEmsgGcgiftedItems = 1027,
    [pbr::OriginalName("k_EMsgGCUnwrapGiftRequest")] KEmsgGcunwrapGiftRequest = 1037,
    [pbr::OriginalName("k_EMsgGCUnwrapGiftResponse")] KEmsgGcunwrapGiftResponse = 1038,
    [pbr::OriginalName("k_EMsgGCSortItems")] KEmsgGcsortItems = 1041,
    [pbr::OriginalName("k_EMsgGCBackpackSortFinished")] KEmsgGcbackpackSortFinished = 1058,
    [pbr::OriginalName("k_EMsgGCAdjustItemEquippedState")] KEmsgGcadjustItemEquippedState = 1059,
    [pbr::OriginalName("k_EMsgGCItemAcknowledged")] KEmsgGcitemAcknowledged = 1062,
    [pbr::OriginalName("k_EMsgClientToGCNameItemResponse")] KEmsgClientToGcnameItemResponse = 1068,
    [pbr::OriginalName("k_EMsgGCApplyStrangePart")] KEmsgGcapplyStrangePart = 1073,
    [pbr::OriginalName("k_EMsgGCApplyPennantUpgrade")] KEmsgGcapplyPennantUpgrade = 1076,
    [pbr::OriginalName("k_EMsgGCSetItemPositions")] KEmsgGcsetItemPositions = 1077,
    [pbr::OriginalName("k_EMsgGCApplyEggEssence")] KEmsgGcapplyEggEssence = 1078,
    [pbr::OriginalName("k_EMsgGCNameEggEssenceResponse")] KEmsgGcnameEggEssenceResponse = 1079,
    [pbr::OriginalName("k_EMsgGCExtractGems")] KEmsgGcextractGems = 1086,
    [pbr::OriginalName("k_EMsgGCAddSocket")] KEmsgGcaddSocket = 1087,
    [pbr::OriginalName("k_EMsgGCAddItemToSocket")] KEmsgGcaddItemToSocket = 1088,
    [pbr::OriginalName("k_EMsgGCAddItemToSocketResponse")] KEmsgGcaddItemToSocketResponse = 1089,
    [pbr::OriginalName("k_EMsgGCAddSocketResponse")] KEmsgGcaddSocketResponse = 1090,
    [pbr::OriginalName("k_EMsgGCResetStrangeGemCount")] KEmsgGcresetStrangeGemCount = 1091,
    [pbr::OriginalName("k_EMsgGCRequestCrateItems")] KEmsgGcrequestCrateItems = 1092,
    [pbr::OriginalName("k_EMsgGCRequestCrateItemsResponse")] KEmsgGcrequestCrateItemsResponse = 1093,
    [pbr::OriginalName("k_EMsgGCExtractGemsResponse")] KEmsgGcextractGemsResponse = 1094,
    [pbr::OriginalName("k_EMsgGCResetStrangeGemCountResponse")] KEmsgGcresetStrangeGemCountResponse = 1095,
    [pbr::OriginalName("k_EMsgGCServerUseItemRequest")] KEmsgGcserverUseItemRequest = 1103,
    [pbr::OriginalName("k_EMsgGCAddGiftItem")] KEmsgGcaddGiftItem = 1104,
    [pbr::OriginalName("k_EMsgSQLGCToGCRevokeUntrustedGift")] KEmsgSqlgctoGcrevokeUntrustedGift = 1105,
    [pbr::OriginalName("k_EMsgClientToGCRemoveItemGifterAttributes")] KEmsgClientToGcremoveItemGifterAttributes = 1109,
    [pbr::OriginalName("k_EMsgClientToGCRemoveItemName")] KEmsgClientToGcremoveItemName = 1110,
    [pbr::OriginalName("k_EMsgClientToGCRemoveItemDescription")] KEmsgClientToGcremoveItemDescription = 1111,
    [pbr::OriginalName("k_EMsgClientToGCRemoveItemAttributeResponse")] KEmsgClientToGcremoveItemAttributeResponse = 1112,
    [pbr::OriginalName("k_EMsgGCDev_NewItemRequest")] KEmsgGcdevNewItemRequest = 2001,
    [pbr::OriginalName("k_EMsgGCDev_NewItemRequestResponse")] KEmsgGcdevNewItemRequestResponse = 2002,
    [pbr::OriginalName("k_EMsgGCDev_UnlockAllItemStylesRequest")] KEmsgGcdevUnlockAllItemStylesRequest = 2003,
    [pbr::OriginalName("k_EMsgGCDev_UnlockAllItemStylesResponse")] KEmsgGcdevUnlockAllItemStylesResponse = 2004,
    [pbr::OriginalName("k_EMsgGCStorePurchaseFinalize")] KEmsgGcstorePurchaseFinalize = 2504,
    [pbr::OriginalName("k_EMsgGCStorePurchaseFinalizeResponse")] KEmsgGcstorePurchaseFinalizeResponse = 2505,
    [pbr::OriginalName("k_EMsgGCStorePurchaseCancel")] KEmsgGcstorePurchaseCancel = 2506,
    [pbr::OriginalName("k_EMsgGCStorePurchaseCancelResponse")] KEmsgGcstorePurchaseCancelResponse = 2507,
    [pbr::OriginalName("k_EMsgGCStorePurchaseInit")] KEmsgGcstorePurchaseInit = 2510,
    [pbr::OriginalName("k_EMsgGCStorePurchaseInitResponse")] KEmsgGcstorePurchaseInitResponse = 2511,
    [pbr::OriginalName("k_EMsgGCToGCBannedWordListUpdated")] KEmsgGctoGcbannedWordListUpdated = 2515,
    [pbr::OriginalName("k_EMsgGCToGCDirtySDOCache")] KEmsgGctoGcdirtySdocache = 2516,
    [pbr::OriginalName("k_EMsgGCToGCUpdateSQLKeyValue")] KEmsgGctoGcupdateSqlkeyValue = 2518,
    [pbr::OriginalName("k_EMsgGCToGCBroadcastConsoleCommand")] KEmsgGctoGcbroadcastConsoleCommand = 2521,
    [pbr::OriginalName("k_EMsgGCServerVersionUpdated")] KEmsgGcserverVersionUpdated = 2522,
    [pbr::OriginalName("k_EMsgGCApplyAutograph")] KEmsgGcapplyAutograph = 2523,
    [pbr::OriginalName("k_EMsgGCToGCWebAPIAccountChanged")] KEmsgGctoGcwebApiaccountChanged = 2524,
    [pbr::OriginalName("k_EMsgGCClientVersionUpdated")] KEmsgGcclientVersionUpdated = 2528,
    [pbr::OriginalName("k_EMsgGCToGCUpdateWelcomeMsg")] KEmsgGctoGcupdateWelcomeMsg = 2529,
    [pbr::OriginalName("k_EMsgGCToGCPlayerStrangeCountAdjustments")] KEmsgGctoGcplayerStrangeCountAdjustments = 2535,
    [pbr::OriginalName("k_EMsgGCRequestStoreSalesData")] KEmsgGcrequestStoreSalesData = 2536,
    [pbr::OriginalName("k_EMsgGCRequestStoreSalesDataResponse")] KEmsgGcrequestStoreSalesDataResponse = 2537,
    [pbr::OriginalName("k_EMsgGCRequestStoreSalesDataUpToDateResponse")] KEmsgGcrequestStoreSalesDataUpToDateResponse = 2538,
    [pbr::OriginalName("k_EMsgGCToGCPingRequest")] KEmsgGctoGcpingRequest = 2539,
    [pbr::OriginalName("k_EMsgGCToGCPingResponse")] KEmsgGctoGcpingResponse = 2540,
    [pbr::OriginalName("k_EMsgGCToGCGetUserSessionServer")] KEmsgGctoGcgetUserSessionServer = 2541,
    [pbr::OriginalName("k_EMsgGCToGCGetUserSessionServerResponse")] KEmsgGctoGcgetUserSessionServerResponse = 2542,
    [pbr::OriginalName("k_EMsgGCToGCGetUserServerMembers")] KEmsgGctoGcgetUserServerMembers = 2543,
    [pbr::OriginalName("k_EMsgGCToGCGetUserServerMembersResponse")] KEmsgGctoGcgetUserServerMembersResponse = 2544,
    [pbr::OriginalName("k_EMsgGCToGCCanUseDropRateBonus")] KEmsgGctoGccanUseDropRateBonus = 2547,
    [pbr::OriginalName("k_EMsgSQLAddDropRateBonus")] KEmsgSqladdDropRateBonus = 2548,
    [pbr::OriginalName("k_EMsgGCToGCRefreshSOCache")] KEmsgGctoGcrefreshSocache = 2549,
    [pbr::OriginalName("k_EMsgGCToGCGrantAccountRolledItems")] KEmsgGctoGcgrantAccountRolledItems = 2554,
    [pbr::OriginalName("k_EMsgGCToGCGrantSelfMadeItemToAccount")] KEmsgGctoGcgrantSelfMadeItemToAccount = 2555,
    [pbr::OriginalName("k_EMsgGCStatueCraft")] KEmsgGcstatueCraft = 2561,
    [pbr::OriginalName("k_EMsgGCRedeemCode")] KEmsgGcredeemCode = 2562,
    [pbr::OriginalName("k_EMsgGCRedeemCodeResponse")] KEmsgGcredeemCodeResponse = 2563,
    [pbr::OriginalName("k_EMsgGCToGCItemConsumptionRollback")] KEmsgGctoGcitemConsumptionRollback = 2564,
    [pbr::OriginalName("k_EMsgClientToGCWrapAndDeliverGift")] KEmsgClientToGcwrapAndDeliverGift = 2565,
    [pbr::OriginalName("k_EMsgClientToGCWrapAndDeliverGiftResponse")] KEmsgClientToGcwrapAndDeliverGiftResponse = 2566,
    [pbr::OriginalName("k_EMsgClientToGCUnpackBundleResponse")] KEmsgClientToGcunpackBundleResponse = 2567,
    [pbr::OriginalName("k_EMsgGCToClientStoreTransactionCompleted")] KEmsgGctoClientStoreTransactionCompleted = 2568,
    [pbr::OriginalName("k_EMsgClientToGCEquipItems")] KEmsgClientToGcequipItems = 2569,
    [pbr::OriginalName("k_EMsgClientToGCEquipItemsResponse")] KEmsgClientToGcequipItemsResponse = 2570,
    [pbr::OriginalName("k_EMsgClientToGCUnlockItemStyle")] KEmsgClientToGcunlockItemStyle = 2571,
    [pbr::OriginalName("k_EMsgClientToGCUnlockItemStyleResponse")] KEmsgClientToGcunlockItemStyleResponse = 2572,
    [pbr::OriginalName("k_EMsgClientToGCSetItemInventoryCategory")] KEmsgClientToGcsetItemInventoryCategory = 2573,
    [pbr::OriginalName("k_EMsgClientToGCUnlockCrate")] KEmsgClientToGcunlockCrate = 2574,
    [pbr::OriginalName("k_EMsgClientToGCUnlockCrateResponse")] KEmsgClientToGcunlockCrateResponse = 2575,
    [pbr::OriginalName("k_EMsgClientToGCUnpackBundle")] KEmsgClientToGcunpackBundle = 2576,
    [pbr::OriginalName("k_EMsgClientToGCSetItemStyle")] KEmsgClientToGcsetItemStyle = 2577,
    [pbr::OriginalName("k_EMsgClientToGCSetItemStyleResponse")] KEmsgClientToGcsetItemStyleResponse = 2578,
    [pbr::OriginalName("k_EMsgSQLGCToGCGrantBackpackSlots")] KEmsgSqlgctoGcgrantBackpackSlots = 2580,
    [pbr::OriginalName("k_EMsgClientToGCLookupAccountName")] KEmsgClientToGclookupAccountName = 2581,
    [pbr::OriginalName("k_EMsgClientToGCLookupAccountNameResponse")] KEmsgClientToGclookupAccountNameResponse = 2582,
    [pbr::OriginalName("k_EMsgClientToGCCreateStaticRecipe")] KEmsgClientToGccreateStaticRecipe = 2584,
    [pbr::OriginalName("k_EMsgClientToGCCreateStaticRecipeResponse")] KEmsgClientToGccreateStaticRecipeResponse = 2585,
    [pbr::OriginalName("k_EMsgGCToGCStoreProcessCDKeyTransaction")] KEmsgGctoGcstoreProcessCdkeyTransaction = 2586,
    [pbr::OriginalName("k_EMsgGCToGCStoreProcessCDKeyTransactionResponse")] KEmsgGctoGcstoreProcessCdkeyTransactionResponse = 2587,
    [pbr::OriginalName("k_EMsgGCToGCStoreProcessSettlement")] KEmsgGctoGcstoreProcessSettlement = 2588,
    [pbr::OriginalName("k_EMsgGCToGCStoreProcessSettlementResponse")] KEmsgGctoGcstoreProcessSettlementResponse = 2589,
    [pbr::OriginalName("k_EMsgGCToGCConsoleOutput")] KEmsgGctoGcconsoleOutput = 2590,
    [pbr::OriginalName("k_EMsgGCToClientItemAges")] KEmsgGctoClientItemAges = 2591,
    [pbr::OriginalName("k_EMsgGCToGCInternalTestMsg")] KEmsgGctoGcinternalTestMsg = 2592,
    [pbr::OriginalName("k_EMsgGCToGCClientServerVersionsUpdated")] KEmsgGctoGcclientServerVersionsUpdated = 2593,
    [pbr::OriginalName("k_EMsgGCUseMultipleItemsRequest")] KEmsgGcuseMultipleItemsRequest = 2594,
    [pbr::OriginalName("k_EMsgGCGetAccountSubscriptionItem")] KEmsgGcgetAccountSubscriptionItem = 2595,
    [pbr::OriginalName("k_EMsgGCGetAccountSubscriptionItemResponse")] KEmsgGcgetAccountSubscriptionItemResponse = 2596,
    [pbr::OriginalName("k_EMsgGCToGCBroadcastMessageFromSub")] KEmsgGctoGcbroadcastMessageFromSub = 2598,
    [pbr::OriginalName("k_EMsgGCToClientCurrencyPricePoints")] KEmsgGctoClientCurrencyPricePoints = 2599,
    [pbr::OriginalName("k_EMsgGCToGCAddSubscriptionTime")] KEmsgGctoGcaddSubscriptionTime = 2600,
    [pbr::OriginalName("k_EMsgGCToGCFlushSteamInventoryCache")] KEmsgGctoGcflushSteamInventoryCache = 2601,
    [pbr::OriginalName("k_EMsgGCRequestCrateEscalationLevel")] KEmsgGcrequestCrateEscalationLevel = 2602,
    [pbr::OriginalName("k_EMsgGCRequestCrateEscalationLevelResponse")] KEmsgGcrequestCrateEscalationLevelResponse = 2603,
    [pbr::OriginalName("k_EMsgGCToGCUpdateSubscriptionItems")] KEmsgGctoGcupdateSubscriptionItems = 2604,
    [pbr::OriginalName("k_EMsgGCToGCSelfPing")] KEmsgGctoGcselfPing = 2605,
    [pbr::OriginalName("k_EMsgGCToGCGetInfuxIntervalStats")] KEmsgGctoGcgetInfuxIntervalStats = 2606,
    [pbr::OriginalName("k_EMsgGCToGCGetInfuxIntervalStatsResponse")] KEmsgGctoGcgetInfuxIntervalStatsResponse = 2607,
    [pbr::OriginalName("k_EMsgGCToGCPurchaseSucceeded")] KEmsgGctoGcpurchaseSucceeded = 2608,
    [pbr::OriginalName("k_EMsgClientToGCGetLimitedItemPurchaseQuantity")] KEmsgClientToGcgetLimitedItemPurchaseQuantity = 2609,
    [pbr::OriginalName("k_EMsgClientToGCGetLimitedItemPurchaseQuantityResponse")] KEmsgClientToGcgetLimitedItemPurchaseQuantityResponse = 2610,
    [pbr::OriginalName("k_EMsgGCToGCBetaDeleteItems")] KEmsgGctoGcbetaDeleteItems = 2611,
    [pbr::OriginalName("k_EMsgClientToGCGetInFlightItemCharges")] KEmsgClientToGcgetInFlightItemCharges = 2612,
    [pbr::OriginalName("k_EMsgClientToGCGetInFlightItemChargesResponse")] KEmsgClientToGcgetInFlightItemChargesResponse = 2613,
    [pbr::OriginalName("k_EMsgGCToClientInFlightChargesUpdated")] KEmsgGctoClientInFlightChargesUpdated = 2614,
    [pbr::OriginalName("k_EMsgClientToGCPurchaseChargeCostItems")] KEmsgClientToGcpurchaseChargeCostItems = 2615,
    [pbr::OriginalName("k_EMsgClientToGCPurchaseChargeCostItemsResponse")] KEmsgClientToGcpurchaseChargeCostItemsResponse = 2616,
    [pbr::OriginalName("k_EMsgClientToGCCancelUnfinalizedTransactions")] KEmsgClientToGccancelUnfinalizedTransactions = 2617,
    [pbr::OriginalName("k_EMsgClientToGCCancelUnfinalizedTransactionsResponse")] KEmsgClientToGccancelUnfinalizedTransactionsResponse = 2618,
  }

  public enum EGCMsgInitiateTradeResponse {
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_Accepted")] KEgcmsgInitiateTradeResponseAccepted = 0,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_Declined")] KEgcmsgInitiateTradeResponseDeclined = 1,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_VAC_Banned_Initiator")] KEgcmsgInitiateTradeResponseVacBannedInitiator = 2,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_VAC_Banned_Target")] KEgcmsgInitiateTradeResponseVacBannedTarget = 3,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_Target_Already_Trading")] KEgcmsgInitiateTradeResponseTargetAlreadyTrading = 4,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_Disabled")] KEgcmsgInitiateTradeResponseDisabled = 5,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_NotLoggedIn")] KEgcmsgInitiateTradeResponseNotLoggedIn = 6,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_Cancel")] KEgcmsgInitiateTradeResponseCancel = 7,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_TooSoon")] KEgcmsgInitiateTradeResponseTooSoon = 8,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_TooSoonPenalty")] KEgcmsgInitiateTradeResponseTooSoonPenalty = 9,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_Trade_Banned_Initiator")] KEgcmsgInitiateTradeResponseTradeBannedInitiator = 10,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_Trade_Banned_Target")] KEgcmsgInitiateTradeResponseTradeBannedTarget = 11,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_Free_Account_Initiator_DEPRECATED")] KEgcmsgInitiateTradeResponseFreeAccountInitiatorDeprecated = 12,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_Shared_Account_Initiator")] KEgcmsgInitiateTradeResponseSharedAccountInitiator = 13,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_Service_Unavailable")] KEgcmsgInitiateTradeResponseServiceUnavailable = 14,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_Target_Blocked")] KEgcmsgInitiateTradeResponseTargetBlocked = 15,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_NeedVerifiedEmail")] KEgcmsgInitiateTradeResponseNeedVerifiedEmail = 16,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_NeedSteamGuard")] KEgcmsgInitiateTradeResponseNeedSteamGuard = 17,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_SteamGuardDuration")] KEgcmsgInitiateTradeResponseSteamGuardDuration = 18,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_TheyCannotTrade")] KEgcmsgInitiateTradeResponseTheyCannotTrade = 19,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_Recent_Password_Reset")] KEgcmsgInitiateTradeResponseRecentPasswordReset = 20,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_Using_New_Device")] KEgcmsgInitiateTradeResponseUsingNewDevice = 21,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_Sent_Invalid_Cookie")] KEgcmsgInitiateTradeResponseSentInvalidCookie = 22,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_TooRecentFriend")] KEgcmsgInitiateTradeResponseTooRecentFriend = 23,
    [pbr::OriginalName("k_EGCMsgInitiateTradeResponse_WalledFundsNotTrusted")] KEgcmsgInitiateTradeResponseWalledFundsNotTrusted = 24,
  }

  #endregion

  #region Messages
  public sealed partial class CMsgApplyAutograph : pb::IMessage<CMsgApplyAutograph>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgApplyAutograph> _parser = new pb::MessageParser<CMsgApplyAutograph>(() => new CMsgApplyAutograph());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgApplyAutograph> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgApplyAutograph() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgApplyAutograph(CMsgApplyAutograph other) : this() {
      _hasBits0 = other._hasBits0;
      autographItemId_ = other.autographItemId_;
      itemItemId_ = other.itemItemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgApplyAutograph Clone() {
      return new CMsgApplyAutograph(this);
    }

    /// <summary>Field number for the "autograph_item_id" field.</summary>
    public const int AutographItemIdFieldNumber = 1;
    private readonly static ulong AutographItemIdDefaultValue = 0UL;

    private ulong autographItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AutographItemId {
      get { if ((_hasBits0 & 1) != 0) { return autographItemId_; } else { return AutographItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        autographItemId_ = value;
      }
    }
    /// <summary>Gets whether the "autograph_item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAutographItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "autograph_item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAutographItemId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_item_id" field.</summary>
    public const int ItemItemIdFieldNumber = 2;
    private readonly static ulong ItemItemIdDefaultValue = 0UL;

    private ulong itemItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemItemId {
      get { if ((_hasBits0 & 2) != 0) { return itemItemId_; } else { return ItemItemIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        itemItemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemItemId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "item_item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemItemId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgApplyAutograph);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgApplyAutograph other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AutographItemId != other.AutographItemId) return false;
      if (ItemItemId != other.ItemItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAutographItemId) hash ^= AutographItemId.GetHashCode();
      if (HasItemItemId) hash ^= ItemItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAutographItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(AutographItemId);
      }
      if (HasItemItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ItemItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAutographItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(AutographItemId);
      }
      if (HasItemItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ItemItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAutographItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AutographItemId);
      }
      if (HasItemItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgApplyAutograph other) {
      if (other == null) {
        return;
      }
      if (other.HasAutographItemId) {
        AutographItemId = other.AutographItemId;
      }
      if (other.HasItemItemId) {
        ItemItemId = other.ItemItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AutographItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            ItemItemId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AutographItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            ItemItemId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgAdjustItemEquippedState : pb::IMessage<CMsgAdjustItemEquippedState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgAdjustItemEquippedState> _parser = new pb::MessageParser<CMsgAdjustItemEquippedState>(() => new CMsgAdjustItemEquippedState());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgAdjustItemEquippedState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgAdjustItemEquippedState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgAdjustItemEquippedState(CMsgAdjustItemEquippedState other) : this() {
      _hasBits0 = other._hasBits0;
      itemId_ = other.itemId_;
      newClass_ = other.newClass_;
      newSlot_ = other.newSlot_;
      styleIndex_ = other.styleIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgAdjustItemEquippedState Clone() {
      return new CMsgAdjustItemEquippedState(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "new_class" field.</summary>
    public const int NewClassFieldNumber = 2;
    private readonly static uint NewClassDefaultValue = 0;

    private uint newClass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NewClass {
      get { if ((_hasBits0 & 2) != 0) { return newClass_; } else { return NewClassDefaultValue; } }
      set {
        _hasBits0 |= 2;
        newClass_ = value;
      }
    }
    /// <summary>Gets whether the "new_class" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNewClass {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "new_class" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNewClass() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "new_slot" field.</summary>
    public const int NewSlotFieldNumber = 3;
    private readonly static uint NewSlotDefaultValue = 0;

    private uint newSlot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NewSlot {
      get { if ((_hasBits0 & 4) != 0) { return newSlot_; } else { return NewSlotDefaultValue; } }
      set {
        _hasBits0 |= 4;
        newSlot_ = value;
      }
    }
    /// <summary>Gets whether the "new_slot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNewSlot {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "new_slot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNewSlot() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "style_index" field.</summary>
    public const int StyleIndexFieldNumber = 4;
    private readonly static uint StyleIndexDefaultValue = 255;

    private uint styleIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StyleIndex {
      get { if ((_hasBits0 & 8) != 0) { return styleIndex_; } else { return StyleIndexDefaultValue; } }
      set {
        _hasBits0 |= 8;
        styleIndex_ = value;
      }
    }
    /// <summary>Gets whether the "style_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStyleIndex {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "style_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStyleIndex() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgAdjustItemEquippedState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgAdjustItemEquippedState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (NewClass != other.NewClass) return false;
      if (NewSlot != other.NewSlot) return false;
      if (StyleIndex != other.StyleIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (HasNewClass) hash ^= NewClass.GetHashCode();
      if (HasNewSlot) hash ^= NewSlot.GetHashCode();
      if (HasStyleIndex) hash ^= StyleIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (HasNewClass) {
        output.WriteRawTag(16);
        output.WriteUInt32(NewClass);
      }
      if (HasNewSlot) {
        output.WriteRawTag(24);
        output.WriteUInt32(NewSlot);
      }
      if (HasStyleIndex) {
        output.WriteRawTag(32);
        output.WriteUInt32(StyleIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (HasNewClass) {
        output.WriteRawTag(16);
        output.WriteUInt32(NewClass);
      }
      if (HasNewSlot) {
        output.WriteRawTag(24);
        output.WriteUInt32(NewSlot);
      }
      if (HasStyleIndex) {
        output.WriteRawTag(32);
        output.WriteUInt32(StyleIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (HasNewClass) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NewClass);
      }
      if (HasNewSlot) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NewSlot);
      }
      if (HasStyleIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StyleIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgAdjustItemEquippedState other) {
      if (other == null) {
        return;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasNewClass) {
        NewClass = other.NewClass;
      }
      if (other.HasNewSlot) {
        NewSlot = other.NewSlot;
      }
      if (other.HasStyleIndex) {
        StyleIndex = other.StyleIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            NewClass = input.ReadUInt32();
            break;
          }
          case 24: {
            NewSlot = input.ReadUInt32();
            break;
          }
          case 32: {
            StyleIndex = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            NewClass = input.ReadUInt32();
            break;
          }
          case 24: {
            NewSlot = input.ReadUInt32();
            break;
          }
          case 32: {
            StyleIndex = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgEconPlayerStrangeCountAdjustment : pb::IMessage<CMsgEconPlayerStrangeCountAdjustment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgEconPlayerStrangeCountAdjustment> _parser = new pb::MessageParser<CMsgEconPlayerStrangeCountAdjustment>(() => new CMsgEconPlayerStrangeCountAdjustment());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgEconPlayerStrangeCountAdjustment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgEconPlayerStrangeCountAdjustment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgEconPlayerStrangeCountAdjustment(CMsgEconPlayerStrangeCountAdjustment other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      strangeCountAdjustments_ = other.strangeCountAdjustments_.Clone();
      turboMode_ = other.turboMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgEconPlayerStrangeCountAdjustment Clone() {
      return new CMsgEconPlayerStrangeCountAdjustment(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "strange_count_adjustments" field.</summary>
    public const int StrangeCountAdjustmentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgEconPlayerStrangeCountAdjustment.Types.CStrangeCountAdjustment> _repeated_strangeCountAdjustments_codec
        = pb::FieldCodec.ForMessage(18, global::Steam.Protos.Dota2.CMsgEconPlayerStrangeCountAdjustment.Types.CStrangeCountAdjustment.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgEconPlayerStrangeCountAdjustment.Types.CStrangeCountAdjustment> strangeCountAdjustments_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgEconPlayerStrangeCountAdjustment.Types.CStrangeCountAdjustment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgEconPlayerStrangeCountAdjustment.Types.CStrangeCountAdjustment> StrangeCountAdjustments {
      get { return strangeCountAdjustments_; }
    }

    /// <summary>Field number for the "turbo_mode" field.</summary>
    public const int TurboModeFieldNumber = 3;
    private readonly static bool TurboModeDefaultValue = false;

    private bool turboMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TurboMode {
      get { if ((_hasBits0 & 2) != 0) { return turboMode_; } else { return TurboModeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        turboMode_ = value;
      }
    }
    /// <summary>Gets whether the "turbo_mode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTurboMode {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "turbo_mode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTurboMode() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgEconPlayerStrangeCountAdjustment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgEconPlayerStrangeCountAdjustment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if(!strangeCountAdjustments_.Equals(other.strangeCountAdjustments_)) return false;
      if (TurboMode != other.TurboMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      hash ^= strangeCountAdjustments_.GetHashCode();
      if (HasTurboMode) hash ^= TurboMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      strangeCountAdjustments_.WriteTo(output, _repeated_strangeCountAdjustments_codec);
      if (HasTurboMode) {
        output.WriteRawTag(24);
        output.WriteBool(TurboMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      strangeCountAdjustments_.WriteTo(ref output, _repeated_strangeCountAdjustments_codec);
      if (HasTurboMode) {
        output.WriteRawTag(24);
        output.WriteBool(TurboMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      size += strangeCountAdjustments_.CalculateSize(_repeated_strangeCountAdjustments_codec);
      if (HasTurboMode) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgEconPlayerStrangeCountAdjustment other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      strangeCountAdjustments_.Add(other.strangeCountAdjustments_);
      if (other.HasTurboMode) {
        TurboMode = other.TurboMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 18: {
            strangeCountAdjustments_.AddEntriesFrom(input, _repeated_strangeCountAdjustments_codec);
            break;
          }
          case 24: {
            TurboMode = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 18: {
            strangeCountAdjustments_.AddEntriesFrom(ref input, _repeated_strangeCountAdjustments_codec);
            break;
          }
          case 24: {
            TurboMode = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgEconPlayerStrangeCountAdjustment message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class CStrangeCountAdjustment : pb::IMessage<CStrangeCountAdjustment>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CStrangeCountAdjustment> _parser = new pb::MessageParser<CStrangeCountAdjustment>(() => new CStrangeCountAdjustment());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CStrangeCountAdjustment> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgEconPlayerStrangeCountAdjustment.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CStrangeCountAdjustment() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CStrangeCountAdjustment(CStrangeCountAdjustment other) : this() {
          _hasBits0 = other._hasBits0;
          eventType_ = other.eventType_;
          itemId_ = other.itemId_;
          adjustment_ = other.adjustment_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CStrangeCountAdjustment Clone() {
          return new CStrangeCountAdjustment(this);
        }

        /// <summary>Field number for the "event_type" field.</summary>
        public const int EventTypeFieldNumber = 1;
        private readonly static uint EventTypeDefaultValue = 0;

        private uint eventType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint EventType {
          get { if ((_hasBits0 & 1) != 0) { return eventType_; } else { return EventTypeDefaultValue; } }
          set {
            _hasBits0 |= 1;
            eventType_ = value;
          }
        }
        /// <summary>Gets whether the "event_type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasEventType {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "event_type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearEventType() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "item_id" field.</summary>
        public const int ItemIdFieldNumber = 2;
        private readonly static ulong ItemIdDefaultValue = 0UL;

        private ulong itemId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ItemId {
          get { if ((_hasBits0 & 2) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
          set {
            _hasBits0 |= 2;
            itemId_ = value;
          }
        }
        /// <summary>Gets whether the "item_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasItemId {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "item_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearItemId() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "adjustment" field.</summary>
        public const int AdjustmentFieldNumber = 3;
        private readonly static uint AdjustmentDefaultValue = 0;

        private uint adjustment_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Adjustment {
          get { if ((_hasBits0 & 4) != 0) { return adjustment_; } else { return AdjustmentDefaultValue; } }
          set {
            _hasBits0 |= 4;
            adjustment_ = value;
          }
        }
        /// <summary>Gets whether the "adjustment" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasAdjustment {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "adjustment" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearAdjustment() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CStrangeCountAdjustment);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CStrangeCountAdjustment other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (EventType != other.EventType) return false;
          if (ItemId != other.ItemId) return false;
          if (Adjustment != other.Adjustment) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasEventType) hash ^= EventType.GetHashCode();
          if (HasItemId) hash ^= ItemId.GetHashCode();
          if (HasAdjustment) hash ^= Adjustment.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasEventType) {
            output.WriteRawTag(8);
            output.WriteUInt32(EventType);
          }
          if (HasItemId) {
            output.WriteRawTag(16);
            output.WriteUInt64(ItemId);
          }
          if (HasAdjustment) {
            output.WriteRawTag(24);
            output.WriteUInt32(Adjustment);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasEventType) {
            output.WriteRawTag(8);
            output.WriteUInt32(EventType);
          }
          if (HasItemId) {
            output.WriteRawTag(16);
            output.WriteUInt64(ItemId);
          }
          if (HasAdjustment) {
            output.WriteRawTag(24);
            output.WriteUInt32(Adjustment);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasEventType) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EventType);
          }
          if (HasItemId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
          }
          if (HasAdjustment) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Adjustment);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CStrangeCountAdjustment other) {
          if (other == null) {
            return;
          }
          if (other.HasEventType) {
            EventType = other.EventType;
          }
          if (other.HasItemId) {
            ItemId = other.ItemId;
          }
          if (other.HasAdjustment) {
            Adjustment = other.Adjustment;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                EventType = input.ReadUInt32();
                break;
              }
              case 16: {
                ItemId = input.ReadUInt64();
                break;
              }
              case 24: {
                Adjustment = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                EventType = input.ReadUInt32();
                break;
              }
              case 16: {
                ItemId = input.ReadUInt64();
                break;
              }
              case 24: {
                Adjustment = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgCraftingResponse : pb::IMessage<CMsgCraftingResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgCraftingResponse> _parser = new pb::MessageParser<CMsgCraftingResponse>(() => new CMsgCraftingResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgCraftingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgCraftingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgCraftingResponse(CMsgCraftingResponse other) : this() {
      itemIds_ = other.itemIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgCraftingResponse Clone() {
      return new CMsgCraftingResponse(this);
    }

    /// <summary>Field number for the "item_ids" field.</summary>
    public const int ItemIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_itemIds_codec
        = pb::FieldCodec.ForUInt64(8);
    private readonly pbc::RepeatedField<ulong> itemIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> ItemIds {
      get { return itemIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgCraftingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgCraftingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!itemIds_.Equals(other.itemIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= itemIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      itemIds_.WriteTo(output, _repeated_itemIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      itemIds_.WriteTo(ref output, _repeated_itemIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemIds_.CalculateSize(_repeated_itemIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgCraftingResponse other) {
      if (other == null) {
        return;
      }
      itemIds_.Add(other.itemIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            itemIds_.AddEntriesFrom(input, _repeated_itemIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            itemIds_.AddEntriesFrom(ref input, _repeated_itemIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCRequestStoreSalesData : pb::IMessage<CMsgGCRequestStoreSalesData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCRequestStoreSalesData> _parser = new pb::MessageParser<CMsgGCRequestStoreSalesData>(() => new CMsgGCRequestStoreSalesData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCRequestStoreSalesData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCRequestStoreSalesData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCRequestStoreSalesData(CMsgGCRequestStoreSalesData other) : this() {
      _hasBits0 = other._hasBits0;
      version_ = other.version_;
      currency_ = other.currency_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCRequestStoreSalesData Clone() {
      return new CMsgGCRequestStoreSalesData(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private readonly static uint VersionDefaultValue = 0;

    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 2;
    private readonly static uint CurrencyDefaultValue = 0;

    private uint currency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Currency {
      get { if ((_hasBits0 & 2) != 0) { return currency_; } else { return CurrencyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        currency_ = value;
      }
    }
    /// <summary>Gets whether the "currency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrency {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "currency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrency() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCRequestStoreSalesData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCRequestStoreSalesData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (Currency != other.Currency) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasCurrency) hash ^= Currency.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersion) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (HasCurrency) {
        output.WriteRawTag(16);
        output.WriteUInt32(Currency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersion) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (HasCurrency) {
        output.WriteRawTag(16);
        output.WriteUInt32(Currency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (HasCurrency) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Currency);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCRequestStoreSalesData other) {
      if (other == null) {
        return;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasCurrency) {
        Currency = other.Currency;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 16: {
            Currency = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 16: {
            Currency = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCRequestStoreSalesDataResponse : pb::IMessage<CMsgGCRequestStoreSalesDataResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCRequestStoreSalesDataResponse> _parser = new pb::MessageParser<CMsgGCRequestStoreSalesDataResponse>(() => new CMsgGCRequestStoreSalesDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCRequestStoreSalesDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCRequestStoreSalesDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCRequestStoreSalesDataResponse(CMsgGCRequestStoreSalesDataResponse other) : this() {
      _hasBits0 = other._hasBits0;
      salePrice_ = other.salePrice_.Clone();
      version_ = other.version_;
      expirationTime_ = other.expirationTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCRequestStoreSalesDataResponse Clone() {
      return new CMsgGCRequestStoreSalesDataResponse(this);
    }

    /// <summary>Field number for the "sale_price" field.</summary>
    public const int SalePriceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgGCRequestStoreSalesDataResponse.Types.Price> _repeated_salePrice_codec
        = pb::FieldCodec.ForMessage(10, global::Steam.Protos.Dota2.CMsgGCRequestStoreSalesDataResponse.Types.Price.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCRequestStoreSalesDataResponse.Types.Price> salePrice_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCRequestStoreSalesDataResponse.Types.Price>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCRequestStoreSalesDataResponse.Types.Price> SalePrice {
      get { return salePrice_; }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private readonly static uint VersionDefaultValue = 0;

    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 3;
    private readonly static uint ExpirationTimeDefaultValue = 0;

    private uint expirationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ExpirationTime {
      get { if ((_hasBits0 & 2) != 0) { return expirationTime_; } else { return ExpirationTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        expirationTime_ = value;
      }
    }
    /// <summary>Gets whether the "expiration_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpirationTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "expiration_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpirationTime() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCRequestStoreSalesDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCRequestStoreSalesDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!salePrice_.Equals(other.salePrice_)) return false;
      if (Version != other.Version) return false;
      if (ExpirationTime != other.ExpirationTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= salePrice_.GetHashCode();
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasExpirationTime) hash ^= ExpirationTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      salePrice_.WriteTo(output, _repeated_salePrice_codec);
      if (HasVersion) {
        output.WriteRawTag(16);
        output.WriteUInt32(Version);
      }
      if (HasExpirationTime) {
        output.WriteRawTag(24);
        output.WriteUInt32(ExpirationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      salePrice_.WriteTo(ref output, _repeated_salePrice_codec);
      if (HasVersion) {
        output.WriteRawTag(16);
        output.WriteUInt32(Version);
      }
      if (HasExpirationTime) {
        output.WriteRawTag(24);
        output.WriteUInt32(ExpirationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += salePrice_.CalculateSize(_repeated_salePrice_codec);
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (HasExpirationTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpirationTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCRequestStoreSalesDataResponse other) {
      if (other == null) {
        return;
      }
      salePrice_.Add(other.salePrice_);
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasExpirationTime) {
        ExpirationTime = other.ExpirationTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            salePrice_.AddEntriesFrom(input, _repeated_salePrice_codec);
            break;
          }
          case 16: {
            Version = input.ReadUInt32();
            break;
          }
          case 24: {
            ExpirationTime = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            salePrice_.AddEntriesFrom(ref input, _repeated_salePrice_codec);
            break;
          }
          case 16: {
            Version = input.ReadUInt32();
            break;
          }
          case 24: {
            ExpirationTime = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgGCRequestStoreSalesDataResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Price : pb::IMessage<Price>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Price> _parser = new pb::MessageParser<Price>(() => new Price());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Price> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgGCRequestStoreSalesDataResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Price() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Price(Price other) : this() {
          _hasBits0 = other._hasBits0;
          itemDef_ = other.itemDef_;
          price_ = other.price_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Price Clone() {
          return new Price(this);
        }

        /// <summary>Field number for the "item_def" field.</summary>
        public const int ItemDefFieldNumber = 1;
        private readonly static uint ItemDefDefaultValue = 0;

        private uint itemDef_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ItemDef {
          get { if ((_hasBits0 & 1) != 0) { return itemDef_; } else { return ItemDefDefaultValue; } }
          set {
            _hasBits0 |= 1;
            itemDef_ = value;
          }
        }
        /// <summary>Gets whether the "item_def" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasItemDef {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "item_def" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearItemDef() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int Price_FieldNumber = 2;
        private readonly static uint Price_DefaultValue = 0;

        private uint price_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Price_ {
          get { if ((_hasBits0 & 2) != 0) { return price_; } else { return Price_DefaultValue; } }
          set {
            _hasBits0 |= 2;
            price_ = value;
          }
        }
        /// <summary>Gets whether the "price" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPrice_ {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "price" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPrice_() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Price);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Price other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ItemDef != other.ItemDef) return false;
          if (Price_ != other.Price_) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasItemDef) hash ^= ItemDef.GetHashCode();
          if (HasPrice_) hash ^= Price_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasItemDef) {
            output.WriteRawTag(8);
            output.WriteUInt32(ItemDef);
          }
          if (HasPrice_) {
            output.WriteRawTag(16);
            output.WriteUInt32(Price_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasItemDef) {
            output.WriteRawTag(8);
            output.WriteUInt32(ItemDef);
          }
          if (HasPrice_) {
            output.WriteRawTag(16);
            output.WriteUInt32(Price_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasItemDef) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemDef);
          }
          if (HasPrice_) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Price_);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Price other) {
          if (other == null) {
            return;
          }
          if (other.HasItemDef) {
            ItemDef = other.ItemDef;
          }
          if (other.HasPrice_) {
            Price_ = other.Price_;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ItemDef = input.ReadUInt32();
                break;
              }
              case 16: {
                Price_ = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ItemDef = input.ReadUInt32();
                break;
              }
              case 16: {
                Price_ = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgGCRequestStoreSalesDataUpToDateResponse : pb::IMessage<CMsgGCRequestStoreSalesDataUpToDateResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCRequestStoreSalesDataUpToDateResponse> _parser = new pb::MessageParser<CMsgGCRequestStoreSalesDataUpToDateResponse>(() => new CMsgGCRequestStoreSalesDataUpToDateResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCRequestStoreSalesDataUpToDateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCRequestStoreSalesDataUpToDateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCRequestStoreSalesDataUpToDateResponse(CMsgGCRequestStoreSalesDataUpToDateResponse other) : this() {
      _hasBits0 = other._hasBits0;
      version_ = other.version_;
      expirationTime_ = other.expirationTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCRequestStoreSalesDataUpToDateResponse Clone() {
      return new CMsgGCRequestStoreSalesDataUpToDateResponse(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private readonly static uint VersionDefaultValue = 0;

    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 2;
    private readonly static uint ExpirationTimeDefaultValue = 0;

    private uint expirationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ExpirationTime {
      get { if ((_hasBits0 & 2) != 0) { return expirationTime_; } else { return ExpirationTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        expirationTime_ = value;
      }
    }
    /// <summary>Gets whether the "expiration_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpirationTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "expiration_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpirationTime() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCRequestStoreSalesDataUpToDateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCRequestStoreSalesDataUpToDateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (ExpirationTime != other.ExpirationTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersion) hash ^= Version.GetHashCode();
      if (HasExpirationTime) hash ^= ExpirationTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersion) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (HasExpirationTime) {
        output.WriteRawTag(16);
        output.WriteUInt32(ExpirationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersion) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      if (HasExpirationTime) {
        output.WriteRawTag(16);
        output.WriteUInt32(ExpirationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      if (HasExpirationTime) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpirationTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCRequestStoreSalesDataUpToDateResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasExpirationTime) {
        ExpirationTime = other.ExpirationTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 16: {
            ExpirationTime = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 16: {
            ExpirationTime = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCPingRequest : pb::IMessage<CMsgGCToGCPingRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCPingRequest> _parser = new pb::MessageParser<CMsgGCToGCPingRequest>(() => new CMsgGCToGCPingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCPingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCPingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCPingRequest(CMsgGCToGCPingRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCPingRequest Clone() {
      return new CMsgGCToGCPingRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCPingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCPingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCPingRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCPingResponse : pb::IMessage<CMsgGCToGCPingResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCPingResponse> _parser = new pb::MessageParser<CMsgGCToGCPingResponse>(() => new CMsgGCToGCPingResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCPingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCPingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCPingResponse(CMsgGCToGCPingResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCPingResponse Clone() {
      return new CMsgGCToGCPingResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCPingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCPingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCPingResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCGetUserSessionServer : pb::IMessage<CMsgGCToGCGetUserSessionServer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCGetUserSessionServer> _parser = new pb::MessageParser<CMsgGCToGCGetUserSessionServer>(() => new CMsgGCToGCGetUserSessionServer());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCGetUserSessionServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetUserSessionServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetUserSessionServer(CMsgGCToGCGetUserSessionServer other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetUserSessionServer Clone() {
      return new CMsgGCToGCGetUserSessionServer(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCGetUserSessionServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCGetUserSessionServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCGetUserSessionServer other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCGetUserSessionServerResponse : pb::IMessage<CMsgGCToGCGetUserSessionServerResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCGetUserSessionServerResponse> _parser = new pb::MessageParser<CMsgGCToGCGetUserSessionServerResponse>(() => new CMsgGCToGCGetUserSessionServerResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCGetUserSessionServerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetUserSessionServerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetUserSessionServerResponse(CMsgGCToGCGetUserSessionServerResponse other) : this() {
      _hasBits0 = other._hasBits0;
      serverSteamId_ = other.serverSteamId_;
      isOnline_ = other.isOnline_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetUserSessionServerResponse Clone() {
      return new CMsgGCToGCGetUserSessionServerResponse(this);
    }

    /// <summary>Field number for the "server_steam_id" field.</summary>
    public const int ServerSteamIdFieldNumber = 1;
    private readonly static ulong ServerSteamIdDefaultValue = 0UL;

    private ulong serverSteamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ServerSteamId {
      get { if ((_hasBits0 & 1) != 0) { return serverSteamId_; } else { return ServerSteamIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        serverSteamId_ = value;
      }
    }
    /// <summary>Gets whether the "server_steam_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerSteamId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "server_steam_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerSteamId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "is_online" field.</summary>
    public const int IsOnlineFieldNumber = 2;
    private readonly static bool IsOnlineDefaultValue = false;

    private bool isOnline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOnline {
      get { if ((_hasBits0 & 2) != 0) { return isOnline_; } else { return IsOnlineDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isOnline_ = value;
      }
    }
    /// <summary>Gets whether the "is_online" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsOnline {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_online" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsOnline() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCGetUserSessionServerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCGetUserSessionServerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerSteamId != other.ServerSteamId) return false;
      if (IsOnline != other.IsOnline) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasServerSteamId) hash ^= ServerSteamId.GetHashCode();
      if (HasIsOnline) hash ^= IsOnline.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasServerSteamId) {
        output.WriteRawTag(9);
        output.WriteFixed64(ServerSteamId);
      }
      if (HasIsOnline) {
        output.WriteRawTag(16);
        output.WriteBool(IsOnline);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasServerSteamId) {
        output.WriteRawTag(9);
        output.WriteFixed64(ServerSteamId);
      }
      if (HasIsOnline) {
        output.WriteRawTag(16);
        output.WriteBool(IsOnline);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasServerSteamId) {
        size += 1 + 8;
      }
      if (HasIsOnline) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCGetUserSessionServerResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasServerSteamId) {
        ServerSteamId = other.ServerSteamId;
      }
      if (other.HasIsOnline) {
        IsOnline = other.IsOnline;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            ServerSteamId = input.ReadFixed64();
            break;
          }
          case 16: {
            IsOnline = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            ServerSteamId = input.ReadFixed64();
            break;
          }
          case 16: {
            IsOnline = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCGetUserServerMembers : pb::IMessage<CMsgGCToGCGetUserServerMembers>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCGetUserServerMembers> _parser = new pb::MessageParser<CMsgGCToGCGetUserServerMembers>(() => new CMsgGCToGCGetUserServerMembers());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCGetUserServerMembers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetUserServerMembers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetUserServerMembers(CMsgGCToGCGetUserServerMembers other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      maxSpectators_ = other.maxSpectators_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetUserServerMembers Clone() {
      return new CMsgGCToGCGetUserServerMembers(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "max_spectators" field.</summary>
    public const int MaxSpectatorsFieldNumber = 2;
    private readonly static uint MaxSpectatorsDefaultValue = 0;

    private uint maxSpectators_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxSpectators {
      get { if ((_hasBits0 & 2) != 0) { return maxSpectators_; } else { return MaxSpectatorsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maxSpectators_ = value;
      }
    }
    /// <summary>Gets whether the "max_spectators" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxSpectators {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max_spectators" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxSpectators() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCGetUserServerMembers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCGetUserServerMembers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (MaxSpectators != other.MaxSpectators) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasMaxSpectators) hash ^= MaxSpectators.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasMaxSpectators) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxSpectators);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasMaxSpectators) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxSpectators);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (HasMaxSpectators) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxSpectators);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCGetUserServerMembers other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasMaxSpectators) {
        MaxSpectators = other.MaxSpectators;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            MaxSpectators = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            MaxSpectators = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCGetUserServerMembersResponse : pb::IMessage<CMsgGCToGCGetUserServerMembersResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCGetUserServerMembersResponse> _parser = new pb::MessageParser<CMsgGCToGCGetUserServerMembersResponse>(() => new CMsgGCToGCGetUserServerMembersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCGetUserServerMembersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetUserServerMembersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetUserServerMembersResponse(CMsgGCToGCGetUserServerMembersResponse other) : this() {
      memberAccountId_ = other.memberAccountId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetUserServerMembersResponse Clone() {
      return new CMsgGCToGCGetUserServerMembersResponse(this);
    }

    /// <summary>Field number for the "member_account_id" field.</summary>
    public const int MemberAccountIdFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_memberAccountId_codec
        = pb::FieldCodec.ForUInt32(8);
    private readonly pbc::RepeatedField<uint> memberAccountId_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> MemberAccountId {
      get { return memberAccountId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCGetUserServerMembersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCGetUserServerMembersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!memberAccountId_.Equals(other.memberAccountId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= memberAccountId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      memberAccountId_.WriteTo(output, _repeated_memberAccountId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      memberAccountId_.WriteTo(ref output, _repeated_memberAccountId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += memberAccountId_.CalculateSize(_repeated_memberAccountId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCGetUserServerMembersResponse other) {
      if (other == null) {
        return;
      }
      memberAccountId_.Add(other.memberAccountId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            memberAccountId_.AddEntriesFrom(input, _repeated_memberAccountId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            memberAccountId_.AddEntriesFrom(ref input, _repeated_memberAccountId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgLookupMultipleAccountNames : pb::IMessage<CMsgLookupMultipleAccountNames>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgLookupMultipleAccountNames> _parser = new pb::MessageParser<CMsgLookupMultipleAccountNames>(() => new CMsgLookupMultipleAccountNames());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgLookupMultipleAccountNames> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgLookupMultipleAccountNames() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgLookupMultipleAccountNames(CMsgLookupMultipleAccountNames other) : this() {
      accountids_ = other.accountids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgLookupMultipleAccountNames Clone() {
      return new CMsgLookupMultipleAccountNames(this);
    }

    /// <summary>Field number for the "accountids" field.</summary>
    public const int AccountidsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_accountids_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> accountids_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Accountids {
      get { return accountids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgLookupMultipleAccountNames);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgLookupMultipleAccountNames other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!accountids_.Equals(other.accountids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= accountids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      accountids_.WriteTo(output, _repeated_accountids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      accountids_.WriteTo(ref output, _repeated_accountids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += accountids_.CalculateSize(_repeated_accountids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgLookupMultipleAccountNames other) {
      if (other == null) {
        return;
      }
      accountids_.Add(other.accountids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            accountids_.AddEntriesFrom(input, _repeated_accountids_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            accountids_.AddEntriesFrom(ref input, _repeated_accountids_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgLookupMultipleAccountNamesResponse : pb::IMessage<CMsgLookupMultipleAccountNamesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgLookupMultipleAccountNamesResponse> _parser = new pb::MessageParser<CMsgLookupMultipleAccountNamesResponse>(() => new CMsgLookupMultipleAccountNamesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgLookupMultipleAccountNamesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgLookupMultipleAccountNamesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgLookupMultipleAccountNamesResponse(CMsgLookupMultipleAccountNamesResponse other) : this() {
      accounts_ = other.accounts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgLookupMultipleAccountNamesResponse Clone() {
      return new CMsgLookupMultipleAccountNamesResponse(this);
    }

    /// <summary>Field number for the "accounts" field.</summary>
    public const int AccountsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgLookupMultipleAccountNamesResponse.Types.Account> _repeated_accounts_codec
        = pb::FieldCodec.ForMessage(10, global::Steam.Protos.Dota2.CMsgLookupMultipleAccountNamesResponse.Types.Account.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgLookupMultipleAccountNamesResponse.Types.Account> accounts_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgLookupMultipleAccountNamesResponse.Types.Account>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgLookupMultipleAccountNamesResponse.Types.Account> Accounts {
      get { return accounts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgLookupMultipleAccountNamesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgLookupMultipleAccountNamesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!accounts_.Equals(other.accounts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= accounts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      accounts_.WriteTo(output, _repeated_accounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      accounts_.WriteTo(ref output, _repeated_accounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += accounts_.CalculateSize(_repeated_accounts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgLookupMultipleAccountNamesResponse other) {
      if (other == null) {
        return;
      }
      accounts_.Add(other.accounts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            accounts_.AddEntriesFrom(input, _repeated_accounts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            accounts_.AddEntriesFrom(ref input, _repeated_accounts_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgLookupMultipleAccountNamesResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Account : pb::IMessage<Account>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Account> _parser = new pb::MessageParser<Account>(() => new Account());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Account> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgLookupMultipleAccountNamesResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Account() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Account(Account other) : this() {
          _hasBits0 = other._hasBits0;
          accountid_ = other.accountid_;
          persona_ = other.persona_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Account Clone() {
          return new Account(this);
        }

        /// <summary>Field number for the "accountid" field.</summary>
        public const int AccountidFieldNumber = 1;
        private readonly static uint AccountidDefaultValue = 0;

        private uint accountid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Accountid {
          get { if ((_hasBits0 & 1) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            accountid_ = value;
          }
        }
        /// <summary>Gets whether the "accountid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasAccountid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "accountid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearAccountid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "persona" field.</summary>
        public const int PersonaFieldNumber = 2;
        private readonly static string PersonaDefaultValue = "";

        private string persona_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Persona {
          get { return persona_ ?? PersonaDefaultValue; }
          set {
            persona_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "persona" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPersona {
          get { return persona_ != null; }
        }
        /// <summary>Clears the value of the "persona" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPersona() {
          persona_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Account);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Account other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Accountid != other.Accountid) return false;
          if (Persona != other.Persona) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAccountid) hash ^= Accountid.GetHashCode();
          if (HasPersona) hash ^= Persona.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasAccountid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Accountid);
          }
          if (HasPersona) {
            output.WriteRawTag(18);
            output.WriteString(Persona);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasAccountid) {
            output.WriteRawTag(8);
            output.WriteUInt32(Accountid);
          }
          if (HasPersona) {
            output.WriteRawTag(18);
            output.WriteString(Persona);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasAccountid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
          }
          if (HasPersona) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Persona);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Account other) {
          if (other == null) {
            return;
          }
          if (other.HasAccountid) {
            Accountid = other.Accountid;
          }
          if (other.HasPersona) {
            Persona = other.Persona;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Accountid = input.ReadUInt32();
                break;
              }
              case 18: {
                Persona = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Accountid = input.ReadUInt32();
                break;
              }
              case 18: {
                Persona = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgRequestCrateItems : pb::IMessage<CMsgRequestCrateItems>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRequestCrateItems> _parser = new pb::MessageParser<CMsgRequestCrateItems>(() => new CMsgRequestCrateItems());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgRequestCrateItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRequestCrateItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRequestCrateItems(CMsgRequestCrateItems other) : this() {
      _hasBits0 = other._hasBits0;
      crateItemDef_ = other.crateItemDef_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRequestCrateItems Clone() {
      return new CMsgRequestCrateItems(this);
    }

    /// <summary>Field number for the "crate_item_def" field.</summary>
    public const int CrateItemDefFieldNumber = 1;
    private readonly static uint CrateItemDefDefaultValue = 0;

    private uint crateItemDef_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CrateItemDef {
      get { if ((_hasBits0 & 1) != 0) { return crateItemDef_; } else { return CrateItemDefDefaultValue; } }
      set {
        _hasBits0 |= 1;
        crateItemDef_ = value;
      }
    }
    /// <summary>Gets whether the "crate_item_def" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCrateItemDef {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "crate_item_def" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCrateItemDef() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgRequestCrateItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgRequestCrateItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CrateItemDef != other.CrateItemDef) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCrateItemDef) hash ^= CrateItemDef.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCrateItemDef) {
        output.WriteRawTag(8);
        output.WriteUInt32(CrateItemDef);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCrateItemDef) {
        output.WriteRawTag(8);
        output.WriteUInt32(CrateItemDef);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCrateItemDef) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CrateItemDef);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgRequestCrateItems other) {
      if (other == null) {
        return;
      }
      if (other.HasCrateItemDef) {
        CrateItemDef = other.CrateItemDef;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CrateItemDef = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CrateItemDef = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgRequestCrateItemsResponse : pb::IMessage<CMsgRequestCrateItemsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRequestCrateItemsResponse> _parser = new pb::MessageParser<CMsgRequestCrateItemsResponse>(() => new CMsgRequestCrateItemsResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgRequestCrateItemsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRequestCrateItemsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRequestCrateItemsResponse(CMsgRequestCrateItemsResponse other) : this() {
      _hasBits0 = other._hasBits0;
      response_ = other.response_;
      itemDefs_ = other.itemDefs_.Clone();
      peekItemDefs_ = other.peekItemDefs_.Clone();
      peekItems_ = other.peekItems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRequestCrateItemsResponse Clone() {
      return new CMsgRequestCrateItemsResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private readonly static uint ResponseDefaultValue = 0;

    private uint response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Response {
      get { if ((_hasBits0 & 1) != 0) { return response_; } else { return ResponseDefaultValue; } }
      set {
        _hasBits0 |= 1;
        response_ = value;
      }
    }
    /// <summary>Gets whether the "response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponse {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_defs" field.</summary>
    public const int ItemDefsFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_itemDefs_codec
        = pb::FieldCodec.ForUInt32(16);
    private readonly pbc::RepeatedField<uint> itemDefs_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> ItemDefs {
      get { return itemDefs_; }
    }

    /// <summary>Field number for the "peek_item_defs" field.</summary>
    public const int PeekItemDefsFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_peekItemDefs_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> peekItemDefs_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> PeekItemDefs {
      get { return peekItemDefs_; }
    }

    /// <summary>Field number for the "peek_items" field.</summary>
    public const int PeekItemsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CSOEconItem> _repeated_peekItems_codec
        = pb::FieldCodec.ForMessage(34, global::Steam.Protos.Dota2.CSOEconItem.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CSOEconItem> peekItems_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CSOEconItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CSOEconItem> PeekItems {
      get { return peekItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgRequestCrateItemsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgRequestCrateItemsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Response != other.Response) return false;
      if(!itemDefs_.Equals(other.itemDefs_)) return false;
      if(!peekItemDefs_.Equals(other.peekItemDefs_)) return false;
      if(!peekItems_.Equals(other.peekItems_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResponse) hash ^= Response.GetHashCode();
      hash ^= itemDefs_.GetHashCode();
      hash ^= peekItemDefs_.GetHashCode();
      hash ^= peekItems_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteUInt32(Response);
      }
      itemDefs_.WriteTo(output, _repeated_itemDefs_codec);
      peekItemDefs_.WriteTo(output, _repeated_peekItemDefs_codec);
      peekItems_.WriteTo(output, _repeated_peekItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteUInt32(Response);
      }
      itemDefs_.WriteTo(ref output, _repeated_itemDefs_codec);
      peekItemDefs_.WriteTo(ref output, _repeated_peekItemDefs_codec);
      peekItems_.WriteTo(ref output, _repeated_peekItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResponse) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Response);
      }
      size += itemDefs_.CalculateSize(_repeated_itemDefs_codec);
      size += peekItemDefs_.CalculateSize(_repeated_peekItemDefs_codec);
      size += peekItems_.CalculateSize(_repeated_peekItems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgRequestCrateItemsResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResponse) {
        Response = other.Response;
      }
      itemDefs_.Add(other.itemDefs_);
      peekItemDefs_.Add(other.peekItemDefs_);
      peekItems_.Add(other.peekItems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Response = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            itemDefs_.AddEntriesFrom(input, _repeated_itemDefs_codec);
            break;
          }
          case 26:
          case 24: {
            peekItemDefs_.AddEntriesFrom(input, _repeated_peekItemDefs_codec);
            break;
          }
          case 34: {
            peekItems_.AddEntriesFrom(input, _repeated_peekItems_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Response = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            itemDefs_.AddEntriesFrom(ref input, _repeated_itemDefs_codec);
            break;
          }
          case 26:
          case 24: {
            peekItemDefs_.AddEntriesFrom(ref input, _repeated_peekItemDefs_codec);
            break;
          }
          case 34: {
            peekItems_.AddEntriesFrom(ref input, _repeated_peekItems_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgRequestCrateItemsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EResult {
        [pbr::OriginalName("k_Succeeded")] KSucceeded = 0,
        [pbr::OriginalName("k_Failed")] KFailed = 1,
      }

    }
    #endregion

  }

  public sealed partial class CMsgRequestCrateEscalationLevel : pb::IMessage<CMsgRequestCrateEscalationLevel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRequestCrateEscalationLevel> _parser = new pb::MessageParser<CMsgRequestCrateEscalationLevel>(() => new CMsgRequestCrateEscalationLevel());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgRequestCrateEscalationLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRequestCrateEscalationLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRequestCrateEscalationLevel(CMsgRequestCrateEscalationLevel other) : this() {
      _hasBits0 = other._hasBits0;
      crateItemDef_ = other.crateItemDef_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRequestCrateEscalationLevel Clone() {
      return new CMsgRequestCrateEscalationLevel(this);
    }

    /// <summary>Field number for the "crate_item_def" field.</summary>
    public const int CrateItemDefFieldNumber = 1;
    private readonly static uint CrateItemDefDefaultValue = 0;

    private uint crateItemDef_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CrateItemDef {
      get { if ((_hasBits0 & 1) != 0) { return crateItemDef_; } else { return CrateItemDefDefaultValue; } }
      set {
        _hasBits0 |= 1;
        crateItemDef_ = value;
      }
    }
    /// <summary>Gets whether the "crate_item_def" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCrateItemDef {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "crate_item_def" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCrateItemDef() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgRequestCrateEscalationLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgRequestCrateEscalationLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CrateItemDef != other.CrateItemDef) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCrateItemDef) hash ^= CrateItemDef.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCrateItemDef) {
        output.WriteRawTag(8);
        output.WriteUInt32(CrateItemDef);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCrateItemDef) {
        output.WriteRawTag(8);
        output.WriteUInt32(CrateItemDef);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCrateItemDef) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CrateItemDef);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgRequestCrateEscalationLevel other) {
      if (other == null) {
        return;
      }
      if (other.HasCrateItemDef) {
        CrateItemDef = other.CrateItemDef;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CrateItemDef = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CrateItemDef = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgRequestCrateEscalationLevelResponse : pb::IMessage<CMsgRequestCrateEscalationLevelResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRequestCrateEscalationLevelResponse> _parser = new pb::MessageParser<CMsgRequestCrateEscalationLevelResponse>(() => new CMsgRequestCrateEscalationLevelResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgRequestCrateEscalationLevelResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRequestCrateEscalationLevelResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRequestCrateEscalationLevelResponse(CMsgRequestCrateEscalationLevelResponse other) : this() {
      _hasBits0 = other._hasBits0;
      response_ = other.response_;
      escalationLevel0_ = other.escalationLevel0_;
      escalationLevel1_ = other.escalationLevel1_;
      escalationLevel2_ = other.escalationLevel2_;
      escalationLevel3_ = other.escalationLevel3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRequestCrateEscalationLevelResponse Clone() {
      return new CMsgRequestCrateEscalationLevelResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private readonly static uint ResponseDefaultValue = 0;

    private uint response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Response {
      get { if ((_hasBits0 & 1) != 0) { return response_; } else { return ResponseDefaultValue; } }
      set {
        _hasBits0 |= 1;
        response_ = value;
      }
    }
    /// <summary>Gets whether the "response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponse {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "escalation_level0" field.</summary>
    public const int EscalationLevel0FieldNumber = 2;
    private readonly static uint EscalationLevel0DefaultValue = 0;

    private uint escalationLevel0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EscalationLevel0 {
      get { if ((_hasBits0 & 2) != 0) { return escalationLevel0_; } else { return EscalationLevel0DefaultValue; } }
      set {
        _hasBits0 |= 2;
        escalationLevel0_ = value;
      }
    }
    /// <summary>Gets whether the "escalation_level0" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEscalationLevel0 {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "escalation_level0" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEscalationLevel0() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "escalation_level1" field.</summary>
    public const int EscalationLevel1FieldNumber = 3;
    private readonly static uint EscalationLevel1DefaultValue = 0;

    private uint escalationLevel1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EscalationLevel1 {
      get { if ((_hasBits0 & 4) != 0) { return escalationLevel1_; } else { return EscalationLevel1DefaultValue; } }
      set {
        _hasBits0 |= 4;
        escalationLevel1_ = value;
      }
    }
    /// <summary>Gets whether the "escalation_level1" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEscalationLevel1 {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "escalation_level1" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEscalationLevel1() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "escalation_level2" field.</summary>
    public const int EscalationLevel2FieldNumber = 4;
    private readonly static uint EscalationLevel2DefaultValue = 0;

    private uint escalationLevel2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EscalationLevel2 {
      get { if ((_hasBits0 & 8) != 0) { return escalationLevel2_; } else { return EscalationLevel2DefaultValue; } }
      set {
        _hasBits0 |= 8;
        escalationLevel2_ = value;
      }
    }
    /// <summary>Gets whether the "escalation_level2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEscalationLevel2 {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "escalation_level2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEscalationLevel2() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "escalation_level3" field.</summary>
    public const int EscalationLevel3FieldNumber = 5;
    private readonly static uint EscalationLevel3DefaultValue = 0;

    private uint escalationLevel3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EscalationLevel3 {
      get { if ((_hasBits0 & 16) != 0) { return escalationLevel3_; } else { return EscalationLevel3DefaultValue; } }
      set {
        _hasBits0 |= 16;
        escalationLevel3_ = value;
      }
    }
    /// <summary>Gets whether the "escalation_level3" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEscalationLevel3 {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "escalation_level3" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEscalationLevel3() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgRequestCrateEscalationLevelResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgRequestCrateEscalationLevelResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Response != other.Response) return false;
      if (EscalationLevel0 != other.EscalationLevel0) return false;
      if (EscalationLevel1 != other.EscalationLevel1) return false;
      if (EscalationLevel2 != other.EscalationLevel2) return false;
      if (EscalationLevel3 != other.EscalationLevel3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResponse) hash ^= Response.GetHashCode();
      if (HasEscalationLevel0) hash ^= EscalationLevel0.GetHashCode();
      if (HasEscalationLevel1) hash ^= EscalationLevel1.GetHashCode();
      if (HasEscalationLevel2) hash ^= EscalationLevel2.GetHashCode();
      if (HasEscalationLevel3) hash ^= EscalationLevel3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteUInt32(Response);
      }
      if (HasEscalationLevel0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EscalationLevel0);
      }
      if (HasEscalationLevel1) {
        output.WriteRawTag(24);
        output.WriteUInt32(EscalationLevel1);
      }
      if (HasEscalationLevel2) {
        output.WriteRawTag(32);
        output.WriteUInt32(EscalationLevel2);
      }
      if (HasEscalationLevel3) {
        output.WriteRawTag(40);
        output.WriteUInt32(EscalationLevel3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteUInt32(Response);
      }
      if (HasEscalationLevel0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EscalationLevel0);
      }
      if (HasEscalationLevel1) {
        output.WriteRawTag(24);
        output.WriteUInt32(EscalationLevel1);
      }
      if (HasEscalationLevel2) {
        output.WriteRawTag(32);
        output.WriteUInt32(EscalationLevel2);
      }
      if (HasEscalationLevel3) {
        output.WriteRawTag(40);
        output.WriteUInt32(EscalationLevel3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResponse) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Response);
      }
      if (HasEscalationLevel0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EscalationLevel0);
      }
      if (HasEscalationLevel1) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EscalationLevel1);
      }
      if (HasEscalationLevel2) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EscalationLevel2);
      }
      if (HasEscalationLevel3) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EscalationLevel3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgRequestCrateEscalationLevelResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResponse) {
        Response = other.Response;
      }
      if (other.HasEscalationLevel0) {
        EscalationLevel0 = other.EscalationLevel0;
      }
      if (other.HasEscalationLevel1) {
        EscalationLevel1 = other.EscalationLevel1;
      }
      if (other.HasEscalationLevel2) {
        EscalationLevel2 = other.EscalationLevel2;
      }
      if (other.HasEscalationLevel3) {
        EscalationLevel3 = other.EscalationLevel3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Response = input.ReadUInt32();
            break;
          }
          case 16: {
            EscalationLevel0 = input.ReadUInt32();
            break;
          }
          case 24: {
            EscalationLevel1 = input.ReadUInt32();
            break;
          }
          case 32: {
            EscalationLevel2 = input.ReadUInt32();
            break;
          }
          case 40: {
            EscalationLevel3 = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Response = input.ReadUInt32();
            break;
          }
          case 16: {
            EscalationLevel0 = input.ReadUInt32();
            break;
          }
          case 24: {
            EscalationLevel1 = input.ReadUInt32();
            break;
          }
          case 32: {
            EscalationLevel2 = input.ReadUInt32();
            break;
          }
          case 40: {
            EscalationLevel3 = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgRequestCrateEscalationLevelResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EResult {
        [pbr::OriginalName("k_Succeeded")] KSucceeded = 0,
        [pbr::OriginalName("k_Failed")] KFailed = 1,
      }

    }
    #endregion

  }

  public sealed partial class CMsgGCToGCCanUseDropRateBonus : pb::IMessage<CMsgGCToGCCanUseDropRateBonus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCCanUseDropRateBonus> _parser = new pb::MessageParser<CMsgGCToGCCanUseDropRateBonus>(() => new CMsgGCToGCCanUseDropRateBonus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCCanUseDropRateBonus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCCanUseDropRateBonus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCCanUseDropRateBonus(CMsgGCToGCCanUseDropRateBonus other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      dropRateBonus_ = other.dropRateBonus_;
      boosterType_ = other.boosterType_;
      exclusiveItemDef_ = other.exclusiveItemDef_;
      allowEqualRate_ = other.allowEqualRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCCanUseDropRateBonus Clone() {
      return new CMsgGCToGCCanUseDropRateBonus(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "drop_rate_bonus" field.</summary>
    public const int DropRateBonusFieldNumber = 2;
    private readonly static float DropRateBonusDefaultValue = 0F;

    private float dropRateBonus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DropRateBonus {
      get { if ((_hasBits0 & 2) != 0) { return dropRateBonus_; } else { return DropRateBonusDefaultValue; } }
      set {
        _hasBits0 |= 2;
        dropRateBonus_ = value;
      }
    }
    /// <summary>Gets whether the "drop_rate_bonus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDropRateBonus {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "drop_rate_bonus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDropRateBonus() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "booster_type" field.</summary>
    public const int BoosterTypeFieldNumber = 3;
    private readonly static uint BoosterTypeDefaultValue = 0;

    private uint boosterType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BoosterType {
      get { if ((_hasBits0 & 4) != 0) { return boosterType_; } else { return BoosterTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        boosterType_ = value;
      }
    }
    /// <summary>Gets whether the "booster_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBoosterType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "booster_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBoosterType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "exclusive_item_def" field.</summary>
    public const int ExclusiveItemDefFieldNumber = 4;
    private readonly static uint ExclusiveItemDefDefaultValue = 0;

    private uint exclusiveItemDef_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ExclusiveItemDef {
      get { if ((_hasBits0 & 8) != 0) { return exclusiveItemDef_; } else { return ExclusiveItemDefDefaultValue; } }
      set {
        _hasBits0 |= 8;
        exclusiveItemDef_ = value;
      }
    }
    /// <summary>Gets whether the "exclusive_item_def" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExclusiveItemDef {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "exclusive_item_def" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExclusiveItemDef() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "allow_equal_rate" field.</summary>
    public const int AllowEqualRateFieldNumber = 5;
    private readonly static bool AllowEqualRateDefaultValue = false;

    private bool allowEqualRate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllowEqualRate {
      get { if ((_hasBits0 & 16) != 0) { return allowEqualRate_; } else { return AllowEqualRateDefaultValue; } }
      set {
        _hasBits0 |= 16;
        allowEqualRate_ = value;
      }
    }
    /// <summary>Gets whether the "allow_equal_rate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAllowEqualRate {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "allow_equal_rate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAllowEqualRate() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCCanUseDropRateBonus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCCanUseDropRateBonus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DropRateBonus, other.DropRateBonus)) return false;
      if (BoosterType != other.BoosterType) return false;
      if (ExclusiveItemDef != other.ExclusiveItemDef) return false;
      if (AllowEqualRate != other.AllowEqualRate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasDropRateBonus) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DropRateBonus);
      if (HasBoosterType) hash ^= BoosterType.GetHashCode();
      if (HasExclusiveItemDef) hash ^= ExclusiveItemDef.GetHashCode();
      if (HasAllowEqualRate) hash ^= AllowEqualRate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasDropRateBonus) {
        output.WriteRawTag(21);
        output.WriteFloat(DropRateBonus);
      }
      if (HasBoosterType) {
        output.WriteRawTag(24);
        output.WriteUInt32(BoosterType);
      }
      if (HasExclusiveItemDef) {
        output.WriteRawTag(32);
        output.WriteUInt32(ExclusiveItemDef);
      }
      if (HasAllowEqualRate) {
        output.WriteRawTag(40);
        output.WriteBool(AllowEqualRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasDropRateBonus) {
        output.WriteRawTag(21);
        output.WriteFloat(DropRateBonus);
      }
      if (HasBoosterType) {
        output.WriteRawTag(24);
        output.WriteUInt32(BoosterType);
      }
      if (HasExclusiveItemDef) {
        output.WriteRawTag(32);
        output.WriteUInt32(ExclusiveItemDef);
      }
      if (HasAllowEqualRate) {
        output.WriteRawTag(40);
        output.WriteBool(AllowEqualRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (HasDropRateBonus) {
        size += 1 + 4;
      }
      if (HasBoosterType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BoosterType);
      }
      if (HasExclusiveItemDef) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExclusiveItemDef);
      }
      if (HasAllowEqualRate) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCCanUseDropRateBonus other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasDropRateBonus) {
        DropRateBonus = other.DropRateBonus;
      }
      if (other.HasBoosterType) {
        BoosterType = other.BoosterType;
      }
      if (other.HasExclusiveItemDef) {
        ExclusiveItemDef = other.ExclusiveItemDef;
      }
      if (other.HasAllowEqualRate) {
        AllowEqualRate = other.AllowEqualRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 21: {
            DropRateBonus = input.ReadFloat();
            break;
          }
          case 24: {
            BoosterType = input.ReadUInt32();
            break;
          }
          case 32: {
            ExclusiveItemDef = input.ReadUInt32();
            break;
          }
          case 40: {
            AllowEqualRate = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 21: {
            DropRateBonus = input.ReadFloat();
            break;
          }
          case 24: {
            BoosterType = input.ReadUInt32();
            break;
          }
          case 32: {
            ExclusiveItemDef = input.ReadUInt32();
            break;
          }
          case 40: {
            AllowEqualRate = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgSQLAddDropRateBonus : pb::IMessage<CMsgSQLAddDropRateBonus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSQLAddDropRateBonus> _parser = new pb::MessageParser<CMsgSQLAddDropRateBonus>(() => new CMsgSQLAddDropRateBonus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgSQLAddDropRateBonus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSQLAddDropRateBonus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSQLAddDropRateBonus(CMsgSQLAddDropRateBonus other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      itemId_ = other.itemId_;
      itemDef_ = other.itemDef_;
      dropRateBonus_ = other.dropRateBonus_;
      boosterType_ = other.boosterType_;
      secondsDuration_ = other.secondsDuration_;
      endTimeStamp_ = other.endTimeStamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSQLAddDropRateBonus Clone() {
      return new CMsgSQLAddDropRateBonus(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 2) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "item_def" field.</summary>
    public const int ItemDefFieldNumber = 3;
    private readonly static uint ItemDefDefaultValue = 0;

    private uint itemDef_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemDef {
      get { if ((_hasBits0 & 4) != 0) { return itemDef_; } else { return ItemDefDefaultValue; } }
      set {
        _hasBits0 |= 4;
        itemDef_ = value;
      }
    }
    /// <summary>Gets whether the "item_def" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemDef {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "item_def" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemDef() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "drop_rate_bonus" field.</summary>
    public const int DropRateBonusFieldNumber = 4;
    private readonly static float DropRateBonusDefaultValue = 0F;

    private float dropRateBonus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DropRateBonus {
      get { if ((_hasBits0 & 8) != 0) { return dropRateBonus_; } else { return DropRateBonusDefaultValue; } }
      set {
        _hasBits0 |= 8;
        dropRateBonus_ = value;
      }
    }
    /// <summary>Gets whether the "drop_rate_bonus" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDropRateBonus {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "drop_rate_bonus" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDropRateBonus() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "booster_type" field.</summary>
    public const int BoosterTypeFieldNumber = 5;
    private readonly static uint BoosterTypeDefaultValue = 0;

    private uint boosterType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BoosterType {
      get { if ((_hasBits0 & 16) != 0) { return boosterType_; } else { return BoosterTypeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        boosterType_ = value;
      }
    }
    /// <summary>Gets whether the "booster_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBoosterType {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "booster_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBoosterType() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "seconds_duration" field.</summary>
    public const int SecondsDurationFieldNumber = 6;
    private readonly static uint SecondsDurationDefaultValue = 0;

    private uint secondsDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SecondsDuration {
      get { if ((_hasBits0 & 32) != 0) { return secondsDuration_; } else { return SecondsDurationDefaultValue; } }
      set {
        _hasBits0 |= 32;
        secondsDuration_ = value;
      }
    }
    /// <summary>Gets whether the "seconds_duration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSecondsDuration {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "seconds_duration" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSecondsDuration() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "end_time_stamp" field.</summary>
    public const int EndTimeStampFieldNumber = 7;
    private readonly static uint EndTimeStampDefaultValue = 0;

    private uint endTimeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint EndTimeStamp {
      get { if ((_hasBits0 & 64) != 0) { return endTimeStamp_; } else { return EndTimeStampDefaultValue; } }
      set {
        _hasBits0 |= 64;
        endTimeStamp_ = value;
      }
    }
    /// <summary>Gets whether the "end_time_stamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEndTimeStamp {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "end_time_stamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEndTimeStamp() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgSQLAddDropRateBonus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgSQLAddDropRateBonus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (ItemId != other.ItemId) return false;
      if (ItemDef != other.ItemDef) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DropRateBonus, other.DropRateBonus)) return false;
      if (BoosterType != other.BoosterType) return false;
      if (SecondsDuration != other.SecondsDuration) return false;
      if (EndTimeStamp != other.EndTimeStamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (HasItemDef) hash ^= ItemDef.GetHashCode();
      if (HasDropRateBonus) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DropRateBonus);
      if (HasBoosterType) hash ^= BoosterType.GetHashCode();
      if (HasSecondsDuration) hash ^= SecondsDuration.GetHashCode();
      if (HasEndTimeStamp) hash ^= EndTimeStamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ItemId);
      }
      if (HasItemDef) {
        output.WriteRawTag(24);
        output.WriteUInt32(ItemDef);
      }
      if (HasDropRateBonus) {
        output.WriteRawTag(37);
        output.WriteFloat(DropRateBonus);
      }
      if (HasBoosterType) {
        output.WriteRawTag(40);
        output.WriteUInt32(BoosterType);
      }
      if (HasSecondsDuration) {
        output.WriteRawTag(48);
        output.WriteUInt32(SecondsDuration);
      }
      if (HasEndTimeStamp) {
        output.WriteRawTag(56);
        output.WriteUInt32(EndTimeStamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ItemId);
      }
      if (HasItemDef) {
        output.WriteRawTag(24);
        output.WriteUInt32(ItemDef);
      }
      if (HasDropRateBonus) {
        output.WriteRawTag(37);
        output.WriteFloat(DropRateBonus);
      }
      if (HasBoosterType) {
        output.WriteRawTag(40);
        output.WriteUInt32(BoosterType);
      }
      if (HasSecondsDuration) {
        output.WriteRawTag(48);
        output.WriteUInt32(SecondsDuration);
      }
      if (HasEndTimeStamp) {
        output.WriteRawTag(56);
        output.WriteUInt32(EndTimeStamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (HasItemDef) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemDef);
      }
      if (HasDropRateBonus) {
        size += 1 + 4;
      }
      if (HasBoosterType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BoosterType);
      }
      if (HasSecondsDuration) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SecondsDuration);
      }
      if (HasEndTimeStamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EndTimeStamp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgSQLAddDropRateBonus other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasItemDef) {
        ItemDef = other.ItemDef;
      }
      if (other.HasDropRateBonus) {
        DropRateBonus = other.DropRateBonus;
      }
      if (other.HasBoosterType) {
        BoosterType = other.BoosterType;
      }
      if (other.HasSecondsDuration) {
        SecondsDuration = other.SecondsDuration;
      }
      if (other.HasEndTimeStamp) {
        EndTimeStamp = other.EndTimeStamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 24: {
            ItemDef = input.ReadUInt32();
            break;
          }
          case 37: {
            DropRateBonus = input.ReadFloat();
            break;
          }
          case 40: {
            BoosterType = input.ReadUInt32();
            break;
          }
          case 48: {
            SecondsDuration = input.ReadUInt32();
            break;
          }
          case 56: {
            EndTimeStamp = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 24: {
            ItemDef = input.ReadUInt32();
            break;
          }
          case 37: {
            DropRateBonus = input.ReadFloat();
            break;
          }
          case 40: {
            BoosterType = input.ReadUInt32();
            break;
          }
          case 48: {
            SecondsDuration = input.ReadUInt32();
            break;
          }
          case 56: {
            EndTimeStamp = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgSQLUpgradeBattleBooster : pb::IMessage<CMsgSQLUpgradeBattleBooster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSQLUpgradeBattleBooster> _parser = new pb::MessageParser<CMsgSQLUpgradeBattleBooster>(() => new CMsgSQLUpgradeBattleBooster());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgSQLUpgradeBattleBooster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSQLUpgradeBattleBooster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSQLUpgradeBattleBooster(CMsgSQLUpgradeBattleBooster other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      itemDef_ = other.itemDef_;
      bonusToAdd_ = other.bonusToAdd_;
      boosterType_ = other.boosterType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSQLUpgradeBattleBooster Clone() {
      return new CMsgSQLUpgradeBattleBooster(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_def" field.</summary>
    public const int ItemDefFieldNumber = 2;
    private readonly static uint ItemDefDefaultValue = 0;

    private uint itemDef_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemDef {
      get { if ((_hasBits0 & 2) != 0) { return itemDef_; } else { return ItemDefDefaultValue; } }
      set {
        _hasBits0 |= 2;
        itemDef_ = value;
      }
    }
    /// <summary>Gets whether the "item_def" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemDef {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "item_def" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemDef() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "bonus_to_add" field.</summary>
    public const int BonusToAddFieldNumber = 3;
    private readonly static float BonusToAddDefaultValue = 0F;

    private float bonusToAdd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float BonusToAdd {
      get { if ((_hasBits0 & 4) != 0) { return bonusToAdd_; } else { return BonusToAddDefaultValue; } }
      set {
        _hasBits0 |= 4;
        bonusToAdd_ = value;
      }
    }
    /// <summary>Gets whether the "bonus_to_add" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBonusToAdd {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "bonus_to_add" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBonusToAdd() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "booster_type" field.</summary>
    public const int BoosterTypeFieldNumber = 4;
    private readonly static uint BoosterTypeDefaultValue = 0;

    private uint boosterType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BoosterType {
      get { if ((_hasBits0 & 8) != 0) { return boosterType_; } else { return BoosterTypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        boosterType_ = value;
      }
    }
    /// <summary>Gets whether the "booster_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBoosterType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "booster_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBoosterType() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgSQLUpgradeBattleBooster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgSQLUpgradeBattleBooster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (ItemDef != other.ItemDef) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BonusToAdd, other.BonusToAdd)) return false;
      if (BoosterType != other.BoosterType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasItemDef) hash ^= ItemDef.GetHashCode();
      if (HasBonusToAdd) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BonusToAdd);
      if (HasBoosterType) hash ^= BoosterType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasItemDef) {
        output.WriteRawTag(16);
        output.WriteUInt32(ItemDef);
      }
      if (HasBonusToAdd) {
        output.WriteRawTag(29);
        output.WriteFloat(BonusToAdd);
      }
      if (HasBoosterType) {
        output.WriteRawTag(32);
        output.WriteUInt32(BoosterType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasItemDef) {
        output.WriteRawTag(16);
        output.WriteUInt32(ItemDef);
      }
      if (HasBonusToAdd) {
        output.WriteRawTag(29);
        output.WriteFloat(BonusToAdd);
      }
      if (HasBoosterType) {
        output.WriteRawTag(32);
        output.WriteUInt32(BoosterType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (HasItemDef) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemDef);
      }
      if (HasBonusToAdd) {
        size += 1 + 4;
      }
      if (HasBoosterType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BoosterType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgSQLUpgradeBattleBooster other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasItemDef) {
        ItemDef = other.ItemDef;
      }
      if (other.HasBonusToAdd) {
        BonusToAdd = other.BonusToAdd;
      }
      if (other.HasBoosterType) {
        BoosterType = other.BoosterType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemDef = input.ReadUInt32();
            break;
          }
          case 29: {
            BonusToAdd = input.ReadFloat();
            break;
          }
          case 32: {
            BoosterType = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemDef = input.ReadUInt32();
            break;
          }
          case 29: {
            BonusToAdd = input.ReadFloat();
            break;
          }
          case 32: {
            BoosterType = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCRefreshSOCache : pb::IMessage<CMsgGCToGCRefreshSOCache>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCRefreshSOCache> _parser = new pb::MessageParser<CMsgGCToGCRefreshSOCache>(() => new CMsgGCToGCRefreshSOCache());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCRefreshSOCache> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCRefreshSOCache() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCRefreshSOCache(CMsgGCToGCRefreshSOCache other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      reload_ = other.reload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCRefreshSOCache Clone() {
      return new CMsgGCToGCRefreshSOCache(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "reload" field.</summary>
    public const int ReloadFieldNumber = 2;
    private readonly static bool ReloadDefaultValue = false;

    private bool reload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reload {
      get { if ((_hasBits0 & 2) != 0) { return reload_; } else { return ReloadDefaultValue; } }
      set {
        _hasBits0 |= 2;
        reload_ = value;
      }
    }
    /// <summary>Gets whether the "reload" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReload {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "reload" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReload() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCRefreshSOCache);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCRefreshSOCache other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (Reload != other.Reload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasReload) hash ^= Reload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasReload) {
        output.WriteRawTag(16);
        output.WriteBool(Reload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasReload) {
        output.WriteRawTag(16);
        output.WriteBool(Reload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (HasReload) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCRefreshSOCache other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasReload) {
        Reload = other.Reload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            Reload = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            Reload = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCAddSubscriptionTime : pb::IMessage<CMsgGCToGCAddSubscriptionTime>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCAddSubscriptionTime> _parser = new pb::MessageParser<CMsgGCToGCAddSubscriptionTime>(() => new CMsgGCToGCAddSubscriptionTime());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCAddSubscriptionTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCAddSubscriptionTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCAddSubscriptionTime(CMsgGCToGCAddSubscriptionTime other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      matchingSubscriptionDefIndexes_ = other.matchingSubscriptionDefIndexes_.Clone();
      additionalSeconds_ = other.additionalSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCAddSubscriptionTime Clone() {
      return new CMsgGCToGCAddSubscriptionTime(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "matching_subscription_def_indexes" field.</summary>
    public const int MatchingSubscriptionDefIndexesFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_matchingSubscriptionDefIndexes_codec
        = pb::FieldCodec.ForUInt32(16);
    private readonly pbc::RepeatedField<uint> matchingSubscriptionDefIndexes_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> MatchingSubscriptionDefIndexes {
      get { return matchingSubscriptionDefIndexes_; }
    }

    /// <summary>Field number for the "additional_seconds" field.</summary>
    public const int AdditionalSecondsFieldNumber = 3;
    private readonly static uint AdditionalSecondsDefaultValue = 0;

    private uint additionalSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AdditionalSeconds {
      get { if ((_hasBits0 & 2) != 0) { return additionalSeconds_; } else { return AdditionalSecondsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        additionalSeconds_ = value;
      }
    }
    /// <summary>Gets whether the "additional_seconds" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAdditionalSeconds {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "additional_seconds" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAdditionalSeconds() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCAddSubscriptionTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCAddSubscriptionTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if(!matchingSubscriptionDefIndexes_.Equals(other.matchingSubscriptionDefIndexes_)) return false;
      if (AdditionalSeconds != other.AdditionalSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      hash ^= matchingSubscriptionDefIndexes_.GetHashCode();
      if (HasAdditionalSeconds) hash ^= AdditionalSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      matchingSubscriptionDefIndexes_.WriteTo(output, _repeated_matchingSubscriptionDefIndexes_codec);
      if (HasAdditionalSeconds) {
        output.WriteRawTag(24);
        output.WriteUInt32(AdditionalSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      matchingSubscriptionDefIndexes_.WriteTo(ref output, _repeated_matchingSubscriptionDefIndexes_codec);
      if (HasAdditionalSeconds) {
        output.WriteRawTag(24);
        output.WriteUInt32(AdditionalSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      size += matchingSubscriptionDefIndexes_.CalculateSize(_repeated_matchingSubscriptionDefIndexes_codec);
      if (HasAdditionalSeconds) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AdditionalSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCAddSubscriptionTime other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      matchingSubscriptionDefIndexes_.Add(other.matchingSubscriptionDefIndexes_);
      if (other.HasAdditionalSeconds) {
        AdditionalSeconds = other.AdditionalSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            matchingSubscriptionDefIndexes_.AddEntriesFrom(input, _repeated_matchingSubscriptionDefIndexes_codec);
            break;
          }
          case 24: {
            AdditionalSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            matchingSubscriptionDefIndexes_.AddEntriesFrom(ref input, _repeated_matchingSubscriptionDefIndexes_codec);
            break;
          }
          case 24: {
            AdditionalSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCGrantAccountRolledItems : pb::IMessage<CMsgGCToGCGrantAccountRolledItems>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCGrantAccountRolledItems> _parser = new pb::MessageParser<CMsgGCToGCGrantAccountRolledItems>(() => new CMsgGCToGCGrantAccountRolledItems());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCGrantAccountRolledItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGrantAccountRolledItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGrantAccountRolledItems(CMsgGCToGCGrantAccountRolledItems other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      items_ = other.items_.Clone();
      auditAction_ = other.auditAction_;
      auditData_ = other.auditData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGrantAccountRolledItems Clone() {
      return new CMsgGCToGCGrantAccountRolledItems(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item> items_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "audit_action" field.</summary>
    public const int AuditActionFieldNumber = 3;
    private readonly static uint AuditActionDefaultValue = 0;

    private uint auditAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AuditAction {
      get { if ((_hasBits0 & 2) != 0) { return auditAction_; } else { return AuditActionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        auditAction_ = value;
      }
    }
    /// <summary>Gets whether the "audit_action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAuditAction {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "audit_action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAuditAction() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "audit_data" field.</summary>
    public const int AuditDataFieldNumber = 4;
    private readonly static ulong AuditDataDefaultValue = 0UL;

    private ulong auditData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AuditData {
      get { if ((_hasBits0 & 4) != 0) { return auditData_; } else { return AuditDataDefaultValue; } }
      set {
        _hasBits0 |= 4;
        auditData_ = value;
      }
    }
    /// <summary>Gets whether the "audit_data" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAuditData {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "audit_data" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAuditData() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCGrantAccountRolledItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCGrantAccountRolledItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if(!items_.Equals(other.items_)) return false;
      if (AuditAction != other.AuditAction) return false;
      if (AuditData != other.AuditData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      hash ^= items_.GetHashCode();
      if (HasAuditAction) hash ^= AuditAction.GetHashCode();
      if (HasAuditData) hash ^= AuditData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (HasAuditAction) {
        output.WriteRawTag(24);
        output.WriteUInt32(AuditAction);
      }
      if (HasAuditData) {
        output.WriteRawTag(32);
        output.WriteUInt64(AuditData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (HasAuditAction) {
        output.WriteRawTag(24);
        output.WriteUInt32(AuditAction);
      }
      if (HasAuditData) {
        output.WriteRawTag(32);
        output.WriteUInt64(AuditData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (HasAuditAction) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AuditAction);
      }
      if (HasAuditData) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AuditData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCGrantAccountRolledItems other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      items_.Add(other.items_);
      if (other.HasAuditAction) {
        AuditAction = other.AuditAction;
      }
      if (other.HasAuditData) {
        AuditData = other.AuditData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 24: {
            AuditAction = input.ReadUInt32();
            break;
          }
          case 32: {
            AuditData = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 18: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
          case 24: {
            AuditAction = input.ReadUInt32();
            break;
          }
          case 32: {
            AuditData = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgGCToGCGrantAccountRolledItems message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Item : pb::IMessage<Item>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Item> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item(Item other) : this() {
          _hasBits0 = other._hasBits0;
          itemDef_ = other.itemDef_;
          lootLists_ = other.lootLists_.Clone();
          ignoreLimit_ = other.ignoreLimit_;
          origin_ = other.origin_;
          dynamicAttributes_ = other.dynamicAttributes_.Clone();
          additionalAuditEntries_ = other.additionalAuditEntries_.Clone();
          inventoryToken_ = other.inventoryToken_;
          quality_ = other.quality_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item Clone() {
          return new Item(this);
        }

        /// <summary>Field number for the "item_def" field.</summary>
        public const int ItemDefFieldNumber = 1;
        private readonly static uint ItemDefDefaultValue = 0;

        private uint itemDef_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ItemDef {
          get { if ((_hasBits0 & 1) != 0) { return itemDef_; } else { return ItemDefDefaultValue; } }
          set {
            _hasBits0 |= 1;
            itemDef_ = value;
          }
        }
        /// <summary>Gets whether the "item_def" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasItemDef {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "item_def" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearItemDef() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "loot_lists" field.</summary>
        public const int LootListsFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_lootLists_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> lootLists_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> LootLists {
          get { return lootLists_; }
        }

        /// <summary>Field number for the "ignore_limit" field.</summary>
        public const int IgnoreLimitFieldNumber = 3;
        private readonly static bool IgnoreLimitDefaultValue = false;

        private bool ignoreLimit_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IgnoreLimit {
          get { if ((_hasBits0 & 2) != 0) { return ignoreLimit_; } else { return IgnoreLimitDefaultValue; } }
          set {
            _hasBits0 |= 2;
            ignoreLimit_ = value;
          }
        }
        /// <summary>Gets whether the "ignore_limit" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasIgnoreLimit {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "ignore_limit" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearIgnoreLimit() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "origin" field.</summary>
        public const int OriginFieldNumber = 4;
        private readonly static uint OriginDefaultValue = 0;

        private uint origin_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Origin {
          get { if ((_hasBits0 & 4) != 0) { return origin_; } else { return OriginDefaultValue; } }
          set {
            _hasBits0 |= 4;
            origin_ = value;
          }
        }
        /// <summary>Gets whether the "origin" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasOrigin {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "origin" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearOrigin() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "dynamic_attributes" field.</summary>
        public const int DynamicAttributesFieldNumber = 5;
        private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Types.DynamicAttribute> _repeated_dynamicAttributes_codec
            = pb::FieldCodec.ForMessage(42, global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Types.DynamicAttribute.Parser);
        private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Types.DynamicAttribute> dynamicAttributes_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Types.DynamicAttribute>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Types.DynamicAttribute> DynamicAttributes {
          get { return dynamicAttributes_; }
        }

        /// <summary>Field number for the "additional_audit_entries" field.</summary>
        public const int AdditionalAuditEntriesFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Types.AdditionalAuditEntry> _repeated_additionalAuditEntries_codec
            = pb::FieldCodec.ForMessage(50, global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Types.AdditionalAuditEntry.Parser);
        private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Types.AdditionalAuditEntry> additionalAuditEntries_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Types.AdditionalAuditEntry>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Types.AdditionalAuditEntry> AdditionalAuditEntries {
          get { return additionalAuditEntries_; }
        }

        /// <summary>Field number for the "inventory_token" field.</summary>
        public const int InventoryTokenFieldNumber = 7;
        private readonly static uint InventoryTokenDefaultValue = 0;

        private uint inventoryToken_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint InventoryToken {
          get { if ((_hasBits0 & 8) != 0) { return inventoryToken_; } else { return InventoryTokenDefaultValue; } }
          set {
            _hasBits0 |= 8;
            inventoryToken_ = value;
          }
        }
        /// <summary>Gets whether the "inventory_token" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasInventoryToken {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "inventory_token" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearInventoryToken() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "quality" field.</summary>
        public const int QualityFieldNumber = 8;
        private readonly static int QualityDefaultValue = -1;

        private int quality_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Quality {
          get { if ((_hasBits0 & 16) != 0) { return quality_; } else { return QualityDefaultValue; } }
          set {
            _hasBits0 |= 16;
            quality_ = value;
          }
        }
        /// <summary>Gets whether the "quality" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasQuality {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "quality" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearQuality() {
          _hasBits0 &= ~16;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Item);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Item other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ItemDef != other.ItemDef) return false;
          if(!lootLists_.Equals(other.lootLists_)) return false;
          if (IgnoreLimit != other.IgnoreLimit) return false;
          if (Origin != other.Origin) return false;
          if(!dynamicAttributes_.Equals(other.dynamicAttributes_)) return false;
          if(!additionalAuditEntries_.Equals(other.additionalAuditEntries_)) return false;
          if (InventoryToken != other.InventoryToken) return false;
          if (Quality != other.Quality) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasItemDef) hash ^= ItemDef.GetHashCode();
          hash ^= lootLists_.GetHashCode();
          if (HasIgnoreLimit) hash ^= IgnoreLimit.GetHashCode();
          if (HasOrigin) hash ^= Origin.GetHashCode();
          hash ^= dynamicAttributes_.GetHashCode();
          hash ^= additionalAuditEntries_.GetHashCode();
          if (HasInventoryToken) hash ^= InventoryToken.GetHashCode();
          if (HasQuality) hash ^= Quality.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasItemDef) {
            output.WriteRawTag(8);
            output.WriteUInt32(ItemDef);
          }
          lootLists_.WriteTo(output, _repeated_lootLists_codec);
          if (HasIgnoreLimit) {
            output.WriteRawTag(24);
            output.WriteBool(IgnoreLimit);
          }
          if (HasOrigin) {
            output.WriteRawTag(32);
            output.WriteUInt32(Origin);
          }
          dynamicAttributes_.WriteTo(output, _repeated_dynamicAttributes_codec);
          additionalAuditEntries_.WriteTo(output, _repeated_additionalAuditEntries_codec);
          if (HasInventoryToken) {
            output.WriteRawTag(56);
            output.WriteUInt32(InventoryToken);
          }
          if (HasQuality) {
            output.WriteRawTag(64);
            output.WriteInt32(Quality);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasItemDef) {
            output.WriteRawTag(8);
            output.WriteUInt32(ItemDef);
          }
          lootLists_.WriteTo(ref output, _repeated_lootLists_codec);
          if (HasIgnoreLimit) {
            output.WriteRawTag(24);
            output.WriteBool(IgnoreLimit);
          }
          if (HasOrigin) {
            output.WriteRawTag(32);
            output.WriteUInt32(Origin);
          }
          dynamicAttributes_.WriteTo(ref output, _repeated_dynamicAttributes_codec);
          additionalAuditEntries_.WriteTo(ref output, _repeated_additionalAuditEntries_codec);
          if (HasInventoryToken) {
            output.WriteRawTag(56);
            output.WriteUInt32(InventoryToken);
          }
          if (HasQuality) {
            output.WriteRawTag(64);
            output.WriteInt32(Quality);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasItemDef) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemDef);
          }
          size += lootLists_.CalculateSize(_repeated_lootLists_codec);
          if (HasIgnoreLimit) {
            size += 1 + 1;
          }
          if (HasOrigin) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Origin);
          }
          size += dynamicAttributes_.CalculateSize(_repeated_dynamicAttributes_codec);
          size += additionalAuditEntries_.CalculateSize(_repeated_additionalAuditEntries_codec);
          if (HasInventoryToken) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InventoryToken);
          }
          if (HasQuality) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quality);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Item other) {
          if (other == null) {
            return;
          }
          if (other.HasItemDef) {
            ItemDef = other.ItemDef;
          }
          lootLists_.Add(other.lootLists_);
          if (other.HasIgnoreLimit) {
            IgnoreLimit = other.IgnoreLimit;
          }
          if (other.HasOrigin) {
            Origin = other.Origin;
          }
          dynamicAttributes_.Add(other.dynamicAttributes_);
          additionalAuditEntries_.Add(other.additionalAuditEntries_);
          if (other.HasInventoryToken) {
            InventoryToken = other.InventoryToken;
          }
          if (other.HasQuality) {
            Quality = other.Quality;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ItemDef = input.ReadUInt32();
                break;
              }
              case 18: {
                lootLists_.AddEntriesFrom(input, _repeated_lootLists_codec);
                break;
              }
              case 24: {
                IgnoreLimit = input.ReadBool();
                break;
              }
              case 32: {
                Origin = input.ReadUInt32();
                break;
              }
              case 42: {
                dynamicAttributes_.AddEntriesFrom(input, _repeated_dynamicAttributes_codec);
                break;
              }
              case 50: {
                additionalAuditEntries_.AddEntriesFrom(input, _repeated_additionalAuditEntries_codec);
                break;
              }
              case 56: {
                InventoryToken = input.ReadUInt32();
                break;
              }
              case 64: {
                Quality = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ItemDef = input.ReadUInt32();
                break;
              }
              case 18: {
                lootLists_.AddEntriesFrom(ref input, _repeated_lootLists_codec);
                break;
              }
              case 24: {
                IgnoreLimit = input.ReadBool();
                break;
              }
              case 32: {
                Origin = input.ReadUInt32();
                break;
              }
              case 42: {
                dynamicAttributes_.AddEntriesFrom(ref input, _repeated_dynamicAttributes_codec);
                break;
              }
              case 50: {
                additionalAuditEntries_.AddEntriesFrom(ref input, _repeated_additionalAuditEntries_codec);
                break;
              }
              case 56: {
                InventoryToken = input.ReadUInt32();
                break;
              }
              case 64: {
                Quality = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Item message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class DynamicAttribute : pb::IMessage<DynamicAttribute>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<DynamicAttribute> _parser = new pb::MessageParser<DynamicAttribute>(() => new DynamicAttribute());
            private pb::UnknownFieldSet _unknownFields;
            private int _hasBits0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<DynamicAttribute> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DynamicAttribute() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DynamicAttribute(DynamicAttribute other) : this() {
              _hasBits0 = other._hasBits0;
              name_ = other.name_;
              valueUint32_ = other.valueUint32_;
              valueFloat_ = other.valueFloat_;
              valueString_ = other.valueString_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public DynamicAttribute Clone() {
              return new DynamicAttribute(this);
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 1;
            private readonly static string NameDefaultValue = "";

            private string name_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Name {
              get { return name_ ?? NameDefaultValue; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "name" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasName {
              get { return name_ != null; }
            }
            /// <summary>Clears the value of the "name" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearName() {
              name_ = null;
            }

            /// <summary>Field number for the "value_uint32" field.</summary>
            public const int ValueUint32FieldNumber = 2;
            private readonly static uint ValueUint32DefaultValue = 0;

            private uint valueUint32_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint ValueUint32 {
              get { if ((_hasBits0 & 1) != 0) { return valueUint32_; } else { return ValueUint32DefaultValue; } }
              set {
                _hasBits0 |= 1;
                valueUint32_ = value;
              }
            }
            /// <summary>Gets whether the "value_uint32" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasValueUint32 {
              get { return (_hasBits0 & 1) != 0; }
            }
            /// <summary>Clears the value of the "value_uint32" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearValueUint32() {
              _hasBits0 &= ~1;
            }

            /// <summary>Field number for the "value_float" field.</summary>
            public const int ValueFloatFieldNumber = 3;
            private readonly static float ValueFloatDefaultValue = 0F;

            private float valueFloat_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public float ValueFloat {
              get { if ((_hasBits0 & 2) != 0) { return valueFloat_; } else { return ValueFloatDefaultValue; } }
              set {
                _hasBits0 |= 2;
                valueFloat_ = value;
              }
            }
            /// <summary>Gets whether the "value_float" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasValueFloat {
              get { return (_hasBits0 & 2) != 0; }
            }
            /// <summary>Clears the value of the "value_float" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearValueFloat() {
              _hasBits0 &= ~2;
            }

            /// <summary>Field number for the "value_string" field.</summary>
            public const int ValueStringFieldNumber = 4;
            private readonly static string ValueStringDefaultValue = "";

            private string valueString_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string ValueString {
              get { return valueString_ ?? ValueStringDefaultValue; }
              set {
                valueString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }
            /// <summary>Gets whether the "value_string" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasValueString {
              get { return valueString_ != null; }
            }
            /// <summary>Clears the value of the "value_string" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearValueString() {
              valueString_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as DynamicAttribute);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(DynamicAttribute other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Name != other.Name) return false;
              if (ValueUint32 != other.ValueUint32) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ValueFloat, other.ValueFloat)) return false;
              if (ValueString != other.ValueString) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (HasName) hash ^= Name.GetHashCode();
              if (HasValueUint32) hash ^= ValueUint32.GetHashCode();
              if (HasValueFloat) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ValueFloat);
              if (HasValueString) hash ^= ValueString.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (HasName) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (HasValueUint32) {
                output.WriteRawTag(16);
                output.WriteUInt32(ValueUint32);
              }
              if (HasValueFloat) {
                output.WriteRawTag(29);
                output.WriteFloat(ValueFloat);
              }
              if (HasValueString) {
                output.WriteRawTag(34);
                output.WriteString(ValueString);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (HasName) {
                output.WriteRawTag(10);
                output.WriteString(Name);
              }
              if (HasValueUint32) {
                output.WriteRawTag(16);
                output.WriteUInt32(ValueUint32);
              }
              if (HasValueFloat) {
                output.WriteRawTag(29);
                output.WriteFloat(ValueFloat);
              }
              if (HasValueString) {
                output.WriteRawTag(34);
                output.WriteString(ValueString);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (HasName) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              if (HasValueUint32) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ValueUint32);
              }
              if (HasValueFloat) {
                size += 1 + 4;
              }
              if (HasValueString) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(ValueString);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(DynamicAttribute other) {
              if (other == null) {
                return;
              }
              if (other.HasName) {
                Name = other.Name;
              }
              if (other.HasValueUint32) {
                ValueUint32 = other.ValueUint32;
              }
              if (other.HasValueFloat) {
                ValueFloat = other.ValueFloat;
              }
              if (other.HasValueString) {
                ValueString = other.ValueString;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 16: {
                    ValueUint32 = input.ReadUInt32();
                    break;
                  }
                  case 29: {
                    ValueFloat = input.ReadFloat();
                    break;
                  }
                  case 34: {
                    ValueString = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Name = input.ReadString();
                    break;
                  }
                  case 16: {
                    ValueUint32 = input.ReadUInt32();
                    break;
                  }
                  case 29: {
                    ValueFloat = input.ReadFloat();
                    break;
                  }
                  case 34: {
                    ValueString = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class AdditionalAuditEntry : pb::IMessage<AdditionalAuditEntry>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<AdditionalAuditEntry> _parser = new pb::MessageParser<AdditionalAuditEntry>(() => new AdditionalAuditEntry());
            private pb::UnknownFieldSet _unknownFields;
            private int _hasBits0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<AdditionalAuditEntry> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Steam.Protos.Dota2.CMsgGCToGCGrantAccountRolledItems.Types.Item.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AdditionalAuditEntry() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AdditionalAuditEntry(AdditionalAuditEntry other) : this() {
              _hasBits0 = other._hasBits0;
              ownerAccountId_ = other.ownerAccountId_;
              auditAction_ = other.auditAction_;
              auditData_ = other.auditData_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public AdditionalAuditEntry Clone() {
              return new AdditionalAuditEntry(this);
            }

            /// <summary>Field number for the "owner_account_id" field.</summary>
            public const int OwnerAccountIdFieldNumber = 1;
            private readonly static uint OwnerAccountIdDefaultValue = 0;

            private uint ownerAccountId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint OwnerAccountId {
              get { if ((_hasBits0 & 1) != 0) { return ownerAccountId_; } else { return OwnerAccountIdDefaultValue; } }
              set {
                _hasBits0 |= 1;
                ownerAccountId_ = value;
              }
            }
            /// <summary>Gets whether the "owner_account_id" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasOwnerAccountId {
              get { return (_hasBits0 & 1) != 0; }
            }
            /// <summary>Clears the value of the "owner_account_id" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearOwnerAccountId() {
              _hasBits0 &= ~1;
            }

            /// <summary>Field number for the "audit_action" field.</summary>
            public const int AuditActionFieldNumber = 2;
            private readonly static uint AuditActionDefaultValue = 0;

            private uint auditAction_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint AuditAction {
              get { if ((_hasBits0 & 2) != 0) { return auditAction_; } else { return AuditActionDefaultValue; } }
              set {
                _hasBits0 |= 2;
                auditAction_ = value;
              }
            }
            /// <summary>Gets whether the "audit_action" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasAuditAction {
              get { return (_hasBits0 & 2) != 0; }
            }
            /// <summary>Clears the value of the "audit_action" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearAuditAction() {
              _hasBits0 &= ~2;
            }

            /// <summary>Field number for the "audit_data" field.</summary>
            public const int AuditDataFieldNumber = 3;
            private readonly static ulong AuditDataDefaultValue = 0UL;

            private ulong auditData_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ulong AuditData {
              get { if ((_hasBits0 & 4) != 0) { return auditData_; } else { return AuditDataDefaultValue; } }
              set {
                _hasBits0 |= 4;
                auditData_ = value;
              }
            }
            /// <summary>Gets whether the "audit_data" field is set</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool HasAuditData {
              get { return (_hasBits0 & 4) != 0; }
            }
            /// <summary>Clears the value of the "audit_data" field</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearAuditData() {
              _hasBits0 &= ~4;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as AdditionalAuditEntry);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(AdditionalAuditEntry other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (OwnerAccountId != other.OwnerAccountId) return false;
              if (AuditAction != other.AuditAction) return false;
              if (AuditData != other.AuditData) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (HasOwnerAccountId) hash ^= OwnerAccountId.GetHashCode();
              if (HasAuditAction) hash ^= AuditAction.GetHashCode();
              if (HasAuditData) hash ^= AuditData.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (HasOwnerAccountId) {
                output.WriteRawTag(8);
                output.WriteUInt32(OwnerAccountId);
              }
              if (HasAuditAction) {
                output.WriteRawTag(16);
                output.WriteUInt32(AuditAction);
              }
              if (HasAuditData) {
                output.WriteRawTag(24);
                output.WriteUInt64(AuditData);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (HasOwnerAccountId) {
                output.WriteRawTag(8);
                output.WriteUInt32(OwnerAccountId);
              }
              if (HasAuditAction) {
                output.WriteRawTag(16);
                output.WriteUInt32(AuditAction);
              }
              if (HasAuditData) {
                output.WriteRawTag(24);
                output.WriteUInt64(AuditData);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (HasOwnerAccountId) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OwnerAccountId);
              }
              if (HasAuditAction) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AuditAction);
              }
              if (HasAuditData) {
                size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AuditData);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(AdditionalAuditEntry other) {
              if (other == null) {
                return;
              }
              if (other.HasOwnerAccountId) {
                OwnerAccountId = other.OwnerAccountId;
              }
              if (other.HasAuditAction) {
                AuditAction = other.AuditAction;
              }
              if (other.HasAuditData) {
                AuditData = other.AuditData;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    OwnerAccountId = input.ReadUInt32();
                    break;
                  }
                  case 16: {
                    AuditAction = input.ReadUInt32();
                    break;
                  }
                  case 24: {
                    AuditData = input.ReadUInt64();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    OwnerAccountId = input.ReadUInt32();
                    break;
                  }
                  case 16: {
                    AuditAction = input.ReadUInt32();
                    break;
                  }
                  case 24: {
                    AuditData = input.ReadUInt64();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class CMsgGCToGCBetaDeleteItems : pb::IMessage<CMsgGCToGCBetaDeleteItems>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCBetaDeleteItems> _parser = new pb::MessageParser<CMsgGCToGCBetaDeleteItems>(() => new CMsgGCToGCBetaDeleteItems());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCBetaDeleteItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCBetaDeleteItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCBetaDeleteItems(CMsgGCToGCBetaDeleteItems other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      itemIds_ = other.itemIds_.Clone();
      itemDefs_ = other.itemDefs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCBetaDeleteItems Clone() {
      return new CMsgGCToGCBetaDeleteItems(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_ids" field.</summary>
    public const int ItemIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_itemIds_codec
        = pb::FieldCodec.ForUInt64(16);
    private readonly pbc::RepeatedField<ulong> itemIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> ItemIds {
      get { return itemIds_; }
    }

    /// <summary>Field number for the "item_defs" field.</summary>
    public const int ItemDefsFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_itemDefs_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> itemDefs_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> ItemDefs {
      get { return itemDefs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCBetaDeleteItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCBetaDeleteItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if(!itemIds_.Equals(other.itemIds_)) return false;
      if(!itemDefs_.Equals(other.itemDefs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      hash ^= itemIds_.GetHashCode();
      hash ^= itemDefs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      itemIds_.WriteTo(output, _repeated_itemIds_codec);
      itemDefs_.WriteTo(output, _repeated_itemDefs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      itemIds_.WriteTo(ref output, _repeated_itemIds_codec);
      itemDefs_.WriteTo(ref output, _repeated_itemDefs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      size += itemIds_.CalculateSize(_repeated_itemIds_codec);
      size += itemDefs_.CalculateSize(_repeated_itemDefs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCBetaDeleteItems other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      itemIds_.Add(other.itemIds_);
      itemDefs_.Add(other.itemDefs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            itemIds_.AddEntriesFrom(input, _repeated_itemIds_codec);
            break;
          }
          case 26:
          case 24: {
            itemDefs_.AddEntriesFrom(input, _repeated_itemDefs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 18:
          case 16: {
            itemIds_.AddEntriesFrom(ref input, _repeated_itemIds_codec);
            break;
          }
          case 26:
          case 24: {
            itemDefs_.AddEntriesFrom(ref input, _repeated_itemDefs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCGrantSelfMadeItemToAccount : pb::IMessage<CMsgGCToGCGrantSelfMadeItemToAccount>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCGrantSelfMadeItemToAccount> _parser = new pb::MessageParser<CMsgGCToGCGrantSelfMadeItemToAccount>(() => new CMsgGCToGCGrantSelfMadeItemToAccount());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCGrantSelfMadeItemToAccount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGrantSelfMadeItemToAccount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGrantSelfMadeItemToAccount(CMsgGCToGCGrantSelfMadeItemToAccount other) : this() {
      _hasBits0 = other._hasBits0;
      itemDefIndex_ = other.itemDefIndex_;
      accountid_ = other.accountid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGrantSelfMadeItemToAccount Clone() {
      return new CMsgGCToGCGrantSelfMadeItemToAccount(this);
    }

    /// <summary>Field number for the "item_def_index" field.</summary>
    public const int ItemDefIndexFieldNumber = 1;
    private readonly static uint ItemDefIndexDefaultValue = 0;

    private uint itemDefIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemDefIndex {
      get { if ((_hasBits0 & 1) != 0) { return itemDefIndex_; } else { return ItemDefIndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemDefIndex_ = value;
      }
    }
    /// <summary>Gets whether the "item_def_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemDefIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_def_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemDefIndex() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "accountid" field.</summary>
    public const int AccountidFieldNumber = 2;
    private readonly static uint AccountidDefaultValue = 0;

    private uint accountid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Accountid {
      get { if ((_hasBits0 & 2) != 0) { return accountid_; } else { return AccountidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        accountid_ = value;
      }
    }
    /// <summary>Gets whether the "accountid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "accountid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCGrantSelfMadeItemToAccount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCGrantSelfMadeItemToAccount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemDefIndex != other.ItemDefIndex) return false;
      if (Accountid != other.Accountid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemDefIndex) hash ^= ItemDefIndex.GetHashCode();
      if (HasAccountid) hash ^= Accountid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemDefIndex) {
        output.WriteRawTag(8);
        output.WriteUInt32(ItemDefIndex);
      }
      if (HasAccountid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Accountid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemDefIndex) {
        output.WriteRawTag(8);
        output.WriteUInt32(ItemDefIndex);
      }
      if (HasAccountid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Accountid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemDefIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemDefIndex);
      }
      if (HasAccountid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Accountid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCGrantSelfMadeItemToAccount other) {
      if (other == null) {
        return;
      }
      if (other.HasItemDefIndex) {
        ItemDefIndex = other.ItemDefIndex;
      }
      if (other.HasAccountid) {
        Accountid = other.Accountid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemDefIndex = input.ReadUInt32();
            break;
          }
          case 16: {
            Accountid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemDefIndex = input.ReadUInt32();
            break;
          }
          case 16: {
            Accountid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgUseItem : pb::IMessage<CMsgUseItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgUseItem> _parser = new pb::MessageParser<CMsgUseItem>(() => new CMsgUseItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgUseItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgUseItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgUseItem(CMsgUseItem other) : this() {
      _hasBits0 = other._hasBits0;
      itemId_ = other.itemId_;
      targetSteamId_ = other.targetSteamId_;
      giftPotentialTargets_ = other.giftPotentialTargets_.Clone();
      duelClassLock_ = other.duelClassLock_;
      initiatorSteamId_ = other.initiatorSteamId_;
      itempackAckImmediately_ = other.itempackAckImmediately_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgUseItem Clone() {
      return new CMsgUseItem(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "target_steam_id" field.</summary>
    public const int TargetSteamIdFieldNumber = 2;
    private readonly static ulong TargetSteamIdDefaultValue = 0UL;

    private ulong targetSteamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TargetSteamId {
      get { if ((_hasBits0 & 2) != 0) { return targetSteamId_; } else { return TargetSteamIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        targetSteamId_ = value;
      }
    }
    /// <summary>Gets whether the "target_steam_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTargetSteamId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "target_steam_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTargetSteamId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gift__potential_targets" field.</summary>
    public const int GiftPotentialTargetsFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_giftPotentialTargets_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> giftPotentialTargets_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> GiftPotentialTargets {
      get { return giftPotentialTargets_; }
    }

    /// <summary>Field number for the "duel__class_lock" field.</summary>
    public const int DuelClassLockFieldNumber = 4;
    private readonly static uint DuelClassLockDefaultValue = 0;

    private uint duelClassLock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DuelClassLock {
      get { if ((_hasBits0 & 4) != 0) { return duelClassLock_; } else { return DuelClassLockDefaultValue; } }
      set {
        _hasBits0 |= 4;
        duelClassLock_ = value;
      }
    }
    /// <summary>Gets whether the "duel__class_lock" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDuelClassLock {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "duel__class_lock" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDuelClassLock() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "initiator_steam_id" field.</summary>
    public const int InitiatorSteamIdFieldNumber = 5;
    private readonly static ulong InitiatorSteamIdDefaultValue = 0UL;

    private ulong initiatorSteamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong InitiatorSteamId {
      get { if ((_hasBits0 & 8) != 0) { return initiatorSteamId_; } else { return InitiatorSteamIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        initiatorSteamId_ = value;
      }
    }
    /// <summary>Gets whether the "initiator_steam_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInitiatorSteamId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "initiator_steam_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInitiatorSteamId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "itempack__ack_immediately" field.</summary>
    public const int ItempackAckImmediatelyFieldNumber = 6;
    private readonly static bool ItempackAckImmediatelyDefaultValue = false;

    private bool itempackAckImmediately_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ItempackAckImmediately {
      get { if ((_hasBits0 & 16) != 0) { return itempackAckImmediately_; } else { return ItempackAckImmediatelyDefaultValue; } }
      set {
        _hasBits0 |= 16;
        itempackAckImmediately_ = value;
      }
    }
    /// <summary>Gets whether the "itempack__ack_immediately" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItempackAckImmediately {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "itempack__ack_immediately" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItempackAckImmediately() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgUseItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgUseItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (TargetSteamId != other.TargetSteamId) return false;
      if(!giftPotentialTargets_.Equals(other.giftPotentialTargets_)) return false;
      if (DuelClassLock != other.DuelClassLock) return false;
      if (InitiatorSteamId != other.InitiatorSteamId) return false;
      if (ItempackAckImmediately != other.ItempackAckImmediately) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (HasTargetSteamId) hash ^= TargetSteamId.GetHashCode();
      hash ^= giftPotentialTargets_.GetHashCode();
      if (HasDuelClassLock) hash ^= DuelClassLock.GetHashCode();
      if (HasInitiatorSteamId) hash ^= InitiatorSteamId.GetHashCode();
      if (HasItempackAckImmediately) hash ^= ItempackAckImmediately.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (HasTargetSteamId) {
        output.WriteRawTag(17);
        output.WriteFixed64(TargetSteamId);
      }
      giftPotentialTargets_.WriteTo(output, _repeated_giftPotentialTargets_codec);
      if (HasDuelClassLock) {
        output.WriteRawTag(32);
        output.WriteUInt32(DuelClassLock);
      }
      if (HasInitiatorSteamId) {
        output.WriteRawTag(40);
        output.WriteUInt64(InitiatorSteamId);
      }
      if (HasItempackAckImmediately) {
        output.WriteRawTag(48);
        output.WriteBool(ItempackAckImmediately);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (HasTargetSteamId) {
        output.WriteRawTag(17);
        output.WriteFixed64(TargetSteamId);
      }
      giftPotentialTargets_.WriteTo(ref output, _repeated_giftPotentialTargets_codec);
      if (HasDuelClassLock) {
        output.WriteRawTag(32);
        output.WriteUInt32(DuelClassLock);
      }
      if (HasInitiatorSteamId) {
        output.WriteRawTag(40);
        output.WriteUInt64(InitiatorSteamId);
      }
      if (HasItempackAckImmediately) {
        output.WriteRawTag(48);
        output.WriteBool(ItempackAckImmediately);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (HasTargetSteamId) {
        size += 1 + 8;
      }
      size += giftPotentialTargets_.CalculateSize(_repeated_giftPotentialTargets_codec);
      if (HasDuelClassLock) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DuelClassLock);
      }
      if (HasInitiatorSteamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(InitiatorSteamId);
      }
      if (HasItempackAckImmediately) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgUseItem other) {
      if (other == null) {
        return;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasTargetSteamId) {
        TargetSteamId = other.TargetSteamId;
      }
      giftPotentialTargets_.Add(other.giftPotentialTargets_);
      if (other.HasDuelClassLock) {
        DuelClassLock = other.DuelClassLock;
      }
      if (other.HasInitiatorSteamId) {
        InitiatorSteamId = other.InitiatorSteamId;
      }
      if (other.HasItempackAckImmediately) {
        ItempackAckImmediately = other.ItempackAckImmediately;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 17: {
            TargetSteamId = input.ReadFixed64();
            break;
          }
          case 26:
          case 24: {
            giftPotentialTargets_.AddEntriesFrom(input, _repeated_giftPotentialTargets_codec);
            break;
          }
          case 32: {
            DuelClassLock = input.ReadUInt32();
            break;
          }
          case 40: {
            InitiatorSteamId = input.ReadUInt64();
            break;
          }
          case 48: {
            ItempackAckImmediately = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 17: {
            TargetSteamId = input.ReadFixed64();
            break;
          }
          case 26:
          case 24: {
            giftPotentialTargets_.AddEntriesFrom(ref input, _repeated_giftPotentialTargets_codec);
            break;
          }
          case 32: {
            DuelClassLock = input.ReadUInt32();
            break;
          }
          case 40: {
            InitiatorSteamId = input.ReadUInt64();
            break;
          }
          case 48: {
            ItempackAckImmediately = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgServerUseItem : pb::IMessage<CMsgServerUseItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgServerUseItem> _parser = new pb::MessageParser<CMsgServerUseItem>(() => new CMsgServerUseItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgServerUseItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgServerUseItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgServerUseItem(CMsgServerUseItem other) : this() {
      _hasBits0 = other._hasBits0;
      initiatorAccountId_ = other.initiatorAccountId_;
      useItemMsg_ = other.useItemMsg_ != null ? other.useItemMsg_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgServerUseItem Clone() {
      return new CMsgServerUseItem(this);
    }

    /// <summary>Field number for the "initiator_account_id" field.</summary>
    public const int InitiatorAccountIdFieldNumber = 1;
    private readonly static uint InitiatorAccountIdDefaultValue = 0;

    private uint initiatorAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint InitiatorAccountId {
      get { if ((_hasBits0 & 1) != 0) { return initiatorAccountId_; } else { return InitiatorAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        initiatorAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "initiator_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInitiatorAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "initiator_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInitiatorAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "use_item_msg" field.</summary>
    public const int UseItemMsgFieldNumber = 2;
    private global::Steam.Protos.Dota2.CMsgUseItem useItemMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CMsgUseItem UseItemMsg {
      get { return useItemMsg_; }
      set {
        useItemMsg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgServerUseItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgServerUseItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InitiatorAccountId != other.InitiatorAccountId) return false;
      if (!object.Equals(UseItemMsg, other.UseItemMsg)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInitiatorAccountId) hash ^= InitiatorAccountId.GetHashCode();
      if (useItemMsg_ != null) hash ^= UseItemMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInitiatorAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(InitiatorAccountId);
      }
      if (useItemMsg_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UseItemMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInitiatorAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(InitiatorAccountId);
      }
      if (useItemMsg_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UseItemMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasInitiatorAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(InitiatorAccountId);
      }
      if (useItemMsg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UseItemMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgServerUseItem other) {
      if (other == null) {
        return;
      }
      if (other.HasInitiatorAccountId) {
        InitiatorAccountId = other.InitiatorAccountId;
      }
      if (other.useItemMsg_ != null) {
        if (useItemMsg_ == null) {
          UseItemMsg = new global::Steam.Protos.Dota2.CMsgUseItem();
        }
        UseItemMsg.MergeFrom(other.UseItemMsg);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InitiatorAccountId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (useItemMsg_ == null) {
              UseItemMsg = new global::Steam.Protos.Dota2.CMsgUseItem();
            }
            input.ReadMessage(UseItemMsg);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InitiatorAccountId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (useItemMsg_ == null) {
              UseItemMsg = new global::Steam.Protos.Dota2.CMsgUseItem();
            }
            input.ReadMessage(UseItemMsg);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgUseMultipleItems : pb::IMessage<CMsgUseMultipleItems>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgUseMultipleItems> _parser = new pb::MessageParser<CMsgUseMultipleItems>(() => new CMsgUseMultipleItems());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgUseMultipleItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgUseMultipleItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgUseMultipleItems(CMsgUseMultipleItems other) : this() {
      itemIds_ = other.itemIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgUseMultipleItems Clone() {
      return new CMsgUseMultipleItems(this);
    }

    /// <summary>Field number for the "item_ids" field.</summary>
    public const int ItemIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_itemIds_codec
        = pb::FieldCodec.ForUInt64(8);
    private readonly pbc::RepeatedField<ulong> itemIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> ItemIds {
      get { return itemIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgUseMultipleItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgUseMultipleItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!itemIds_.Equals(other.itemIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= itemIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      itemIds_.WriteTo(output, _repeated_itemIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      itemIds_.WriteTo(ref output, _repeated_itemIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemIds_.CalculateSize(_repeated_itemIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgUseMultipleItems other) {
      if (other == null) {
        return;
      }
      itemIds_.Add(other.itemIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            itemIds_.AddEntriesFrom(input, _repeated_itemIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            itemIds_.AddEntriesFrom(ref input, _repeated_itemIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CGCStoreRechargeRedirect_LineItem : pb::IMessage<CGCStoreRechargeRedirect_LineItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGCStoreRechargeRedirect_LineItem> _parser = new pb::MessageParser<CGCStoreRechargeRedirect_LineItem>(() => new CGCStoreRechargeRedirect_LineItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CGCStoreRechargeRedirect_LineItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CGCStoreRechargeRedirect_LineItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CGCStoreRechargeRedirect_LineItem(CGCStoreRechargeRedirect_LineItem other) : this() {
      _hasBits0 = other._hasBits0;
      itemDefId_ = other.itemDefId_;
      quantity_ = other.quantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CGCStoreRechargeRedirect_LineItem Clone() {
      return new CGCStoreRechargeRedirect_LineItem(this);
    }

    /// <summary>Field number for the "item_def_id" field.</summary>
    public const int ItemDefIdFieldNumber = 1;
    private readonly static uint ItemDefIdDefaultValue = 0;

    private uint itemDefId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemDefId {
      get { if ((_hasBits0 & 1) != 0) { return itemDefId_; } else { return ItemDefIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemDefId_ = value;
      }
    }
    /// <summary>Gets whether the "item_def_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemDefId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_def_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemDefId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private readonly static uint QuantityDefaultValue = 0;

    private uint quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Quantity {
      get { if ((_hasBits0 & 2) != 0) { return quantity_; } else { return QuantityDefaultValue; } }
      set {
        _hasBits0 |= 2;
        quantity_ = value;
      }
    }
    /// <summary>Gets whether the "quantity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuantity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "quantity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuantity() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CGCStoreRechargeRedirect_LineItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CGCStoreRechargeRedirect_LineItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemDefId != other.ItemDefId) return false;
      if (Quantity != other.Quantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemDefId) hash ^= ItemDefId.GetHashCode();
      if (HasQuantity) hash ^= Quantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemDefId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ItemDefId);
      }
      if (HasQuantity) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemDefId) {
        output.WriteRawTag(8);
        output.WriteUInt32(ItemDefId);
      }
      if (HasQuantity) {
        output.WriteRawTag(16);
        output.WriteUInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemDefId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemDefId);
      }
      if (HasQuantity) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CGCStoreRechargeRedirect_LineItem other) {
      if (other == null) {
        return;
      }
      if (other.HasItemDefId) {
        ItemDefId = other.ItemDefId;
      }
      if (other.HasQuantity) {
        Quantity = other.Quantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemDefId = input.ReadUInt32();
            break;
          }
          case 16: {
            Quantity = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemDefId = input.ReadUInt32();
            break;
          }
          case 16: {
            Quantity = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCEconSQLWorkItemEmbeddedRollbackData : pb::IMessage<CMsgGCEconSQLWorkItemEmbeddedRollbackData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCEconSQLWorkItemEmbeddedRollbackData> _parser = new pb::MessageParser<CMsgGCEconSQLWorkItemEmbeddedRollbackData>(() => new CMsgGCEconSQLWorkItemEmbeddedRollbackData());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCEconSQLWorkItemEmbeddedRollbackData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCEconSQLWorkItemEmbeddedRollbackData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCEconSQLWorkItemEmbeddedRollbackData(CMsgGCEconSQLWorkItemEmbeddedRollbackData other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      deletedItemId_ = other.deletedItemId_;
      oldAuditAction_ = other.oldAuditAction_;
      newAuditAction_ = other.newAuditAction_;
      expectedAuditAction_ = other.expectedAuditAction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCEconSQLWorkItemEmbeddedRollbackData Clone() {
      return new CMsgGCEconSQLWorkItemEmbeddedRollbackData(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "deleted_item_id" field.</summary>
    public const int DeletedItemIdFieldNumber = 2;
    private readonly static ulong DeletedItemIdDefaultValue = 0UL;

    private ulong deletedItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong DeletedItemId {
      get { if ((_hasBits0 & 2) != 0) { return deletedItemId_; } else { return DeletedItemIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        deletedItemId_ = value;
      }
    }
    /// <summary>Gets whether the "deleted_item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeletedItemId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "deleted_item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeletedItemId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "old_audit_action" field.</summary>
    public const int OldAuditActionFieldNumber = 3;
    private readonly static uint OldAuditActionDefaultValue = 0;

    private uint oldAuditAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint OldAuditAction {
      get { if ((_hasBits0 & 4) != 0) { return oldAuditAction_; } else { return OldAuditActionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        oldAuditAction_ = value;
      }
    }
    /// <summary>Gets whether the "old_audit_action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOldAuditAction {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "old_audit_action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOldAuditAction() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "new_audit_action" field.</summary>
    public const int NewAuditActionFieldNumber = 4;
    private readonly static uint NewAuditActionDefaultValue = 0;

    private uint newAuditAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NewAuditAction {
      get { if ((_hasBits0 & 8) != 0) { return newAuditAction_; } else { return NewAuditActionDefaultValue; } }
      set {
        _hasBits0 |= 8;
        newAuditAction_ = value;
      }
    }
    /// <summary>Gets whether the "new_audit_action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNewAuditAction {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "new_audit_action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNewAuditAction() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "expected_audit_action" field.</summary>
    public const int ExpectedAuditActionFieldNumber = 5;
    private readonly static uint ExpectedAuditActionDefaultValue = 0;

    private uint expectedAuditAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ExpectedAuditAction {
      get { if ((_hasBits0 & 16) != 0) { return expectedAuditAction_; } else { return ExpectedAuditActionDefaultValue; } }
      set {
        _hasBits0 |= 16;
        expectedAuditAction_ = value;
      }
    }
    /// <summary>Gets whether the "expected_audit_action" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasExpectedAuditAction {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "expected_audit_action" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearExpectedAuditAction() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCEconSQLWorkItemEmbeddedRollbackData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCEconSQLWorkItemEmbeddedRollbackData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (DeletedItemId != other.DeletedItemId) return false;
      if (OldAuditAction != other.OldAuditAction) return false;
      if (NewAuditAction != other.NewAuditAction) return false;
      if (ExpectedAuditAction != other.ExpectedAuditAction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasDeletedItemId) hash ^= DeletedItemId.GetHashCode();
      if (HasOldAuditAction) hash ^= OldAuditAction.GetHashCode();
      if (HasNewAuditAction) hash ^= NewAuditAction.GetHashCode();
      if (HasExpectedAuditAction) hash ^= ExpectedAuditAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasDeletedItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(DeletedItemId);
      }
      if (HasOldAuditAction) {
        output.WriteRawTag(24);
        output.WriteUInt32(OldAuditAction);
      }
      if (HasNewAuditAction) {
        output.WriteRawTag(32);
        output.WriteUInt32(NewAuditAction);
      }
      if (HasExpectedAuditAction) {
        output.WriteRawTag(40);
        output.WriteUInt32(ExpectedAuditAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasDeletedItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(DeletedItemId);
      }
      if (HasOldAuditAction) {
        output.WriteRawTag(24);
        output.WriteUInt32(OldAuditAction);
      }
      if (HasNewAuditAction) {
        output.WriteRawTag(32);
        output.WriteUInt32(NewAuditAction);
      }
      if (HasExpectedAuditAction) {
        output.WriteRawTag(40);
        output.WriteUInt32(ExpectedAuditAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (HasDeletedItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DeletedItemId);
      }
      if (HasOldAuditAction) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(OldAuditAction);
      }
      if (HasNewAuditAction) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NewAuditAction);
      }
      if (HasExpectedAuditAction) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpectedAuditAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCEconSQLWorkItemEmbeddedRollbackData other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasDeletedItemId) {
        DeletedItemId = other.DeletedItemId;
      }
      if (other.HasOldAuditAction) {
        OldAuditAction = other.OldAuditAction;
      }
      if (other.HasNewAuditAction) {
        NewAuditAction = other.NewAuditAction;
      }
      if (other.HasExpectedAuditAction) {
        ExpectedAuditAction = other.ExpectedAuditAction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            DeletedItemId = input.ReadUInt64();
            break;
          }
          case 24: {
            OldAuditAction = input.ReadUInt32();
            break;
          }
          case 32: {
            NewAuditAction = input.ReadUInt32();
            break;
          }
          case 40: {
            ExpectedAuditAction = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            DeletedItemId = input.ReadUInt64();
            break;
          }
          case 24: {
            OldAuditAction = input.ReadUInt32();
            break;
          }
          case 32: {
            NewAuditAction = input.ReadUInt32();
            break;
          }
          case 40: {
            ExpectedAuditAction = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgCraftStatue : pb::IMessage<CMsgCraftStatue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgCraftStatue> _parser = new pb::MessageParser<CMsgCraftStatue>(() => new CMsgCraftStatue());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgCraftStatue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgCraftStatue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgCraftStatue(CMsgCraftStatue other) : this() {
      _hasBits0 = other._hasBits0;
      heroid_ = other.heroid_;
      sequencename_ = other.sequencename_;
      cycle_ = other.cycle_;
      description_ = other.description_;
      pedestalItemdef_ = other.pedestalItemdef_;
      toolid_ = other.toolid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgCraftStatue Clone() {
      return new CMsgCraftStatue(this);
    }

    /// <summary>Field number for the "heroid" field.</summary>
    public const int HeroidFieldNumber = 1;
    private readonly static uint HeroidDefaultValue = 0;

    private uint heroid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Heroid {
      get { if ((_hasBits0 & 1) != 0) { return heroid_; } else { return HeroidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        heroid_ = value;
      }
    }
    /// <summary>Gets whether the "heroid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHeroid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "heroid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHeroid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sequencename" field.</summary>
    public const int SequencenameFieldNumber = 2;
    private readonly static string SequencenameDefaultValue = "";

    private string sequencename_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sequencename {
      get { return sequencename_ ?? SequencenameDefaultValue; }
      set {
        sequencename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sequencename" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSequencename {
      get { return sequencename_ != null; }
    }
    /// <summary>Clears the value of the "sequencename" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSequencename() {
      sequencename_ = null;
    }

    /// <summary>Field number for the "cycle" field.</summary>
    public const int CycleFieldNumber = 3;
    private readonly static float CycleDefaultValue = 0F;

    private float cycle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Cycle {
      get { if ((_hasBits0 & 2) != 0) { return cycle_; } else { return CycleDefaultValue; } }
      set {
        _hasBits0 |= 2;
        cycle_ = value;
      }
    }
    /// <summary>Gets whether the "cycle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCycle {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "cycle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCycle() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "pedestal_itemdef" field.</summary>
    public const int PedestalItemdefFieldNumber = 5;
    private readonly static uint PedestalItemdefDefaultValue = 0;

    private uint pedestalItemdef_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PedestalItemdef {
      get { if ((_hasBits0 & 4) != 0) { return pedestalItemdef_; } else { return PedestalItemdefDefaultValue; } }
      set {
        _hasBits0 |= 4;
        pedestalItemdef_ = value;
      }
    }
    /// <summary>Gets whether the "pedestal_itemdef" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPedestalItemdef {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pedestal_itemdef" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPedestalItemdef() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "toolid" field.</summary>
    public const int ToolidFieldNumber = 6;
    private readonly static ulong ToolidDefaultValue = 0UL;

    private ulong toolid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Toolid {
      get { if ((_hasBits0 & 8) != 0) { return toolid_; } else { return ToolidDefaultValue; } }
      set {
        _hasBits0 |= 8;
        toolid_ = value;
      }
    }
    /// <summary>Gets whether the "toolid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToolid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "toolid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToolid() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgCraftStatue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgCraftStatue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Heroid != other.Heroid) return false;
      if (Sequencename != other.Sequencename) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Cycle, other.Cycle)) return false;
      if (Description != other.Description) return false;
      if (PedestalItemdef != other.PedestalItemdef) return false;
      if (Toolid != other.Toolid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasHeroid) hash ^= Heroid.GetHashCode();
      if (HasSequencename) hash ^= Sequencename.GetHashCode();
      if (HasCycle) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Cycle);
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasPedestalItemdef) hash ^= PedestalItemdef.GetHashCode();
      if (HasToolid) hash ^= Toolid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasHeroid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Heroid);
      }
      if (HasSequencename) {
        output.WriteRawTag(18);
        output.WriteString(Sequencename);
      }
      if (HasCycle) {
        output.WriteRawTag(29);
        output.WriteFloat(Cycle);
      }
      if (HasDescription) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (HasPedestalItemdef) {
        output.WriteRawTag(40);
        output.WriteUInt32(PedestalItemdef);
      }
      if (HasToolid) {
        output.WriteRawTag(48);
        output.WriteUInt64(Toolid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasHeroid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Heroid);
      }
      if (HasSequencename) {
        output.WriteRawTag(18);
        output.WriteString(Sequencename);
      }
      if (HasCycle) {
        output.WriteRawTag(29);
        output.WriteFloat(Cycle);
      }
      if (HasDescription) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (HasPedestalItemdef) {
        output.WriteRawTag(40);
        output.WriteUInt32(PedestalItemdef);
      }
      if (HasToolid) {
        output.WriteRawTag(48);
        output.WriteUInt64(Toolid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasHeroid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Heroid);
      }
      if (HasSequencename) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sequencename);
      }
      if (HasCycle) {
        size += 1 + 4;
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasPedestalItemdef) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PedestalItemdef);
      }
      if (HasToolid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Toolid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgCraftStatue other) {
      if (other == null) {
        return;
      }
      if (other.HasHeroid) {
        Heroid = other.Heroid;
      }
      if (other.HasSequencename) {
        Sequencename = other.Sequencename;
      }
      if (other.HasCycle) {
        Cycle = other.Cycle;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasPedestalItemdef) {
        PedestalItemdef = other.PedestalItemdef;
      }
      if (other.HasToolid) {
        Toolid = other.Toolid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Heroid = input.ReadUInt32();
            break;
          }
          case 18: {
            Sequencename = input.ReadString();
            break;
          }
          case 29: {
            Cycle = input.ReadFloat();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            PedestalItemdef = input.ReadUInt32();
            break;
          }
          case 48: {
            Toolid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Heroid = input.ReadUInt32();
            break;
          }
          case 18: {
            Sequencename = input.ReadString();
            break;
          }
          case 29: {
            Cycle = input.ReadFloat();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            PedestalItemdef = input.ReadUInt32();
            break;
          }
          case 48: {
            Toolid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgRedeemCode : pb::IMessage<CMsgRedeemCode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRedeemCode> _parser = new pb::MessageParser<CMsgRedeemCode>(() => new CMsgRedeemCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgRedeemCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRedeemCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRedeemCode(CMsgRedeemCode other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRedeemCode Clone() {
      return new CMsgRedeemCode(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgRedeemCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgRedeemCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgRedeemCode other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgRedeemCodeResponse : pb::IMessage<CMsgRedeemCodeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgRedeemCodeResponse> _parser = new pb::MessageParser<CMsgRedeemCodeResponse>(() => new CMsgRedeemCodeResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgRedeemCodeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRedeemCodeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRedeemCodeResponse(CMsgRedeemCodeResponse other) : this() {
      _hasBits0 = other._hasBits0;
      response_ = other.response_;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgRedeemCodeResponse Clone() {
      return new CMsgRedeemCodeResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private readonly static uint ResponseDefaultValue = 0;

    private uint response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Response {
      get { if ((_hasBits0 & 1) != 0) { return response_; } else { return ResponseDefaultValue; } }
      set {
        _hasBits0 |= 1;
        response_ = value;
      }
    }
    /// <summary>Gets whether the "response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponse {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 2) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgRedeemCodeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgRedeemCodeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Response != other.Response) return false;
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResponse) hash ^= Response.GetHashCode();
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteUInt32(Response);
      }
      if (HasItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteUInt32(Response);
      }
      if (HasItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResponse) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Response);
      }
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgRedeemCodeResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResponse) {
        Response = other.Response;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Response = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Response = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgRedeemCodeResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EResultCode {
        [pbr::OriginalName("k_Succeeded")] KSucceeded = 0,
        [pbr::OriginalName("k_Failed_CodeNotFound")] KFailedCodeNotFound = 1,
        [pbr::OriginalName("k_Failed_CodeAlreadyUsed")] KFailedCodeAlreadyUsed = 2,
        [pbr::OriginalName("k_Failed_OtherError")] KFailedOtherError = 3,
      }

    }
    #endregion

  }

  public sealed partial class CMsgDevNewItemRequest : pb::IMessage<CMsgDevNewItemRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgDevNewItemRequest> _parser = new pb::MessageParser<CMsgDevNewItemRequest>(() => new CMsgDevNewItemRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgDevNewItemRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgDevNewItemRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgDevNewItemRequest(CMsgDevNewItemRequest other) : this() {
      _hasBits0 = other._hasBits0;
      itemDefName_ = other.itemDefName_;
      lootListName_ = other.lootListName_;
      attrDefName_ = other.attrDefName_.Clone();
      attrValue_ = other.attrValue_.Clone();
      itemQuality_ = other.itemQuality_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgDevNewItemRequest Clone() {
      return new CMsgDevNewItemRequest(this);
    }

    /// <summary>Field number for the "item_def_name" field.</summary>
    public const int ItemDefNameFieldNumber = 3;
    private readonly static string ItemDefNameDefaultValue = "";

    private string itemDefName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemDefName {
      get { return itemDefName_ ?? ItemDefNameDefaultValue; }
      set {
        itemDefName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "item_def_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemDefName {
      get { return itemDefName_ != null; }
    }
    /// <summary>Clears the value of the "item_def_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemDefName() {
      itemDefName_ = null;
    }

    /// <summary>Field number for the "loot_list_name" field.</summary>
    public const int LootListNameFieldNumber = 4;
    private readonly static string LootListNameDefaultValue = "";

    private string lootListName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LootListName {
      get { return lootListName_ ?? LootListNameDefaultValue; }
      set {
        lootListName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "loot_list_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLootListName {
      get { return lootListName_ != null; }
    }
    /// <summary>Clears the value of the "loot_list_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLootListName() {
      lootListName_ = null;
    }

    /// <summary>Field number for the "attr_def_name" field.</summary>
    public const int AttrDefNameFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_attrDefName_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> attrDefName_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AttrDefName {
      get { return attrDefName_; }
    }

    /// <summary>Field number for the "attr_value" field.</summary>
    public const int AttrValueFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_attrValue_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> attrValue_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AttrValue {
      get { return attrValue_; }
    }

    /// <summary>Field number for the "item_quality" field.</summary>
    public const int ItemQualityFieldNumber = 7;
    private readonly static uint ItemQualityDefaultValue = 0;

    private uint itemQuality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemQuality {
      get { if ((_hasBits0 & 1) != 0) { return itemQuality_; } else { return ItemQualityDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemQuality_ = value;
      }
    }
    /// <summary>Gets whether the "item_quality" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemQuality {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_quality" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemQuality() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgDevNewItemRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgDevNewItemRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemDefName != other.ItemDefName) return false;
      if (LootListName != other.LootListName) return false;
      if(!attrDefName_.Equals(other.attrDefName_)) return false;
      if(!attrValue_.Equals(other.attrValue_)) return false;
      if (ItemQuality != other.ItemQuality) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemDefName) hash ^= ItemDefName.GetHashCode();
      if (HasLootListName) hash ^= LootListName.GetHashCode();
      hash ^= attrDefName_.GetHashCode();
      hash ^= attrValue_.GetHashCode();
      if (HasItemQuality) hash ^= ItemQuality.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemDefName) {
        output.WriteRawTag(26);
        output.WriteString(ItemDefName);
      }
      if (HasLootListName) {
        output.WriteRawTag(34);
        output.WriteString(LootListName);
      }
      attrDefName_.WriteTo(output, _repeated_attrDefName_codec);
      attrValue_.WriteTo(output, _repeated_attrValue_codec);
      if (HasItemQuality) {
        output.WriteRawTag(56);
        output.WriteUInt32(ItemQuality);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemDefName) {
        output.WriteRawTag(26);
        output.WriteString(ItemDefName);
      }
      if (HasLootListName) {
        output.WriteRawTag(34);
        output.WriteString(LootListName);
      }
      attrDefName_.WriteTo(ref output, _repeated_attrDefName_codec);
      attrValue_.WriteTo(ref output, _repeated_attrValue_codec);
      if (HasItemQuality) {
        output.WriteRawTag(56);
        output.WriteUInt32(ItemQuality);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemDefName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemDefName);
      }
      if (HasLootListName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LootListName);
      }
      size += attrDefName_.CalculateSize(_repeated_attrDefName_codec);
      size += attrValue_.CalculateSize(_repeated_attrValue_codec);
      if (HasItemQuality) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemQuality);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgDevNewItemRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasItemDefName) {
        ItemDefName = other.ItemDefName;
      }
      if (other.HasLootListName) {
        LootListName = other.LootListName;
      }
      attrDefName_.Add(other.attrDefName_);
      attrValue_.Add(other.attrValue_);
      if (other.HasItemQuality) {
        ItemQuality = other.ItemQuality;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            ItemDefName = input.ReadString();
            break;
          }
          case 34: {
            LootListName = input.ReadString();
            break;
          }
          case 42: {
            attrDefName_.AddEntriesFrom(input, _repeated_attrDefName_codec);
            break;
          }
          case 50: {
            attrValue_.AddEntriesFrom(input, _repeated_attrValue_codec);
            break;
          }
          case 56: {
            ItemQuality = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            ItemDefName = input.ReadString();
            break;
          }
          case 34: {
            LootListName = input.ReadString();
            break;
          }
          case 42: {
            attrDefName_.AddEntriesFrom(ref input, _repeated_attrDefName_codec);
            break;
          }
          case 50: {
            attrValue_.AddEntriesFrom(ref input, _repeated_attrValue_codec);
            break;
          }
          case 56: {
            ItemQuality = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgDevNewItemRequestResponse : pb::IMessage<CMsgDevNewItemRequestResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgDevNewItemRequestResponse> _parser = new pb::MessageParser<CMsgDevNewItemRequestResponse>(() => new CMsgDevNewItemRequestResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgDevNewItemRequestResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgDevNewItemRequestResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgDevNewItemRequestResponse(CMsgDevNewItemRequestResponse other) : this() {
      _hasBits0 = other._hasBits0;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgDevNewItemRequestResponse Clone() {
      return new CMsgDevNewItemRequestResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgDevNewItemRequestResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgDevNewItemRequestResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgDevNewItemRequestResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgDevUnlockAllItemStyles : pb::IMessage<CMsgDevUnlockAllItemStyles>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgDevUnlockAllItemStyles> _parser = new pb::MessageParser<CMsgDevUnlockAllItemStyles>(() => new CMsgDevUnlockAllItemStyles());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgDevUnlockAllItemStyles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgDevUnlockAllItemStyles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgDevUnlockAllItemStyles(CMsgDevUnlockAllItemStyles other) : this() {
      _hasBits0 = other._hasBits0;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgDevUnlockAllItemStyles Clone() {
      return new CMsgDevUnlockAllItemStyles(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgDevUnlockAllItemStyles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgDevUnlockAllItemStyles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgDevUnlockAllItemStyles other) {
      if (other == null) {
        return;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgDevUnlockAllItemStylesResponse : pb::IMessage<CMsgDevUnlockAllItemStylesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgDevUnlockAllItemStylesResponse> _parser = new pb::MessageParser<CMsgDevUnlockAllItemStylesResponse>(() => new CMsgDevUnlockAllItemStylesResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgDevUnlockAllItemStylesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgDevUnlockAllItemStylesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgDevUnlockAllItemStylesResponse(CMsgDevUnlockAllItemStylesResponse other) : this() {
      _hasBits0 = other._hasBits0;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgDevUnlockAllItemStylesResponse Clone() {
      return new CMsgDevUnlockAllItemStylesResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgDevUnlockAllItemStylesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgDevUnlockAllItemStylesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgDevUnlockAllItemStylesResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCGetAccountSubscriptionItem : pb::IMessage<CMsgGCGetAccountSubscriptionItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCGetAccountSubscriptionItem> _parser = new pb::MessageParser<CMsgGCGetAccountSubscriptionItem>(() => new CMsgGCGetAccountSubscriptionItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCGetAccountSubscriptionItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCGetAccountSubscriptionItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCGetAccountSubscriptionItem(CMsgGCGetAccountSubscriptionItem other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCGetAccountSubscriptionItem Clone() {
      return new CMsgGCGetAccountSubscriptionItem(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCGetAccountSubscriptionItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCGetAccountSubscriptionItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCGetAccountSubscriptionItem other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCGetAccountSubscriptionItemResponse : pb::IMessage<CMsgGCGetAccountSubscriptionItemResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCGetAccountSubscriptionItemResponse> _parser = new pb::MessageParser<CMsgGCGetAccountSubscriptionItemResponse>(() => new CMsgGCGetAccountSubscriptionItemResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCGetAccountSubscriptionItemResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCGetAccountSubscriptionItemResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCGetAccountSubscriptionItemResponse(CMsgGCGetAccountSubscriptionItemResponse other) : this() {
      _hasBits0 = other._hasBits0;
      defIndex_ = other.defIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCGetAccountSubscriptionItemResponse Clone() {
      return new CMsgGCGetAccountSubscriptionItemResponse(this);
    }

    /// <summary>Field number for the "def_index" field.</summary>
    public const int DefIndexFieldNumber = 1;
    private readonly static uint DefIndexDefaultValue = 0;

    private uint defIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DefIndex {
      get { if ((_hasBits0 & 1) != 0) { return defIndex_; } else { return DefIndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        defIndex_ = value;
      }
    }
    /// <summary>Gets whether the "def_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDefIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "def_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDefIndex() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCGetAccountSubscriptionItemResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCGetAccountSubscriptionItemResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DefIndex != other.DefIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDefIndex) hash ^= DefIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDefIndex) {
        output.WriteRawTag(8);
        output.WriteUInt32(DefIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDefIndex) {
        output.WriteRawTag(8);
        output.WriteUInt32(DefIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDefIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DefIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCGetAccountSubscriptionItemResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasDefIndex) {
        DefIndex = other.DefIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DefIndex = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DefIndex = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCAddGiftItem : pb::IMessage<CMsgGCAddGiftItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCAddGiftItem> _parser = new pb::MessageParser<CMsgGCAddGiftItem>(() => new CMsgGCAddGiftItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCAddGiftItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCAddGiftItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCAddGiftItem(CMsgGCAddGiftItem other) : this() {
      _hasBits0 = other._hasBits0;
      gifterAccountId_ = other.gifterAccountId_;
      receiverAccountId_ = other.receiverAccountId_;
      wrappedItem_ = other.wrappedItem_ != null ? other.wrappedItem_.Clone() : null;
      giftMessage_ = other.giftMessage_;
      isWalletCashTrusted_ = other.isWalletCashTrusted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCAddGiftItem Clone() {
      return new CMsgGCAddGiftItem(this);
    }

    /// <summary>Field number for the "gifter_account_id" field.</summary>
    public const int GifterAccountIdFieldNumber = 1;
    private readonly static uint GifterAccountIdDefaultValue = 0;

    private uint gifterAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GifterAccountId {
      get { if ((_hasBits0 & 1) != 0) { return gifterAccountId_; } else { return GifterAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gifterAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "gifter_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGifterAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "gifter_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGifterAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "receiver_account_id" field.</summary>
    public const int ReceiverAccountIdFieldNumber = 2;
    private readonly static uint ReceiverAccountIdDefaultValue = 0;

    private uint receiverAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ReceiverAccountId {
      get { if ((_hasBits0 & 2) != 0) { return receiverAccountId_; } else { return ReceiverAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        receiverAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "receiver_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReceiverAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "receiver_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReceiverAccountId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "wrapped_item" field.</summary>
    public const int WrappedItemFieldNumber = 3;
    private global::Steam.Protos.Dota2.CSOEconItem wrappedItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CSOEconItem WrappedItem {
      get { return wrappedItem_; }
      set {
        wrappedItem_ = value;
      }
    }

    /// <summary>Field number for the "gift_message" field.</summary>
    public const int GiftMessageFieldNumber = 4;
    private readonly static string GiftMessageDefaultValue = "";

    private string giftMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GiftMessage {
      get { return giftMessage_ ?? GiftMessageDefaultValue; }
      set {
        giftMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gift_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGiftMessage {
      get { return giftMessage_ != null; }
    }
    /// <summary>Clears the value of the "gift_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGiftMessage() {
      giftMessage_ = null;
    }

    /// <summary>Field number for the "is_wallet_cash_trusted" field.</summary>
    public const int IsWalletCashTrustedFieldNumber = 5;
    private readonly static bool IsWalletCashTrustedDefaultValue = false;

    private bool isWalletCashTrusted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWalletCashTrusted {
      get { if ((_hasBits0 & 4) != 0) { return isWalletCashTrusted_; } else { return IsWalletCashTrustedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        isWalletCashTrusted_ = value;
      }
    }
    /// <summary>Gets whether the "is_wallet_cash_trusted" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsWalletCashTrusted {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "is_wallet_cash_trusted" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsWalletCashTrusted() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCAddGiftItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCAddGiftItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GifterAccountId != other.GifterAccountId) return false;
      if (ReceiverAccountId != other.ReceiverAccountId) return false;
      if (!object.Equals(WrappedItem, other.WrappedItem)) return false;
      if (GiftMessage != other.GiftMessage) return false;
      if (IsWalletCashTrusted != other.IsWalletCashTrusted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGifterAccountId) hash ^= GifterAccountId.GetHashCode();
      if (HasReceiverAccountId) hash ^= ReceiverAccountId.GetHashCode();
      if (wrappedItem_ != null) hash ^= WrappedItem.GetHashCode();
      if (HasGiftMessage) hash ^= GiftMessage.GetHashCode();
      if (HasIsWalletCashTrusted) hash ^= IsWalletCashTrusted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGifterAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(GifterAccountId);
      }
      if (HasReceiverAccountId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ReceiverAccountId);
      }
      if (wrappedItem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WrappedItem);
      }
      if (HasGiftMessage) {
        output.WriteRawTag(34);
        output.WriteString(GiftMessage);
      }
      if (HasIsWalletCashTrusted) {
        output.WriteRawTag(40);
        output.WriteBool(IsWalletCashTrusted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGifterAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(GifterAccountId);
      }
      if (HasReceiverAccountId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ReceiverAccountId);
      }
      if (wrappedItem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WrappedItem);
      }
      if (HasGiftMessage) {
        output.WriteRawTag(34);
        output.WriteString(GiftMessage);
      }
      if (HasIsWalletCashTrusted) {
        output.WriteRawTag(40);
        output.WriteBool(IsWalletCashTrusted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGifterAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GifterAccountId);
      }
      if (HasReceiverAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReceiverAccountId);
      }
      if (wrappedItem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WrappedItem);
      }
      if (HasGiftMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GiftMessage);
      }
      if (HasIsWalletCashTrusted) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCAddGiftItem other) {
      if (other == null) {
        return;
      }
      if (other.HasGifterAccountId) {
        GifterAccountId = other.GifterAccountId;
      }
      if (other.HasReceiverAccountId) {
        ReceiverAccountId = other.ReceiverAccountId;
      }
      if (other.wrappedItem_ != null) {
        if (wrappedItem_ == null) {
          WrappedItem = new global::Steam.Protos.Dota2.CSOEconItem();
        }
        WrappedItem.MergeFrom(other.WrappedItem);
      }
      if (other.HasGiftMessage) {
        GiftMessage = other.GiftMessage;
      }
      if (other.HasIsWalletCashTrusted) {
        IsWalletCashTrusted = other.IsWalletCashTrusted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GifterAccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            ReceiverAccountId = input.ReadUInt32();
            break;
          }
          case 26: {
            if (wrappedItem_ == null) {
              WrappedItem = new global::Steam.Protos.Dota2.CSOEconItem();
            }
            input.ReadMessage(WrappedItem);
            break;
          }
          case 34: {
            GiftMessage = input.ReadString();
            break;
          }
          case 40: {
            IsWalletCashTrusted = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GifterAccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            ReceiverAccountId = input.ReadUInt32();
            break;
          }
          case 26: {
            if (wrappedItem_ == null) {
              WrappedItem = new global::Steam.Protos.Dota2.CSOEconItem();
            }
            input.ReadMessage(WrappedItem);
            break;
          }
          case 34: {
            GiftMessage = input.ReadString();
            break;
          }
          case 40: {
            IsWalletCashTrusted = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCWrapAndDeliverGift : pb::IMessage<CMsgClientToGCWrapAndDeliverGift>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCWrapAndDeliverGift> _parser = new pb::MessageParser<CMsgClientToGCWrapAndDeliverGift>(() => new CMsgClientToGCWrapAndDeliverGift());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCWrapAndDeliverGift> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCWrapAndDeliverGift() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCWrapAndDeliverGift(CMsgClientToGCWrapAndDeliverGift other) : this() {
      _hasBits0 = other._hasBits0;
      itemId_ = other.itemId_;
      giveToAccountId_ = other.giveToAccountId_;
      giftMessage_ = other.giftMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCWrapAndDeliverGift Clone() {
      return new CMsgClientToGCWrapAndDeliverGift(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "give_to_account_id" field.</summary>
    public const int GiveToAccountIdFieldNumber = 2;
    private readonly static uint GiveToAccountIdDefaultValue = 0;

    private uint giveToAccountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GiveToAccountId {
      get { if ((_hasBits0 & 2) != 0) { return giveToAccountId_; } else { return GiveToAccountIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        giveToAccountId_ = value;
      }
    }
    /// <summary>Gets whether the "give_to_account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGiveToAccountId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "give_to_account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGiveToAccountId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gift_message" field.</summary>
    public const int GiftMessageFieldNumber = 3;
    private readonly static string GiftMessageDefaultValue = "";

    private string giftMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GiftMessage {
      get { return giftMessage_ ?? GiftMessageDefaultValue; }
      set {
        giftMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gift_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGiftMessage {
      get { return giftMessage_ != null; }
    }
    /// <summary>Clears the value of the "gift_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGiftMessage() {
      giftMessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCWrapAndDeliverGift);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCWrapAndDeliverGift other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (GiveToAccountId != other.GiveToAccountId) return false;
      if (GiftMessage != other.GiftMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (HasGiveToAccountId) hash ^= GiveToAccountId.GetHashCode();
      if (HasGiftMessage) hash ^= GiftMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (HasGiveToAccountId) {
        output.WriteRawTag(16);
        output.WriteUInt32(GiveToAccountId);
      }
      if (HasGiftMessage) {
        output.WriteRawTag(26);
        output.WriteString(GiftMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (HasGiveToAccountId) {
        output.WriteRawTag(16);
        output.WriteUInt32(GiveToAccountId);
      }
      if (HasGiftMessage) {
        output.WriteRawTag(26);
        output.WriteString(GiftMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (HasGiveToAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GiveToAccountId);
      }
      if (HasGiftMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GiftMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCWrapAndDeliverGift other) {
      if (other == null) {
        return;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasGiveToAccountId) {
        GiveToAccountId = other.GiveToAccountId;
      }
      if (other.HasGiftMessage) {
        GiftMessage = other.GiftMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            GiveToAccountId = input.ReadUInt32();
            break;
          }
          case 26: {
            GiftMessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            GiveToAccountId = input.ReadUInt32();
            break;
          }
          case 26: {
            GiftMessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgSQLGCToGCRevokeUntrustedGift : pb::IMessage<CMsgSQLGCToGCRevokeUntrustedGift>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSQLGCToGCRevokeUntrustedGift> _parser = new pb::MessageParser<CMsgSQLGCToGCRevokeUntrustedGift>(() => new CMsgSQLGCToGCRevokeUntrustedGift());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgSQLGCToGCRevokeUntrustedGift> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSQLGCToGCRevokeUntrustedGift() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSQLGCToGCRevokeUntrustedGift(CMsgSQLGCToGCRevokeUntrustedGift other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      sentItemId_ = other.sentItemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSQLGCToGCRevokeUntrustedGift Clone() {
      return new CMsgSQLGCToGCRevokeUntrustedGift(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sent_item_id" field.</summary>
    public const int SentItemIdFieldNumber = 4;
    private readonly static ulong SentItemIdDefaultValue = 0UL;

    private ulong sentItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SentItemId {
      get { if ((_hasBits0 & 2) != 0) { return sentItemId_; } else { return SentItemIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sentItemId_ = value;
      }
    }
    /// <summary>Gets whether the "sent_item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSentItemId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sent_item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSentItemId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgSQLGCToGCRevokeUntrustedGift);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgSQLGCToGCRevokeUntrustedGift other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (SentItemId != other.SentItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasSentItemId) hash ^= SentItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasSentItemId) {
        output.WriteRawTag(32);
        output.WriteUInt64(SentItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasSentItemId) {
        output.WriteRawTag(32);
        output.WriteUInt64(SentItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (HasSentItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SentItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgSQLGCToGCRevokeUntrustedGift other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasSentItemId) {
        SentItemId = other.SentItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 32: {
            SentItemId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 32: {
            SentItemId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCWrapAndDeliverGiftResponse : pb::IMessage<CMsgClientToGCWrapAndDeliverGiftResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCWrapAndDeliverGiftResponse> _parser = new pb::MessageParser<CMsgClientToGCWrapAndDeliverGiftResponse>(() => new CMsgClientToGCWrapAndDeliverGiftResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCWrapAndDeliverGiftResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCWrapAndDeliverGiftResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCWrapAndDeliverGiftResponse(CMsgClientToGCWrapAndDeliverGiftResponse other) : this() {
      _hasBits0 = other._hasBits0;
      response_ = other.response_;
      giftingChargeUses_ = other.giftingChargeUses_;
      giftingChargeMax_ = other.giftingChargeMax_;
      giftingUses_ = other.giftingUses_;
      giftingMax_ = other.giftingMax_;
      giftingWindowHours_ = other.giftingWindowHours_;
      tradeRestriction_ = other.tradeRestriction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCWrapAndDeliverGiftResponse Clone() {
      return new CMsgClientToGCWrapAndDeliverGiftResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private readonly static global::Steam.Protos.Dota2.EGCMsgResponse ResponseDefaultValue = global::Steam.Protos.Dota2.EGCMsgResponse.KEgcmsgResponseOk;

    private global::Steam.Protos.Dota2.EGCMsgResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.EGCMsgResponse Response {
      get { if ((_hasBits0 & 1) != 0) { return response_; } else { return ResponseDefaultValue; } }
      set {
        _hasBits0 |= 1;
        response_ = value;
      }
    }
    /// <summary>Gets whether the "response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponse {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "gifting_charge_uses" field.</summary>
    public const int GiftingChargeUsesFieldNumber = 2;
    private readonly static uint GiftingChargeUsesDefaultValue = 0;

    private uint giftingChargeUses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GiftingChargeUses {
      get { if ((_hasBits0 & 2) != 0) { return giftingChargeUses_; } else { return GiftingChargeUsesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        giftingChargeUses_ = value;
      }
    }
    /// <summary>Gets whether the "gifting_charge_uses" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGiftingChargeUses {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "gifting_charge_uses" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGiftingChargeUses() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gifting_charge_max" field.</summary>
    public const int GiftingChargeMaxFieldNumber = 3;
    private readonly static int GiftingChargeMaxDefaultValue = 0;

    private int giftingChargeMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GiftingChargeMax {
      get { if ((_hasBits0 & 4) != 0) { return giftingChargeMax_; } else { return GiftingChargeMaxDefaultValue; } }
      set {
        _hasBits0 |= 4;
        giftingChargeMax_ = value;
      }
    }
    /// <summary>Gets whether the "gifting_charge_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGiftingChargeMax {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gifting_charge_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGiftingChargeMax() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "gifting_uses" field.</summary>
    public const int GiftingUsesFieldNumber = 4;
    private readonly static uint GiftingUsesDefaultValue = 0;

    private uint giftingUses_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GiftingUses {
      get { if ((_hasBits0 & 8) != 0) { return giftingUses_; } else { return GiftingUsesDefaultValue; } }
      set {
        _hasBits0 |= 8;
        giftingUses_ = value;
      }
    }
    /// <summary>Gets whether the "gifting_uses" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGiftingUses {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gifting_uses" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGiftingUses() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "gifting_max" field.</summary>
    public const int GiftingMaxFieldNumber = 5;
    private readonly static int GiftingMaxDefaultValue = 0;

    private int giftingMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GiftingMax {
      get { if ((_hasBits0 & 16) != 0) { return giftingMax_; } else { return GiftingMaxDefaultValue; } }
      set {
        _hasBits0 |= 16;
        giftingMax_ = value;
      }
    }
    /// <summary>Gets whether the "gifting_max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGiftingMax {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "gifting_max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGiftingMax() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "gifting_window_hours" field.</summary>
    public const int GiftingWindowHoursFieldNumber = 6;
    private readonly static uint GiftingWindowHoursDefaultValue = 0;

    private uint giftingWindowHours_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GiftingWindowHours {
      get { if ((_hasBits0 & 32) != 0) { return giftingWindowHours_; } else { return GiftingWindowHoursDefaultValue; } }
      set {
        _hasBits0 |= 32;
        giftingWindowHours_ = value;
      }
    }
    /// <summary>Gets whether the "gifting_window_hours" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGiftingWindowHours {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "gifting_window_hours" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGiftingWindowHours() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "trade_restriction" field.</summary>
    public const int TradeRestrictionFieldNumber = 7;
    private readonly static global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse TradeRestrictionDefaultValue = global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse.KEgcmsgInitiateTradeResponseAccepted;

    private global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse tradeRestriction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse TradeRestriction {
      get { if ((_hasBits0 & 64) != 0) { return tradeRestriction_; } else { return TradeRestrictionDefaultValue; } }
      set {
        _hasBits0 |= 64;
        tradeRestriction_ = value;
      }
    }
    /// <summary>Gets whether the "trade_restriction" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTradeRestriction {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "trade_restriction" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTradeRestriction() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCWrapAndDeliverGiftResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCWrapAndDeliverGiftResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Response != other.Response) return false;
      if (GiftingChargeUses != other.GiftingChargeUses) return false;
      if (GiftingChargeMax != other.GiftingChargeMax) return false;
      if (GiftingUses != other.GiftingUses) return false;
      if (GiftingMax != other.GiftingMax) return false;
      if (GiftingWindowHours != other.GiftingWindowHours) return false;
      if (TradeRestriction != other.TradeRestriction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResponse) hash ^= Response.GetHashCode();
      if (HasGiftingChargeUses) hash ^= GiftingChargeUses.GetHashCode();
      if (HasGiftingChargeMax) hash ^= GiftingChargeMax.GetHashCode();
      if (HasGiftingUses) hash ^= GiftingUses.GetHashCode();
      if (HasGiftingMax) hash ^= GiftingMax.GetHashCode();
      if (HasGiftingWindowHours) hash ^= GiftingWindowHours.GetHashCode();
      if (HasTradeRestriction) hash ^= TradeRestriction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Response);
      }
      if (HasGiftingChargeUses) {
        output.WriteRawTag(16);
        output.WriteUInt32(GiftingChargeUses);
      }
      if (HasGiftingChargeMax) {
        output.WriteRawTag(24);
        output.WriteInt32(GiftingChargeMax);
      }
      if (HasGiftingUses) {
        output.WriteRawTag(32);
        output.WriteUInt32(GiftingUses);
      }
      if (HasGiftingMax) {
        output.WriteRawTag(40);
        output.WriteInt32(GiftingMax);
      }
      if (HasGiftingWindowHours) {
        output.WriteRawTag(48);
        output.WriteUInt32(GiftingWindowHours);
      }
      if (HasTradeRestriction) {
        output.WriteRawTag(56);
        output.WriteEnum((int) TradeRestriction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Response);
      }
      if (HasGiftingChargeUses) {
        output.WriteRawTag(16);
        output.WriteUInt32(GiftingChargeUses);
      }
      if (HasGiftingChargeMax) {
        output.WriteRawTag(24);
        output.WriteInt32(GiftingChargeMax);
      }
      if (HasGiftingUses) {
        output.WriteRawTag(32);
        output.WriteUInt32(GiftingUses);
      }
      if (HasGiftingMax) {
        output.WriteRawTag(40);
        output.WriteInt32(GiftingMax);
      }
      if (HasGiftingWindowHours) {
        output.WriteRawTag(48);
        output.WriteUInt32(GiftingWindowHours);
      }
      if (HasTradeRestriction) {
        output.WriteRawTag(56);
        output.WriteEnum((int) TradeRestriction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResponse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Response);
      }
      if (HasGiftingChargeUses) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GiftingChargeUses);
      }
      if (HasGiftingChargeMax) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GiftingChargeMax);
      }
      if (HasGiftingUses) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GiftingUses);
      }
      if (HasGiftingMax) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GiftingMax);
      }
      if (HasGiftingWindowHours) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GiftingWindowHours);
      }
      if (HasTradeRestriction) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TradeRestriction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCWrapAndDeliverGiftResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResponse) {
        Response = other.Response;
      }
      if (other.HasGiftingChargeUses) {
        GiftingChargeUses = other.GiftingChargeUses;
      }
      if (other.HasGiftingChargeMax) {
        GiftingChargeMax = other.GiftingChargeMax;
      }
      if (other.HasGiftingUses) {
        GiftingUses = other.GiftingUses;
      }
      if (other.HasGiftingMax) {
        GiftingMax = other.GiftingMax;
      }
      if (other.HasGiftingWindowHours) {
        GiftingWindowHours = other.GiftingWindowHours;
      }
      if (other.HasTradeRestriction) {
        TradeRestriction = other.TradeRestriction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Response = (global::Steam.Protos.Dota2.EGCMsgResponse) input.ReadEnum();
            break;
          }
          case 16: {
            GiftingChargeUses = input.ReadUInt32();
            break;
          }
          case 24: {
            GiftingChargeMax = input.ReadInt32();
            break;
          }
          case 32: {
            GiftingUses = input.ReadUInt32();
            break;
          }
          case 40: {
            GiftingMax = input.ReadInt32();
            break;
          }
          case 48: {
            GiftingWindowHours = input.ReadUInt32();
            break;
          }
          case 56: {
            TradeRestriction = (global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Response = (global::Steam.Protos.Dota2.EGCMsgResponse) input.ReadEnum();
            break;
          }
          case 16: {
            GiftingChargeUses = input.ReadUInt32();
            break;
          }
          case 24: {
            GiftingChargeMax = input.ReadInt32();
            break;
          }
          case 32: {
            GiftingUses = input.ReadUInt32();
            break;
          }
          case 40: {
            GiftingMax = input.ReadInt32();
            break;
          }
          case 48: {
            GiftingWindowHours = input.ReadUInt32();
            break;
          }
          case 56: {
            TradeRestriction = (global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCUnwrapGift : pb::IMessage<CMsgClientToGCUnwrapGift>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCUnwrapGift> _parser = new pb::MessageParser<CMsgClientToGCUnwrapGift>(() => new CMsgClientToGCUnwrapGift());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCUnwrapGift> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnwrapGift() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnwrapGift(CMsgClientToGCUnwrapGift other) : this() {
      _hasBits0 = other._hasBits0;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnwrapGift Clone() {
      return new CMsgClientToGCUnwrapGift(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCUnwrapGift);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCUnwrapGift other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCUnwrapGift other) {
      if (other == null) {
        return;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCGetGiftPermissions : pb::IMessage<CMsgClientToGCGetGiftPermissions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCGetGiftPermissions> _parser = new pb::MessageParser<CMsgClientToGCGetGiftPermissions>(() => new CMsgClientToGCGetGiftPermissions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCGetGiftPermissions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetGiftPermissions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetGiftPermissions(CMsgClientToGCGetGiftPermissions other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetGiftPermissions Clone() {
      return new CMsgClientToGCGetGiftPermissions(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCGetGiftPermissions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCGetGiftPermissions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCGetGiftPermissions other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCGetGiftPermissionsResponse : pb::IMessage<CMsgClientToGCGetGiftPermissionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCGetGiftPermissionsResponse> _parser = new pb::MessageParser<CMsgClientToGCGetGiftPermissionsResponse>(() => new CMsgClientToGCGetGiftPermissionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCGetGiftPermissionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetGiftPermissionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetGiftPermissionsResponse(CMsgClientToGCGetGiftPermissionsResponse other) : this() {
      _hasBits0 = other._hasBits0;
      isUnlimited_ = other.isUnlimited_;
      hasTwoFactor_ = other.hasTwoFactor_;
      senderPermission_ = other.senderPermission_;
      friendshipAgeRequirement_ = other.friendshipAgeRequirement_;
      friendshipAgeRequirementTwoFactor_ = other.friendshipAgeRequirementTwoFactor_;
      friendPermissions_ = other.friendPermissions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetGiftPermissionsResponse Clone() {
      return new CMsgClientToGCGetGiftPermissionsResponse(this);
    }

    /// <summary>Field number for the "is_unlimited" field.</summary>
    public const int IsUnlimitedFieldNumber = 1;
    private readonly static bool IsUnlimitedDefaultValue = false;

    private bool isUnlimited_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUnlimited {
      get { if ((_hasBits0 & 1) != 0) { return isUnlimited_; } else { return IsUnlimitedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        isUnlimited_ = value;
      }
    }
    /// <summary>Gets whether the "is_unlimited" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsUnlimited {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "is_unlimited" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsUnlimited() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "has_two_factor" field.</summary>
    public const int HasTwoFactorFieldNumber = 3;
    private readonly static bool HasTwoFactorDefaultValue = false;

    private bool hasTwoFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTwoFactor {
      get { if ((_hasBits0 & 2) != 0) { return hasTwoFactor_; } else { return HasTwoFactorDefaultValue; } }
      set {
        _hasBits0 |= 2;
        hasTwoFactor_ = value;
      }
    }
    /// <summary>Gets whether the "has_two_factor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasHasTwoFactor {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "has_two_factor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHasTwoFactor() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "sender_permission" field.</summary>
    public const int SenderPermissionFieldNumber = 6;
    private readonly static global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse SenderPermissionDefaultValue = global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse.KEgcmsgInitiateTradeResponseAccepted;

    private global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse senderPermission_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse SenderPermission {
      get { if ((_hasBits0 & 4) != 0) { return senderPermission_; } else { return SenderPermissionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        senderPermission_ = value;
      }
    }
    /// <summary>Gets whether the "sender_permission" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSenderPermission {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "sender_permission" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSenderPermission() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "friendship_age_requirement" field.</summary>
    public const int FriendshipAgeRequirementFieldNumber = 7;
    private readonly static uint FriendshipAgeRequirementDefaultValue = 0;

    private uint friendshipAgeRequirement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FriendshipAgeRequirement {
      get { if ((_hasBits0 & 8) != 0) { return friendshipAgeRequirement_; } else { return FriendshipAgeRequirementDefaultValue; } }
      set {
        _hasBits0 |= 8;
        friendshipAgeRequirement_ = value;
      }
    }
    /// <summary>Gets whether the "friendship_age_requirement" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFriendshipAgeRequirement {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "friendship_age_requirement" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFriendshipAgeRequirement() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "friendship_age_requirement_two_factor" field.</summary>
    public const int FriendshipAgeRequirementTwoFactorFieldNumber = 8;
    private readonly static uint FriendshipAgeRequirementTwoFactorDefaultValue = 0;

    private uint friendshipAgeRequirementTwoFactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FriendshipAgeRequirementTwoFactor {
      get { if ((_hasBits0 & 16) != 0) { return friendshipAgeRequirementTwoFactor_; } else { return FriendshipAgeRequirementTwoFactorDefaultValue; } }
      set {
        _hasBits0 |= 16;
        friendshipAgeRequirementTwoFactor_ = value;
      }
    }
    /// <summary>Gets whether the "friendship_age_requirement_two_factor" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFriendshipAgeRequirementTwoFactor {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "friendship_age_requirement_two_factor" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFriendshipAgeRequirementTwoFactor() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "friend_permissions" field.</summary>
    public const int FriendPermissionsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgClientToGCGetGiftPermissionsResponse.Types.FriendPermission> _repeated_friendPermissions_codec
        = pb::FieldCodec.ForMessage(74, global::Steam.Protos.Dota2.CMsgClientToGCGetGiftPermissionsResponse.Types.FriendPermission.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCGetGiftPermissionsResponse.Types.FriendPermission> friendPermissions_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCGetGiftPermissionsResponse.Types.FriendPermission>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCGetGiftPermissionsResponse.Types.FriendPermission> FriendPermissions {
      get { return friendPermissions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCGetGiftPermissionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCGetGiftPermissionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsUnlimited != other.IsUnlimited) return false;
      if (HasTwoFactor != other.HasTwoFactor) return false;
      if (SenderPermission != other.SenderPermission) return false;
      if (FriendshipAgeRequirement != other.FriendshipAgeRequirement) return false;
      if (FriendshipAgeRequirementTwoFactor != other.FriendshipAgeRequirementTwoFactor) return false;
      if(!friendPermissions_.Equals(other.friendPermissions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasIsUnlimited) hash ^= IsUnlimited.GetHashCode();
      if (HasHasTwoFactor) hash ^= HasTwoFactor.GetHashCode();
      if (HasSenderPermission) hash ^= SenderPermission.GetHashCode();
      if (HasFriendshipAgeRequirement) hash ^= FriendshipAgeRequirement.GetHashCode();
      if (HasFriendshipAgeRequirementTwoFactor) hash ^= FriendshipAgeRequirementTwoFactor.GetHashCode();
      hash ^= friendPermissions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasIsUnlimited) {
        output.WriteRawTag(8);
        output.WriteBool(IsUnlimited);
      }
      if (HasHasTwoFactor) {
        output.WriteRawTag(24);
        output.WriteBool(HasTwoFactor);
      }
      if (HasSenderPermission) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SenderPermission);
      }
      if (HasFriendshipAgeRequirement) {
        output.WriteRawTag(56);
        output.WriteUInt32(FriendshipAgeRequirement);
      }
      if (HasFriendshipAgeRequirementTwoFactor) {
        output.WriteRawTag(64);
        output.WriteUInt32(FriendshipAgeRequirementTwoFactor);
      }
      friendPermissions_.WriteTo(output, _repeated_friendPermissions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasIsUnlimited) {
        output.WriteRawTag(8);
        output.WriteBool(IsUnlimited);
      }
      if (HasHasTwoFactor) {
        output.WriteRawTag(24);
        output.WriteBool(HasTwoFactor);
      }
      if (HasSenderPermission) {
        output.WriteRawTag(48);
        output.WriteEnum((int) SenderPermission);
      }
      if (HasFriendshipAgeRequirement) {
        output.WriteRawTag(56);
        output.WriteUInt32(FriendshipAgeRequirement);
      }
      if (HasFriendshipAgeRequirementTwoFactor) {
        output.WriteRawTag(64);
        output.WriteUInt32(FriendshipAgeRequirementTwoFactor);
      }
      friendPermissions_.WriteTo(ref output, _repeated_friendPermissions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasIsUnlimited) {
        size += 1 + 1;
      }
      if (HasHasTwoFactor) {
        size += 1 + 1;
      }
      if (HasSenderPermission) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SenderPermission);
      }
      if (HasFriendshipAgeRequirement) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FriendshipAgeRequirement);
      }
      if (HasFriendshipAgeRequirementTwoFactor) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FriendshipAgeRequirementTwoFactor);
      }
      size += friendPermissions_.CalculateSize(_repeated_friendPermissions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCGetGiftPermissionsResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasIsUnlimited) {
        IsUnlimited = other.IsUnlimited;
      }
      if (other.HasHasTwoFactor) {
        HasTwoFactor = other.HasTwoFactor;
      }
      if (other.HasSenderPermission) {
        SenderPermission = other.SenderPermission;
      }
      if (other.HasFriendshipAgeRequirement) {
        FriendshipAgeRequirement = other.FriendshipAgeRequirement;
      }
      if (other.HasFriendshipAgeRequirementTwoFactor) {
        FriendshipAgeRequirementTwoFactor = other.FriendshipAgeRequirementTwoFactor;
      }
      friendPermissions_.Add(other.friendPermissions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsUnlimited = input.ReadBool();
            break;
          }
          case 24: {
            HasTwoFactor = input.ReadBool();
            break;
          }
          case 48: {
            SenderPermission = (global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse) input.ReadEnum();
            break;
          }
          case 56: {
            FriendshipAgeRequirement = input.ReadUInt32();
            break;
          }
          case 64: {
            FriendshipAgeRequirementTwoFactor = input.ReadUInt32();
            break;
          }
          case 74: {
            friendPermissions_.AddEntriesFrom(input, _repeated_friendPermissions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsUnlimited = input.ReadBool();
            break;
          }
          case 24: {
            HasTwoFactor = input.ReadBool();
            break;
          }
          case 48: {
            SenderPermission = (global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse) input.ReadEnum();
            break;
          }
          case 56: {
            FriendshipAgeRequirement = input.ReadUInt32();
            break;
          }
          case 64: {
            FriendshipAgeRequirementTwoFactor = input.ReadUInt32();
            break;
          }
          case 74: {
            friendPermissions_.AddEntriesFrom(ref input, _repeated_friendPermissions_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgClientToGCGetGiftPermissionsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class FriendPermission : pb::IMessage<FriendPermission>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FriendPermission> _parser = new pb::MessageParser<FriendPermission>(() => new FriendPermission());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FriendPermission> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgClientToGCGetGiftPermissionsResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FriendPermission() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FriendPermission(FriendPermission other) : this() {
          _hasBits0 = other._hasBits0;
          accountId_ = other.accountId_;
          permission_ = other.permission_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FriendPermission Clone() {
          return new FriendPermission(this);
        }

        /// <summary>Field number for the "account_id" field.</summary>
        public const int AccountIdFieldNumber = 1;
        private readonly static uint AccountIdDefaultValue = 0;

        private uint accountId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint AccountId {
          get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            accountId_ = value;
          }
        }
        /// <summary>Gets whether the "account_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasAccountId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "account_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearAccountId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "permission" field.</summary>
        public const int PermissionFieldNumber = 2;
        private readonly static global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse PermissionDefaultValue = global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse.KEgcmsgInitiateTradeResponseAccepted;

        private global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse permission_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse Permission {
          get { if ((_hasBits0 & 2) != 0) { return permission_; } else { return PermissionDefaultValue; } }
          set {
            _hasBits0 |= 2;
            permission_ = value;
          }
        }
        /// <summary>Gets whether the "permission" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPermission {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "permission" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPermission() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FriendPermission);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FriendPermission other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AccountId != other.AccountId) return false;
          if (Permission != other.Permission) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasAccountId) hash ^= AccountId.GetHashCode();
          if (HasPermission) hash ^= Permission.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasAccountId) {
            output.WriteRawTag(8);
            output.WriteUInt32(AccountId);
          }
          if (HasPermission) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Permission);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasAccountId) {
            output.WriteRawTag(8);
            output.WriteUInt32(AccountId);
          }
          if (HasPermission) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Permission);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasAccountId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
          }
          if (HasPermission) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Permission);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FriendPermission other) {
          if (other == null) {
            return;
          }
          if (other.HasAccountId) {
            AccountId = other.AccountId;
          }
          if (other.HasPermission) {
            Permission = other.Permission;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                AccountId = input.ReadUInt32();
                break;
              }
              case 16: {
                Permission = (global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                AccountId = input.ReadUInt32();
                break;
              }
              case 16: {
                Permission = (global::Steam.Protos.Dota2.EGCMsgInitiateTradeResponse) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgClientToGCUnpackBundle : pb::IMessage<CMsgClientToGCUnpackBundle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCUnpackBundle> _parser = new pb::MessageParser<CMsgClientToGCUnpackBundle>(() => new CMsgClientToGCUnpackBundle());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCUnpackBundle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnpackBundle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnpackBundle(CMsgClientToGCUnpackBundle other) : this() {
      _hasBits0 = other._hasBits0;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnpackBundle Clone() {
      return new CMsgClientToGCUnpackBundle(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCUnpackBundle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCUnpackBundle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCUnpackBundle other) {
      if (other == null) {
        return;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCUnpackBundleResponse : pb::IMessage<CMsgClientToGCUnpackBundleResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCUnpackBundleResponse> _parser = new pb::MessageParser<CMsgClientToGCUnpackBundleResponse>(() => new CMsgClientToGCUnpackBundleResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCUnpackBundleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnpackBundleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnpackBundleResponse(CMsgClientToGCUnpackBundleResponse other) : this() {
      _hasBits0 = other._hasBits0;
      unpackedItemIds_ = other.unpackedItemIds_.Clone();
      response_ = other.response_;
      unpackedItemDefIndexes_ = other.unpackedItemDefIndexes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnpackBundleResponse Clone() {
      return new CMsgClientToGCUnpackBundleResponse(this);
    }

    /// <summary>Field number for the "unpacked_item_ids" field.</summary>
    public const int UnpackedItemIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_unpackedItemIds_codec
        = pb::FieldCodec.ForUInt64(8);
    private readonly pbc::RepeatedField<ulong> unpackedItemIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> UnpackedItemIds {
      get { return unpackedItemIds_; }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 2;
    private readonly static global::Steam.Protos.Dota2.CMsgClientToGCUnpackBundleResponse.Types.EUnpackBundle ResponseDefaultValue = global::Steam.Protos.Dota2.CMsgClientToGCUnpackBundleResponse.Types.EUnpackBundle.KUnpackBundleSucceeded;

    private global::Steam.Protos.Dota2.CMsgClientToGCUnpackBundleResponse.Types.EUnpackBundle response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CMsgClientToGCUnpackBundleResponse.Types.EUnpackBundle Response {
      get { if ((_hasBits0 & 1) != 0) { return response_; } else { return ResponseDefaultValue; } }
      set {
        _hasBits0 |= 1;
        response_ = value;
      }
    }
    /// <summary>Gets whether the "response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponse {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "unpacked_item_def_indexes" field.</summary>
    public const int UnpackedItemDefIndexesFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_unpackedItemDefIndexes_codec
        = pb::FieldCodec.ForUInt32(24);
    private readonly pbc::RepeatedField<uint> unpackedItemDefIndexes_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> UnpackedItemDefIndexes {
      get { return unpackedItemDefIndexes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCUnpackBundleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCUnpackBundleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!unpackedItemIds_.Equals(other.unpackedItemIds_)) return false;
      if (Response != other.Response) return false;
      if(!unpackedItemDefIndexes_.Equals(other.unpackedItemDefIndexes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= unpackedItemIds_.GetHashCode();
      if (HasResponse) hash ^= Response.GetHashCode();
      hash ^= unpackedItemDefIndexes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      unpackedItemIds_.WriteTo(output, _repeated_unpackedItemIds_codec);
      if (HasResponse) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Response);
      }
      unpackedItemDefIndexes_.WriteTo(output, _repeated_unpackedItemDefIndexes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      unpackedItemIds_.WriteTo(ref output, _repeated_unpackedItemIds_codec);
      if (HasResponse) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Response);
      }
      unpackedItemDefIndexes_.WriteTo(ref output, _repeated_unpackedItemDefIndexes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += unpackedItemIds_.CalculateSize(_repeated_unpackedItemIds_codec);
      if (HasResponse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Response);
      }
      size += unpackedItemDefIndexes_.CalculateSize(_repeated_unpackedItemDefIndexes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCUnpackBundleResponse other) {
      if (other == null) {
        return;
      }
      unpackedItemIds_.Add(other.unpackedItemIds_);
      if (other.HasResponse) {
        Response = other.Response;
      }
      unpackedItemDefIndexes_.Add(other.unpackedItemDefIndexes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            unpackedItemIds_.AddEntriesFrom(input, _repeated_unpackedItemIds_codec);
            break;
          }
          case 16: {
            Response = (global::Steam.Protos.Dota2.CMsgClientToGCUnpackBundleResponse.Types.EUnpackBundle) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            unpackedItemDefIndexes_.AddEntriesFrom(input, _repeated_unpackedItemDefIndexes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            unpackedItemIds_.AddEntriesFrom(ref input, _repeated_unpackedItemIds_codec);
            break;
          }
          case 16: {
            Response = (global::Steam.Protos.Dota2.CMsgClientToGCUnpackBundleResponse.Types.EUnpackBundle) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            unpackedItemDefIndexes_.AddEntriesFrom(ref input, _repeated_unpackedItemDefIndexes_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgClientToGCUnpackBundleResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EUnpackBundle {
        [pbr::OriginalName("k_UnpackBundle_Succeeded")] KUnpackBundleSucceeded = 0,
        [pbr::OriginalName("k_UnpackBundle_Failed_ItemIsNotBundle")] KUnpackBundleFailedItemIsNotBundle = 1,
        [pbr::OriginalName("k_UnpackBundle_Failed_UnableToCreateContainedItem")] KUnpackBundleFailedUnableToCreateContainedItem = 2,
        [pbr::OriginalName("k_UnpackBundle_Failed_SOCacheError")] KUnpackBundleFailedSocacheError = 3,
        [pbr::OriginalName("k_UnpackBundle_Failed_ItemIsInvalid")] KUnpackBundleFailedItemIsInvalid = 4,
        [pbr::OriginalName("k_UnpackBundle_Failed_BadItemQuantity")] KUnpackBundleFailedBadItemQuantity = 5,
        [pbr::OriginalName("k_UnpackBundle_Failed_UnableToDeleteItem")] KUnpackBundleFailedUnableToDeleteItem = 6,
      }

    }
    #endregion

  }

  public sealed partial class CMsgClientToGCPackBundle : pb::IMessage<CMsgClientToGCPackBundle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCPackBundle> _parser = new pb::MessageParser<CMsgClientToGCPackBundle>(() => new CMsgClientToGCPackBundle());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCPackBundle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCPackBundle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCPackBundle(CMsgClientToGCPackBundle other) : this() {
      _hasBits0 = other._hasBits0;
      itemIds_ = other.itemIds_.Clone();
      bundleItemDefIndex_ = other.bundleItemDefIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCPackBundle Clone() {
      return new CMsgClientToGCPackBundle(this);
    }

    /// <summary>Field number for the "item_ids" field.</summary>
    public const int ItemIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_itemIds_codec
        = pb::FieldCodec.ForUInt64(8);
    private readonly pbc::RepeatedField<ulong> itemIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> ItemIds {
      get { return itemIds_; }
    }

    /// <summary>Field number for the "bundle_item_def_index" field.</summary>
    public const int BundleItemDefIndexFieldNumber = 2;
    private readonly static uint BundleItemDefIndexDefaultValue = 0;

    private uint bundleItemDefIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint BundleItemDefIndex {
      get { if ((_hasBits0 & 1) != 0) { return bundleItemDefIndex_; } else { return BundleItemDefIndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bundleItemDefIndex_ = value;
      }
    }
    /// <summary>Gets whether the "bundle_item_def_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBundleItemDefIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bundle_item_def_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBundleItemDefIndex() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCPackBundle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCPackBundle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!itemIds_.Equals(other.itemIds_)) return false;
      if (BundleItemDefIndex != other.BundleItemDefIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= itemIds_.GetHashCode();
      if (HasBundleItemDefIndex) hash ^= BundleItemDefIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      itemIds_.WriteTo(output, _repeated_itemIds_codec);
      if (HasBundleItemDefIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(BundleItemDefIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      itemIds_.WriteTo(ref output, _repeated_itemIds_codec);
      if (HasBundleItemDefIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(BundleItemDefIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemIds_.CalculateSize(_repeated_itemIds_codec);
      if (HasBundleItemDefIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(BundleItemDefIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCPackBundle other) {
      if (other == null) {
        return;
      }
      itemIds_.Add(other.itemIds_);
      if (other.HasBundleItemDefIndex) {
        BundleItemDefIndex = other.BundleItemDefIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            itemIds_.AddEntriesFrom(input, _repeated_itemIds_codec);
            break;
          }
          case 16: {
            BundleItemDefIndex = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            itemIds_.AddEntriesFrom(ref input, _repeated_itemIds_codec);
            break;
          }
          case 16: {
            BundleItemDefIndex = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCPackBundleResponse : pb::IMessage<CMsgClientToGCPackBundleResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCPackBundleResponse> _parser = new pb::MessageParser<CMsgClientToGCPackBundleResponse>(() => new CMsgClientToGCPackBundleResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCPackBundleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCPackBundleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCPackBundleResponse(CMsgClientToGCPackBundleResponse other) : this() {
      _hasBits0 = other._hasBits0;
      itemId_ = other.itemId_;
      response_ = other.response_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCPackBundleResponse Clone() {
      return new CMsgClientToGCPackBundleResponse(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 2;
    private readonly static global::Steam.Protos.Dota2.CMsgClientToGCPackBundleResponse.Types.EPackBundle ResponseDefaultValue = global::Steam.Protos.Dota2.CMsgClientToGCPackBundleResponse.Types.EPackBundle.KPackBundleSucceeded;

    private global::Steam.Protos.Dota2.CMsgClientToGCPackBundleResponse.Types.EPackBundle response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CMsgClientToGCPackBundleResponse.Types.EPackBundle Response {
      get { if ((_hasBits0 & 2) != 0) { return response_; } else { return ResponseDefaultValue; } }
      set {
        _hasBits0 |= 2;
        response_ = value;
      }
    }
    /// <summary>Gets whether the "response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponse {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCPackBundleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCPackBundleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (Response != other.Response) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (HasResponse) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (HasResponse) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (HasResponse) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (HasResponse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCPackBundleResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasResponse) {
        Response = other.Response;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            Response = (global::Steam.Protos.Dota2.CMsgClientToGCPackBundleResponse.Types.EPackBundle) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            Response = (global::Steam.Protos.Dota2.CMsgClientToGCPackBundleResponse.Types.EPackBundle) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgClientToGCPackBundleResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EPackBundle {
        [pbr::OriginalName("k_PackBundle_Succeeded")] KPackBundleSucceeded = 0,
        [pbr::OriginalName("k_PackBundle_Failed_InternalError")] KPackBundleFailedInternalError = 1,
        [pbr::OriginalName("k_PackBundle_Failed_ItemIsNotBundle")] KPackBundleFailedItemIsNotBundle = 2,
        [pbr::OriginalName("k_PackBundle_Failed_SOCacheError")] KPackBundleFailedSocacheError = 3,
        [pbr::OriginalName("k_PackBundle_Failed_ItemIsInvalid")] KPackBundleFailedItemIsInvalid = 4,
        [pbr::OriginalName("k_PackBundle_Failed_BadItemQuantity")] KPackBundleFailedBadItemQuantity = 5,
        [pbr::OriginalName("k_PackBundle_Failed_UnableToDeleteItem")] KPackBundleFailedUnableToDeleteItem = 6,
        [pbr::OriginalName("k_PackBundle_Failed_BundleCannotBePacked")] KPackBundleFailedBundleCannotBePacked = 7,
        [pbr::OriginalName("k_PackBundle_Failed_ItemIsUntradeable")] KPackBundleFailedItemIsUntradeable = 8,
        [pbr::OriginalName("k_PackBundle_Failed_ItemIsEquipped")] KPackBundleFailedItemIsEquipped = 9,
        [pbr::OriginalName("k_PackBundle_Failed_ItemHasGems")] KPackBundleFailedItemHasGems = 10,
        [pbr::OriginalName("k_PackBundle_Failed_ItemMixedQuality")] KPackBundleFailedItemMixedQuality = 11,
        [pbr::OriginalName("k_PackBundle_Failed_ItemInvalidQuality")] KPackBundleFailedItemInvalidQuality = 12,
        [pbr::OriginalName("k_PackBundle_Failed_ItemIsNonEconomy")] KPackBundleFailedItemIsNonEconomy = 13,
        [pbr::OriginalName("k_PackBundle_Failed_Disabled")] KPackBundleFailedDisabled = 14,
      }

    }
    #endregion

  }

  public sealed partial class CMsgGCToClientStoreTransactionCompleted : pb::IMessage<CMsgGCToClientStoreTransactionCompleted>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToClientStoreTransactionCompleted> _parser = new pb::MessageParser<CMsgGCToClientStoreTransactionCompleted>(() => new CMsgGCToClientStoreTransactionCompleted());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToClientStoreTransactionCompleted> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToClientStoreTransactionCompleted() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToClientStoreTransactionCompleted(CMsgGCToClientStoreTransactionCompleted other) : this() {
      _hasBits0 = other._hasBits0;
      txnId_ = other.txnId_;
      itemIds_ = other.itemIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToClientStoreTransactionCompleted Clone() {
      return new CMsgGCToClientStoreTransactionCompleted(this);
    }

    /// <summary>Field number for the "txn_id" field.</summary>
    public const int TxnIdFieldNumber = 1;
    private readonly static ulong TxnIdDefaultValue = 0UL;

    private ulong txnId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TxnId {
      get { if ((_hasBits0 & 1) != 0) { return txnId_; } else { return TxnIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        txnId_ = value;
      }
    }
    /// <summary>Gets whether the "txn_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTxnId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "txn_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTxnId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_ids" field.</summary>
    public const int ItemIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_itemIds_codec
        = pb::FieldCodec.ForUInt64(16);
    private readonly pbc::RepeatedField<ulong> itemIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> ItemIds {
      get { return itemIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToClientStoreTransactionCompleted);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToClientStoreTransactionCompleted other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TxnId != other.TxnId) return false;
      if(!itemIds_.Equals(other.itemIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTxnId) hash ^= TxnId.GetHashCode();
      hash ^= itemIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTxnId) {
        output.WriteRawTag(8);
        output.WriteUInt64(TxnId);
      }
      itemIds_.WriteTo(output, _repeated_itemIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTxnId) {
        output.WriteRawTag(8);
        output.WriteUInt64(TxnId);
      }
      itemIds_.WriteTo(ref output, _repeated_itemIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTxnId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TxnId);
      }
      size += itemIds_.CalculateSize(_repeated_itemIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToClientStoreTransactionCompleted other) {
      if (other == null) {
        return;
      }
      if (other.HasTxnId) {
        TxnId = other.TxnId;
      }
      itemIds_.Add(other.itemIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TxnId = input.ReadUInt64();
            break;
          }
          case 18:
          case 16: {
            itemIds_.AddEntriesFrom(input, _repeated_itemIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TxnId = input.ReadUInt64();
            break;
          }
          case 18:
          case 16: {
            itemIds_.AddEntriesFrom(ref input, _repeated_itemIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCEquipItems : pb::IMessage<CMsgClientToGCEquipItems>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCEquipItems> _parser = new pb::MessageParser<CMsgClientToGCEquipItems>(() => new CMsgClientToGCEquipItems());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCEquipItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCEquipItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCEquipItems(CMsgClientToGCEquipItems other) : this() {
      equips_ = other.equips_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCEquipItems Clone() {
      return new CMsgClientToGCEquipItems(this);
    }

    /// <summary>Field number for the "equips" field.</summary>
    public const int EquipsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgAdjustItemEquippedState> _repeated_equips_codec
        = pb::FieldCodec.ForMessage(10, global::Steam.Protos.Dota2.CMsgAdjustItemEquippedState.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgAdjustItemEquippedState> equips_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgAdjustItemEquippedState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgAdjustItemEquippedState> Equips {
      get { return equips_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCEquipItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCEquipItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!equips_.Equals(other.equips_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= equips_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      equips_.WriteTo(output, _repeated_equips_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      equips_.WriteTo(ref output, _repeated_equips_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += equips_.CalculateSize(_repeated_equips_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCEquipItems other) {
      if (other == null) {
        return;
      }
      equips_.Add(other.equips_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            equips_.AddEntriesFrom(input, _repeated_equips_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            equips_.AddEntriesFrom(ref input, _repeated_equips_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCEquipItemsResponse : pb::IMessage<CMsgClientToGCEquipItemsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCEquipItemsResponse> _parser = new pb::MessageParser<CMsgClientToGCEquipItemsResponse>(() => new CMsgClientToGCEquipItemsResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCEquipItemsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCEquipItemsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCEquipItemsResponse(CMsgClientToGCEquipItemsResponse other) : this() {
      _hasBits0 = other._hasBits0;
      soCacheVersionId_ = other.soCacheVersionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCEquipItemsResponse Clone() {
      return new CMsgClientToGCEquipItemsResponse(this);
    }

    /// <summary>Field number for the "so_cache_version_id" field.</summary>
    public const int SoCacheVersionIdFieldNumber = 1;
    private readonly static ulong SoCacheVersionIdDefaultValue = 0UL;

    private ulong soCacheVersionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SoCacheVersionId {
      get { if ((_hasBits0 & 1) != 0) { return soCacheVersionId_; } else { return SoCacheVersionIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        soCacheVersionId_ = value;
      }
    }
    /// <summary>Gets whether the "so_cache_version_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSoCacheVersionId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "so_cache_version_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSoCacheVersionId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCEquipItemsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCEquipItemsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SoCacheVersionId != other.SoCacheVersionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSoCacheVersionId) hash ^= SoCacheVersionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSoCacheVersionId) {
        output.WriteRawTag(9);
        output.WriteFixed64(SoCacheVersionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSoCacheVersionId) {
        output.WriteRawTag(9);
        output.WriteFixed64(SoCacheVersionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSoCacheVersionId) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCEquipItemsResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasSoCacheVersionId) {
        SoCacheVersionId = other.SoCacheVersionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            SoCacheVersionId = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            SoCacheVersionId = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCSetItemStyle : pb::IMessage<CMsgClientToGCSetItemStyle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCSetItemStyle> _parser = new pb::MessageParser<CMsgClientToGCSetItemStyle>(() => new CMsgClientToGCSetItemStyle());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCSetItemStyle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCSetItemStyle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCSetItemStyle(CMsgClientToGCSetItemStyle other) : this() {
      _hasBits0 = other._hasBits0;
      itemId_ = other.itemId_;
      styleIndex_ = other.styleIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCSetItemStyle Clone() {
      return new CMsgClientToGCSetItemStyle(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "style_index" field.</summary>
    public const int StyleIndexFieldNumber = 2;
    private readonly static uint StyleIndexDefaultValue = 255;

    private uint styleIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StyleIndex {
      get { if ((_hasBits0 & 2) != 0) { return styleIndex_; } else { return StyleIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        styleIndex_ = value;
      }
    }
    /// <summary>Gets whether the "style_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStyleIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "style_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStyleIndex() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCSetItemStyle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCSetItemStyle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (StyleIndex != other.StyleIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (HasStyleIndex) hash ^= StyleIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (HasStyleIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(StyleIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (HasStyleIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(StyleIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (HasStyleIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StyleIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCSetItemStyle other) {
      if (other == null) {
        return;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasStyleIndex) {
        StyleIndex = other.StyleIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            StyleIndex = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            StyleIndex = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCSetItemStyleResponse : pb::IMessage<CMsgClientToGCSetItemStyleResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCSetItemStyleResponse> _parser = new pb::MessageParser<CMsgClientToGCSetItemStyleResponse>(() => new CMsgClientToGCSetItemStyleResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCSetItemStyleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCSetItemStyleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCSetItemStyleResponse(CMsgClientToGCSetItemStyleResponse other) : this() {
      _hasBits0 = other._hasBits0;
      response_ = other.response_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCSetItemStyleResponse Clone() {
      return new CMsgClientToGCSetItemStyleResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private readonly static global::Steam.Protos.Dota2.CMsgClientToGCSetItemStyleResponse.Types.ESetStyle ResponseDefaultValue = global::Steam.Protos.Dota2.CMsgClientToGCSetItemStyleResponse.Types.ESetStyle.KSetStyleSucceeded;

    private global::Steam.Protos.Dota2.CMsgClientToGCSetItemStyleResponse.Types.ESetStyle response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CMsgClientToGCSetItemStyleResponse.Types.ESetStyle Response {
      get { if ((_hasBits0 & 1) != 0) { return response_; } else { return ResponseDefaultValue; } }
      set {
        _hasBits0 |= 1;
        response_ = value;
      }
    }
    /// <summary>Gets whether the "response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponse {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCSetItemStyleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCSetItemStyleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Response != other.Response) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResponse) hash ^= Response.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResponse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCSetItemStyleResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResponse) {
        Response = other.Response;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Response = (global::Steam.Protos.Dota2.CMsgClientToGCSetItemStyleResponse.Types.ESetStyle) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Response = (global::Steam.Protos.Dota2.CMsgClientToGCSetItemStyleResponse.Types.ESetStyle) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgClientToGCSetItemStyleResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ESetStyle {
        [pbr::OriginalName("k_SetStyle_Succeeded")] KSetStyleSucceeded = 0,
        [pbr::OriginalName("k_SetStyle_Failed")] KSetStyleFailed = 1,
        [pbr::OriginalName("k_SetStyle_Failed_StyleIsLocked")] KSetStyleFailedStyleIsLocked = 2,
      }

    }
    #endregion

  }

  public sealed partial class CMsgClientToGCUnlockItemStyle : pb::IMessage<CMsgClientToGCUnlockItemStyle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCUnlockItemStyle> _parser = new pb::MessageParser<CMsgClientToGCUnlockItemStyle>(() => new CMsgClientToGCUnlockItemStyle());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCUnlockItemStyle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnlockItemStyle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnlockItemStyle(CMsgClientToGCUnlockItemStyle other) : this() {
      _hasBits0 = other._hasBits0;
      itemToUnlock_ = other.itemToUnlock_;
      styleIndex_ = other.styleIndex_;
      consumableItemIds_ = other.consumableItemIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnlockItemStyle Clone() {
      return new CMsgClientToGCUnlockItemStyle(this);
    }

    /// <summary>Field number for the "item_to_unlock" field.</summary>
    public const int ItemToUnlockFieldNumber = 1;
    private readonly static ulong ItemToUnlockDefaultValue = 0UL;

    private ulong itemToUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemToUnlock {
      get { if ((_hasBits0 & 1) != 0) { return itemToUnlock_; } else { return ItemToUnlockDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemToUnlock_ = value;
      }
    }
    /// <summary>Gets whether the "item_to_unlock" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemToUnlock {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_to_unlock" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemToUnlock() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "style_index" field.</summary>
    public const int StyleIndexFieldNumber = 2;
    private readonly static uint StyleIndexDefaultValue = 255;

    private uint styleIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StyleIndex {
      get { if ((_hasBits0 & 2) != 0) { return styleIndex_; } else { return StyleIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        styleIndex_ = value;
      }
    }
    /// <summary>Gets whether the "style_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStyleIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "style_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStyleIndex() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "consumable_item_ids" field.</summary>
    public const int ConsumableItemIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<ulong> _repeated_consumableItemIds_codec
        = pb::FieldCodec.ForUInt64(24);
    private readonly pbc::RepeatedField<ulong> consumableItemIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> ConsumableItemIds {
      get { return consumableItemIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCUnlockItemStyle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCUnlockItemStyle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemToUnlock != other.ItemToUnlock) return false;
      if (StyleIndex != other.StyleIndex) return false;
      if(!consumableItemIds_.Equals(other.consumableItemIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemToUnlock) hash ^= ItemToUnlock.GetHashCode();
      if (HasStyleIndex) hash ^= StyleIndex.GetHashCode();
      hash ^= consumableItemIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemToUnlock) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemToUnlock);
      }
      if (HasStyleIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(StyleIndex);
      }
      consumableItemIds_.WriteTo(output, _repeated_consumableItemIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemToUnlock) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemToUnlock);
      }
      if (HasStyleIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(StyleIndex);
      }
      consumableItemIds_.WriteTo(ref output, _repeated_consumableItemIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemToUnlock) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemToUnlock);
      }
      if (HasStyleIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StyleIndex);
      }
      size += consumableItemIds_.CalculateSize(_repeated_consumableItemIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCUnlockItemStyle other) {
      if (other == null) {
        return;
      }
      if (other.HasItemToUnlock) {
        ItemToUnlock = other.ItemToUnlock;
      }
      if (other.HasStyleIndex) {
        StyleIndex = other.StyleIndex;
      }
      consumableItemIds_.Add(other.consumableItemIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemToUnlock = input.ReadUInt64();
            break;
          }
          case 16: {
            StyleIndex = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            consumableItemIds_.AddEntriesFrom(input, _repeated_consumableItemIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemToUnlock = input.ReadUInt64();
            break;
          }
          case 16: {
            StyleIndex = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            consumableItemIds_.AddEntriesFrom(ref input, _repeated_consumableItemIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCUnlockItemStyleResponse : pb::IMessage<CMsgClientToGCUnlockItemStyleResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCUnlockItemStyleResponse> _parser = new pb::MessageParser<CMsgClientToGCUnlockItemStyleResponse>(() => new CMsgClientToGCUnlockItemStyleResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCUnlockItemStyleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnlockItemStyleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnlockItemStyleResponse(CMsgClientToGCUnlockItemStyleResponse other) : this() {
      _hasBits0 = other._hasBits0;
      response_ = other.response_;
      itemId_ = other.itemId_;
      styleIndex_ = other.styleIndex_;
      stylePrereq_ = other.stylePrereq_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnlockItemStyleResponse Clone() {
      return new CMsgClientToGCUnlockItemStyleResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private readonly static global::Steam.Protos.Dota2.CMsgClientToGCUnlockItemStyleResponse.Types.EUnlockStyle ResponseDefaultValue = global::Steam.Protos.Dota2.CMsgClientToGCUnlockItemStyleResponse.Types.EUnlockStyle.KUnlockStyleSucceeded;

    private global::Steam.Protos.Dota2.CMsgClientToGCUnlockItemStyleResponse.Types.EUnlockStyle response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CMsgClientToGCUnlockItemStyleResponse.Types.EUnlockStyle Response {
      get { if ((_hasBits0 & 1) != 0) { return response_; } else { return ResponseDefaultValue; } }
      set {
        _hasBits0 |= 1;
        response_ = value;
      }
    }
    /// <summary>Gets whether the "response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponse {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 2) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "style_index" field.</summary>
    public const int StyleIndexFieldNumber = 3;
    private readonly static uint StyleIndexDefaultValue = 255;

    private uint styleIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StyleIndex {
      get { if ((_hasBits0 & 4) != 0) { return styleIndex_; } else { return StyleIndexDefaultValue; } }
      set {
        _hasBits0 |= 4;
        styleIndex_ = value;
      }
    }
    /// <summary>Gets whether the "style_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStyleIndex {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "style_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStyleIndex() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "style_prereq" field.</summary>
    public const int StylePrereqFieldNumber = 4;
    private readonly static uint StylePrereqDefaultValue = 255;

    private uint stylePrereq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StylePrereq {
      get { if ((_hasBits0 & 8) != 0) { return stylePrereq_; } else { return StylePrereqDefaultValue; } }
      set {
        _hasBits0 |= 8;
        stylePrereq_ = value;
      }
    }
    /// <summary>Gets whether the "style_prereq" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStylePrereq {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "style_prereq" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStylePrereq() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCUnlockItemStyleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCUnlockItemStyleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Response != other.Response) return false;
      if (ItemId != other.ItemId) return false;
      if (StyleIndex != other.StyleIndex) return false;
      if (StylePrereq != other.StylePrereq) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResponse) hash ^= Response.GetHashCode();
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (HasStyleIndex) hash ^= StyleIndex.GetHashCode();
      if (HasStylePrereq) hash ^= StylePrereq.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Response);
      }
      if (HasItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ItemId);
      }
      if (HasStyleIndex) {
        output.WriteRawTag(24);
        output.WriteUInt32(StyleIndex);
      }
      if (HasStylePrereq) {
        output.WriteRawTag(32);
        output.WriteUInt32(StylePrereq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Response);
      }
      if (HasItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ItemId);
      }
      if (HasStyleIndex) {
        output.WriteRawTag(24);
        output.WriteUInt32(StyleIndex);
      }
      if (HasStylePrereq) {
        output.WriteRawTag(32);
        output.WriteUInt32(StylePrereq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResponse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Response);
      }
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (HasStyleIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StyleIndex);
      }
      if (HasStylePrereq) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StylePrereq);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCUnlockItemStyleResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResponse) {
        Response = other.Response;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasStyleIndex) {
        StyleIndex = other.StyleIndex;
      }
      if (other.HasStylePrereq) {
        StylePrereq = other.StylePrereq;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Response = (global::Steam.Protos.Dota2.CMsgClientToGCUnlockItemStyleResponse.Types.EUnlockStyle) input.ReadEnum();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 24: {
            StyleIndex = input.ReadUInt32();
            break;
          }
          case 32: {
            StylePrereq = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Response = (global::Steam.Protos.Dota2.CMsgClientToGCUnlockItemStyleResponse.Types.EUnlockStyle) input.ReadEnum();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 24: {
            StyleIndex = input.ReadUInt32();
            break;
          }
          case 32: {
            StylePrereq = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgClientToGCUnlockItemStyleResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EUnlockStyle {
        [pbr::OriginalName("k_UnlockStyle_Succeeded")] KUnlockStyleSucceeded = 0,
        [pbr::OriginalName("k_UnlockStyle_Failed_PreReq")] KUnlockStyleFailedPreReq = 1,
        [pbr::OriginalName("k_UnlockStyle_Failed_CantAfford")] KUnlockStyleFailedCantAfford = 2,
        [pbr::OriginalName("k_UnlockStyle_Failed_CantCommit")] KUnlockStyleFailedCantCommit = 3,
        [pbr::OriginalName("k_UnlockStyle_Failed_CantLockCache")] KUnlockStyleFailedCantLockCache = 4,
        [pbr::OriginalName("k_UnlockStyle_Failed_CantAffordAttrib")] KUnlockStyleFailedCantAffordAttrib = 5,
        [pbr::OriginalName("k_UnlockStyle_Failed_CantAffordGem")] KUnlockStyleFailedCantAffordGem = 6,
        [pbr::OriginalName("k_UnlockStyle_Failed_NoCompendiumLevel")] KUnlockStyleFailedNoCompendiumLevel = 7,
        [pbr::OriginalName("k_UnlockStyle_Failed_AlreadyUnlocked")] KUnlockStyleFailedAlreadyUnlocked = 8,
        [pbr::OriginalName("k_UnlockStyle_Failed_OtherError")] KUnlockStyleFailedOtherError = 9,
        [pbr::OriginalName("k_UnlockStyle_Failed_ItemIsInvalid")] KUnlockStyleFailedItemIsInvalid = 10,
        [pbr::OriginalName("k_UnlockStyle_Failed_ToolIsInvalid")] KUnlockStyleFailedToolIsInvalid = 11,
      }

    }
    #endregion

  }

  public sealed partial class CMsgClientToGCSetItemInventoryCategory : pb::IMessage<CMsgClientToGCSetItemInventoryCategory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCSetItemInventoryCategory> _parser = new pb::MessageParser<CMsgClientToGCSetItemInventoryCategory>(() => new CMsgClientToGCSetItemInventoryCategory());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCSetItemInventoryCategory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCSetItemInventoryCategory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCSetItemInventoryCategory(CMsgClientToGCSetItemInventoryCategory other) : this() {
      _hasBits0 = other._hasBits0;
      itemIds_ = other.itemIds_.Clone();
      setToValue_ = other.setToValue_;
      removeCategories_ = other.removeCategories_;
      addCategories_ = other.addCategories_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCSetItemInventoryCategory Clone() {
      return new CMsgClientToGCSetItemInventoryCategory(this);
    }

    /// <summary>Field number for the "item_ids" field.</summary>
    public const int ItemIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_itemIds_codec
        = pb::FieldCodec.ForUInt64(8);
    private readonly pbc::RepeatedField<ulong> itemIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> ItemIds {
      get { return itemIds_; }
    }

    /// <summary>Field number for the "set_to_value" field.</summary>
    public const int SetToValueFieldNumber = 2;
    private readonly static uint SetToValueDefaultValue = 0;

    private uint setToValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SetToValue {
      get { if ((_hasBits0 & 1) != 0) { return setToValue_; } else { return SetToValueDefaultValue; } }
      set {
        _hasBits0 |= 1;
        setToValue_ = value;
      }
    }
    /// <summary>Gets whether the "set_to_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSetToValue {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "set_to_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSetToValue() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "remove_categories" field.</summary>
    public const int RemoveCategoriesFieldNumber = 3;
    private readonly static uint RemoveCategoriesDefaultValue = 0;

    private uint removeCategories_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RemoveCategories {
      get { if ((_hasBits0 & 2) != 0) { return removeCategories_; } else { return RemoveCategoriesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        removeCategories_ = value;
      }
    }
    /// <summary>Gets whether the "remove_categories" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRemoveCategories {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "remove_categories" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRemoveCategories() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "add_categories" field.</summary>
    public const int AddCategoriesFieldNumber = 4;
    private readonly static uint AddCategoriesDefaultValue = 0;

    private uint addCategories_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AddCategories {
      get { if ((_hasBits0 & 4) != 0) { return addCategories_; } else { return AddCategoriesDefaultValue; } }
      set {
        _hasBits0 |= 4;
        addCategories_ = value;
      }
    }
    /// <summary>Gets whether the "add_categories" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAddCategories {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "add_categories" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAddCategories() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCSetItemInventoryCategory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCSetItemInventoryCategory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!itemIds_.Equals(other.itemIds_)) return false;
      if (SetToValue != other.SetToValue) return false;
      if (RemoveCategories != other.RemoveCategories) return false;
      if (AddCategories != other.AddCategories) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= itemIds_.GetHashCode();
      if (HasSetToValue) hash ^= SetToValue.GetHashCode();
      if (HasRemoveCategories) hash ^= RemoveCategories.GetHashCode();
      if (HasAddCategories) hash ^= AddCategories.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      itemIds_.WriteTo(output, _repeated_itemIds_codec);
      if (HasSetToValue) {
        output.WriteRawTag(16);
        output.WriteUInt32(SetToValue);
      }
      if (HasRemoveCategories) {
        output.WriteRawTag(24);
        output.WriteUInt32(RemoveCategories);
      }
      if (HasAddCategories) {
        output.WriteRawTag(32);
        output.WriteUInt32(AddCategories);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      itemIds_.WriteTo(ref output, _repeated_itemIds_codec);
      if (HasSetToValue) {
        output.WriteRawTag(16);
        output.WriteUInt32(SetToValue);
      }
      if (HasRemoveCategories) {
        output.WriteRawTag(24);
        output.WriteUInt32(RemoveCategories);
      }
      if (HasAddCategories) {
        output.WriteRawTag(32);
        output.WriteUInt32(AddCategories);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemIds_.CalculateSize(_repeated_itemIds_codec);
      if (HasSetToValue) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SetToValue);
      }
      if (HasRemoveCategories) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RemoveCategories);
      }
      if (HasAddCategories) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AddCategories);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCSetItemInventoryCategory other) {
      if (other == null) {
        return;
      }
      itemIds_.Add(other.itemIds_);
      if (other.HasSetToValue) {
        SetToValue = other.SetToValue;
      }
      if (other.HasRemoveCategories) {
        RemoveCategories = other.RemoveCategories;
      }
      if (other.HasAddCategories) {
        AddCategories = other.AddCategories;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            itemIds_.AddEntriesFrom(input, _repeated_itemIds_codec);
            break;
          }
          case 16: {
            SetToValue = input.ReadUInt32();
            break;
          }
          case 24: {
            RemoveCategories = input.ReadUInt32();
            break;
          }
          case 32: {
            AddCategories = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            itemIds_.AddEntriesFrom(ref input, _repeated_itemIds_codec);
            break;
          }
          case 16: {
            SetToValue = input.ReadUInt32();
            break;
          }
          case 24: {
            RemoveCategories = input.ReadUInt32();
            break;
          }
          case 32: {
            AddCategories = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCUnlockCrate : pb::IMessage<CMsgClientToGCUnlockCrate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCUnlockCrate> _parser = new pb::MessageParser<CMsgClientToGCUnlockCrate>(() => new CMsgClientToGCUnlockCrate());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCUnlockCrate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnlockCrate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnlockCrate(CMsgClientToGCUnlockCrate other) : this() {
      _hasBits0 = other._hasBits0;
      crateItemId_ = other.crateItemId_;
      keyItemId_ = other.keyItemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnlockCrate Clone() {
      return new CMsgClientToGCUnlockCrate(this);
    }

    /// <summary>Field number for the "crate_item_id" field.</summary>
    public const int CrateItemIdFieldNumber = 1;
    private readonly static ulong CrateItemIdDefaultValue = 0UL;

    private ulong crateItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CrateItemId {
      get { if ((_hasBits0 & 1) != 0) { return crateItemId_; } else { return CrateItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        crateItemId_ = value;
      }
    }
    /// <summary>Gets whether the "crate_item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCrateItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "crate_item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCrateItemId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "key_item_id" field.</summary>
    public const int KeyItemIdFieldNumber = 2;
    private readonly static ulong KeyItemIdDefaultValue = 0UL;

    private ulong keyItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong KeyItemId {
      get { if ((_hasBits0 & 2) != 0) { return keyItemId_; } else { return KeyItemIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        keyItemId_ = value;
      }
    }
    /// <summary>Gets whether the "key_item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasKeyItemId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "key_item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKeyItemId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCUnlockCrate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCUnlockCrate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CrateItemId != other.CrateItemId) return false;
      if (KeyItemId != other.KeyItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCrateItemId) hash ^= CrateItemId.GetHashCode();
      if (HasKeyItemId) hash ^= KeyItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCrateItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(CrateItemId);
      }
      if (HasKeyItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(KeyItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCrateItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(CrateItemId);
      }
      if (HasKeyItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(KeyItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCrateItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CrateItemId);
      }
      if (HasKeyItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(KeyItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCUnlockCrate other) {
      if (other == null) {
        return;
      }
      if (other.HasCrateItemId) {
        CrateItemId = other.CrateItemId;
      }
      if (other.HasKeyItemId) {
        KeyItemId = other.KeyItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CrateItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            KeyItemId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CrateItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            KeyItemId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCUnlockCrateResponse : pb::IMessage<CMsgClientToGCUnlockCrateResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCUnlockCrateResponse> _parser = new pb::MessageParser<CMsgClientToGCUnlockCrateResponse>(() => new CMsgClientToGCUnlockCrateResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCUnlockCrateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnlockCrateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnlockCrateResponse(CMsgClientToGCUnlockCrateResponse other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      grantedItems_ = other.grantedItems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCUnlockCrateResponse Clone() {
      return new CMsgClientToGCUnlockCrateResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Steam.Protos.Dota2.EGCMsgResponse ResultDefaultValue = global::Steam.Protos.Dota2.EGCMsgResponse.KEgcmsgResponseOk;

    private global::Steam.Protos.Dota2.EGCMsgResponse result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.EGCMsgResponse Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "granted_items" field.</summary>
    public const int GrantedItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgClientToGCUnlockCrateResponse.Types.Item> _repeated_grantedItems_codec
        = pb::FieldCodec.ForMessage(18, global::Steam.Protos.Dota2.CMsgClientToGCUnlockCrateResponse.Types.Item.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCUnlockCrateResponse.Types.Item> grantedItems_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCUnlockCrateResponse.Types.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCUnlockCrateResponse.Types.Item> GrantedItems {
      get { return grantedItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCUnlockCrateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCUnlockCrateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!grantedItems_.Equals(other.grantedItems_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      hash ^= grantedItems_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      grantedItems_.WriteTo(output, _repeated_grantedItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      grantedItems_.WriteTo(ref output, _repeated_grantedItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += grantedItems_.CalculateSize(_repeated_grantedItems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCUnlockCrateResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      grantedItems_.Add(other.grantedItems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Steam.Protos.Dota2.EGCMsgResponse) input.ReadEnum();
            break;
          }
          case 18: {
            grantedItems_.AddEntriesFrom(input, _repeated_grantedItems_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Steam.Protos.Dota2.EGCMsgResponse) input.ReadEnum();
            break;
          }
          case 18: {
            grantedItems_.AddEntriesFrom(ref input, _repeated_grantedItems_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgClientToGCUnlockCrateResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Item : pb::IMessage<Item>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Item> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgClientToGCUnlockCrateResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item(Item other) : this() {
          _hasBits0 = other._hasBits0;
          itemId_ = other.itemId_;
          defIndex_ = other.defIndex_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item Clone() {
          return new Item(this);
        }

        /// <summary>Field number for the "item_id" field.</summary>
        public const int ItemIdFieldNumber = 1;
        private readonly static ulong ItemIdDefaultValue = 0UL;

        private ulong itemId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ItemId {
          get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            itemId_ = value;
          }
        }
        /// <summary>Gets whether the "item_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasItemId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "item_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearItemId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "def_index" field.</summary>
        public const int DefIndexFieldNumber = 2;
        private readonly static uint DefIndexDefaultValue = 0;

        private uint defIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint DefIndex {
          get { if ((_hasBits0 & 2) != 0) { return defIndex_; } else { return DefIndexDefaultValue; } }
          set {
            _hasBits0 |= 2;
            defIndex_ = value;
          }
        }
        /// <summary>Gets whether the "def_index" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasDefIndex {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "def_index" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearDefIndex() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Item);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Item other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ItemId != other.ItemId) return false;
          if (DefIndex != other.DefIndex) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasItemId) hash ^= ItemId.GetHashCode();
          if (HasDefIndex) hash ^= DefIndex.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasItemId) {
            output.WriteRawTag(8);
            output.WriteUInt64(ItemId);
          }
          if (HasDefIndex) {
            output.WriteRawTag(16);
            output.WriteUInt32(DefIndex);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasItemId) {
            output.WriteRawTag(8);
            output.WriteUInt64(ItemId);
          }
          if (HasDefIndex) {
            output.WriteRawTag(16);
            output.WriteUInt32(DefIndex);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasItemId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
          }
          if (HasDefIndex) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DefIndex);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Item other) {
          if (other == null) {
            return;
          }
          if (other.HasItemId) {
            ItemId = other.ItemId;
          }
          if (other.HasDefIndex) {
            DefIndex = other.DefIndex;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ItemId = input.ReadUInt64();
                break;
              }
              case 16: {
                DefIndex = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ItemId = input.ReadUInt64();
                break;
              }
              case 16: {
                DefIndex = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgClientToGCRemoveItemAttribute : pb::IMessage<CMsgClientToGCRemoveItemAttribute>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCRemoveItemAttribute> _parser = new pb::MessageParser<CMsgClientToGCRemoveItemAttribute>(() => new CMsgClientToGCRemoveItemAttribute());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCRemoveItemAttribute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCRemoveItemAttribute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCRemoveItemAttribute(CMsgClientToGCRemoveItemAttribute other) : this() {
      _hasBits0 = other._hasBits0;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCRemoveItemAttribute Clone() {
      return new CMsgClientToGCRemoveItemAttribute(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCRemoveItemAttribute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCRemoveItemAttribute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCRemoveItemAttribute other) {
      if (other == null) {
        return;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCRemoveItemAttributeResponse : pb::IMessage<CMsgClientToGCRemoveItemAttributeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCRemoveItemAttributeResponse> _parser = new pb::MessageParser<CMsgClientToGCRemoveItemAttributeResponse>(() => new CMsgClientToGCRemoveItemAttributeResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCRemoveItemAttributeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCRemoveItemAttributeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCRemoveItemAttributeResponse(CMsgClientToGCRemoveItemAttributeResponse other) : this() {
      _hasBits0 = other._hasBits0;
      response_ = other.response_;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCRemoveItemAttributeResponse Clone() {
      return new CMsgClientToGCRemoveItemAttributeResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private readonly static global::Steam.Protos.Dota2.CMsgClientToGCRemoveItemAttributeResponse.Types.ERemoveItemAttribute ResponseDefaultValue = global::Steam.Protos.Dota2.CMsgClientToGCRemoveItemAttributeResponse.Types.ERemoveItemAttribute.KRemoveItemAttributeSucceeded;

    private global::Steam.Protos.Dota2.CMsgClientToGCRemoveItemAttributeResponse.Types.ERemoveItemAttribute response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CMsgClientToGCRemoveItemAttributeResponse.Types.ERemoveItemAttribute Response {
      get { if ((_hasBits0 & 1) != 0) { return response_; } else { return ResponseDefaultValue; } }
      set {
        _hasBits0 |= 1;
        response_ = value;
      }
    }
    /// <summary>Gets whether the "response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponse {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 2) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCRemoveItemAttributeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCRemoveItemAttributeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Response != other.Response) return false;
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResponse) hash ^= Response.GetHashCode();
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Response);
      }
      if (HasItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Response);
      }
      if (HasItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResponse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Response);
      }
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCRemoveItemAttributeResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResponse) {
        Response = other.Response;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Response = (global::Steam.Protos.Dota2.CMsgClientToGCRemoveItemAttributeResponse.Types.ERemoveItemAttribute) input.ReadEnum();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Response = (global::Steam.Protos.Dota2.CMsgClientToGCRemoveItemAttributeResponse.Types.ERemoveItemAttribute) input.ReadEnum();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgClientToGCRemoveItemAttributeResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ERemoveItemAttribute {
        [pbr::OriginalName("k_RemoveItemAttribute_Succeeded")] KRemoveItemAttributeSucceeded = 0,
        [pbr::OriginalName("k_RemoveItemAttribute_Failed")] KRemoveItemAttributeFailed = 1,
        [pbr::OriginalName("k_RemoveItemAttribute_Failed_ItemIsInvalid")] KRemoveItemAttributeFailedItemIsInvalid = 2,
        [pbr::OriginalName("k_RemoveItemAttribute_Failed_AttributeCannotBeRemoved")] KRemoveItemAttributeFailedAttributeCannotBeRemoved = 3,
        [pbr::OriginalName("k_RemoveItemAttribute_Failed_AttributeDoesntExist")] KRemoveItemAttributeFailedAttributeDoesntExist = 4,
      }

    }
    #endregion

  }

  public sealed partial class CMsgClientToGCNameItem : pb::IMessage<CMsgClientToGCNameItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCNameItem> _parser = new pb::MessageParser<CMsgClientToGCNameItem>(() => new CMsgClientToGCNameItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCNameItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCNameItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCNameItem(CMsgClientToGCNameItem other) : this() {
      _hasBits0 = other._hasBits0;
      subjectItemId_ = other.subjectItemId_;
      toolItemId_ = other.toolItemId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCNameItem Clone() {
      return new CMsgClientToGCNameItem(this);
    }

    /// <summary>Field number for the "subject_item_id" field.</summary>
    public const int SubjectItemIdFieldNumber = 1;
    private readonly static ulong SubjectItemIdDefaultValue = 0UL;

    private ulong subjectItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SubjectItemId {
      get { if ((_hasBits0 & 1) != 0) { return subjectItemId_; } else { return SubjectItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        subjectItemId_ = value;
      }
    }
    /// <summary>Gets whether the "subject_item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubjectItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "subject_item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubjectItemId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "tool_item_id" field.</summary>
    public const int ToolItemIdFieldNumber = 2;
    private readonly static ulong ToolItemIdDefaultValue = 0UL;

    private ulong toolItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ToolItemId {
      get { if ((_hasBits0 & 2) != 0) { return toolItemId_; } else { return ToolItemIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        toolItemId_ = value;
      }
    }
    /// <summary>Gets whether the "tool_item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasToolItemId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "tool_item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearToolItemId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCNameItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCNameItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubjectItemId != other.SubjectItemId) return false;
      if (ToolItemId != other.ToolItemId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSubjectItemId) hash ^= SubjectItemId.GetHashCode();
      if (HasToolItemId) hash ^= ToolItemId.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSubjectItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(SubjectItemId);
      }
      if (HasToolItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToolItemId);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSubjectItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(SubjectItemId);
      }
      if (HasToolItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ToolItemId);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSubjectItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SubjectItemId);
      }
      if (HasToolItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ToolItemId);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCNameItem other) {
      if (other == null) {
        return;
      }
      if (other.HasSubjectItemId) {
        SubjectItemId = other.SubjectItemId;
      }
      if (other.HasToolItemId) {
        ToolItemId = other.ToolItemId;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SubjectItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToolItemId = input.ReadUInt64();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SubjectItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            ToolItemId = input.ReadUInt64();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCNameItemResponse : pb::IMessage<CMsgClientToGCNameItemResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCNameItemResponse> _parser = new pb::MessageParser<CMsgClientToGCNameItemResponse>(() => new CMsgClientToGCNameItemResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCNameItemResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCNameItemResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCNameItemResponse(CMsgClientToGCNameItemResponse other) : this() {
      _hasBits0 = other._hasBits0;
      response_ = other.response_;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCNameItemResponse Clone() {
      return new CMsgClientToGCNameItemResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private readonly static global::Steam.Protos.Dota2.CMsgClientToGCNameItemResponse.Types.ENameItem ResponseDefaultValue = global::Steam.Protos.Dota2.CMsgClientToGCNameItemResponse.Types.ENameItem.KNameItemSucceeded;

    private global::Steam.Protos.Dota2.CMsgClientToGCNameItemResponse.Types.ENameItem response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CMsgClientToGCNameItemResponse.Types.ENameItem Response {
      get { if ((_hasBits0 & 1) != 0) { return response_; } else { return ResponseDefaultValue; } }
      set {
        _hasBits0 |= 1;
        response_ = value;
      }
    }
    /// <summary>Gets whether the "response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponse {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 2) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCNameItemResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCNameItemResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Response != other.Response) return false;
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResponse) hash ^= Response.GetHashCode();
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Response);
      }
      if (HasItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Response);
      }
      if (HasItemId) {
        output.WriteRawTag(16);
        output.WriteUInt64(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResponse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Response);
      }
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCNameItemResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResponse) {
        Response = other.Response;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Response = (global::Steam.Protos.Dota2.CMsgClientToGCNameItemResponse.Types.ENameItem) input.ReadEnum();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Response = (global::Steam.Protos.Dota2.CMsgClientToGCNameItemResponse.Types.ENameItem) input.ReadEnum();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgClientToGCNameItemResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ENameItem {
        [pbr::OriginalName("k_NameItem_Succeeded")] KNameItemSucceeded = 0,
        [pbr::OriginalName("k_NameItem_Failed")] KNameItemFailed = 1,
        [pbr::OriginalName("k_NameItem_Failed_ToolIsInvalid")] KNameItemFailedToolIsInvalid = 2,
        [pbr::OriginalName("k_NameItem_Failed_ItemIsInvalid")] KNameItemFailedItemIsInvalid = 3,
        [pbr::OriginalName("k_NameItem_Failed_NameIsInvalid")] KNameItemFailedNameIsInvalid = 4,
      }

    }
    #endregion

  }

  public sealed partial class CMsgGCSetItemPosition : pb::IMessage<CMsgGCSetItemPosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCSetItemPosition> _parser = new pb::MessageParser<CMsgGCSetItemPosition>(() => new CMsgGCSetItemPosition());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCSetItemPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCSetItemPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCSetItemPosition(CMsgGCSetItemPosition other) : this() {
      _hasBits0 = other._hasBits0;
      itemId_ = other.itemId_;
      newPosition_ = other.newPosition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCSetItemPosition Clone() {
      return new CMsgGCSetItemPosition(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "new_position" field.</summary>
    public const int NewPositionFieldNumber = 2;
    private readonly static uint NewPositionDefaultValue = 0;

    private uint newPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NewPosition {
      get { if ((_hasBits0 & 2) != 0) { return newPosition_; } else { return NewPositionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        newPosition_ = value;
      }
    }
    /// <summary>Gets whether the "new_position" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNewPosition {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "new_position" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNewPosition() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCSetItemPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCSetItemPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (NewPosition != other.NewPosition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (HasNewPosition) hash ^= NewPosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (HasNewPosition) {
        output.WriteRawTag(16);
        output.WriteUInt32(NewPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (HasNewPosition) {
        output.WriteRawTag(16);
        output.WriteUInt32(NewPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (HasNewPosition) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NewPosition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCSetItemPosition other) {
      if (other == null) {
        return;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasNewPosition) {
        NewPosition = other.NewPosition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            NewPosition = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            NewPosition = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CAttribute_ItemDynamicRecipeComponent : pb::IMessage<CAttribute_ItemDynamicRecipeComponent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CAttribute_ItemDynamicRecipeComponent> _parser = new pb::MessageParser<CAttribute_ItemDynamicRecipeComponent>(() => new CAttribute_ItemDynamicRecipeComponent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CAttribute_ItemDynamicRecipeComponent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CAttribute_ItemDynamicRecipeComponent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CAttribute_ItemDynamicRecipeComponent(CAttribute_ItemDynamicRecipeComponent other) : this() {
      _hasBits0 = other._hasBits0;
      itemDef_ = other.itemDef_;
      itemQuality_ = other.itemQuality_;
      itemFlags_ = other.itemFlags_;
      attributesString_ = other.attributesString_;
      itemCount_ = other.itemCount_;
      itemsFulfilled_ = other.itemsFulfilled_;
      itemRarity_ = other.itemRarity_;
      lootlist_ = other.lootlist_;
      fulfilledItemId_ = other.fulfilledItemId_;
      associatedItemDef_ = other.associatedItemDef_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CAttribute_ItemDynamicRecipeComponent Clone() {
      return new CAttribute_ItemDynamicRecipeComponent(this);
    }

    /// <summary>Field number for the "item_def" field.</summary>
    public const int ItemDefFieldNumber = 1;
    private readonly static uint ItemDefDefaultValue = 0;

    private uint itemDef_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemDef {
      get { if ((_hasBits0 & 1) != 0) { return itemDef_; } else { return ItemDefDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemDef_ = value;
      }
    }
    /// <summary>Gets whether the "item_def" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemDef {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_def" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemDef() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_quality" field.</summary>
    public const int ItemQualityFieldNumber = 2;
    private readonly static uint ItemQualityDefaultValue = 0;

    private uint itemQuality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemQuality {
      get { if ((_hasBits0 & 2) != 0) { return itemQuality_; } else { return ItemQualityDefaultValue; } }
      set {
        _hasBits0 |= 2;
        itemQuality_ = value;
      }
    }
    /// <summary>Gets whether the "item_quality" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemQuality {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "item_quality" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemQuality() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "item_flags" field.</summary>
    public const int ItemFlagsFieldNumber = 3;
    private readonly static uint ItemFlagsDefaultValue = 0;

    private uint itemFlags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemFlags {
      get { if ((_hasBits0 & 4) != 0) { return itemFlags_; } else { return ItemFlagsDefaultValue; } }
      set {
        _hasBits0 |= 4;
        itemFlags_ = value;
      }
    }
    /// <summary>Gets whether the "item_flags" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemFlags {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "item_flags" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemFlags() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "attributes_string" field.</summary>
    public const int AttributesStringFieldNumber = 4;
    private readonly static string AttributesStringDefaultValue = "";

    private string attributesString_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AttributesString {
      get { return attributesString_ ?? AttributesStringDefaultValue; }
      set {
        attributesString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "attributes_string" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAttributesString {
      get { return attributesString_ != null; }
    }
    /// <summary>Clears the value of the "attributes_string" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAttributesString() {
      attributesString_ = null;
    }

    /// <summary>Field number for the "item_count" field.</summary>
    public const int ItemCountFieldNumber = 5;
    private readonly static uint ItemCountDefaultValue = 0;

    private uint itemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemCount {
      get { if ((_hasBits0 & 8) != 0) { return itemCount_; } else { return ItemCountDefaultValue; } }
      set {
        _hasBits0 |= 8;
        itemCount_ = value;
      }
    }
    /// <summary>Gets whether the "item_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemCount {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "item_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemCount() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "items_fulfilled" field.</summary>
    public const int ItemsFulfilledFieldNumber = 6;
    private readonly static uint ItemsFulfilledDefaultValue = 0;

    private uint itemsFulfilled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemsFulfilled {
      get { if ((_hasBits0 & 16) != 0) { return itemsFulfilled_; } else { return ItemsFulfilledDefaultValue; } }
      set {
        _hasBits0 |= 16;
        itemsFulfilled_ = value;
      }
    }
    /// <summary>Gets whether the "items_fulfilled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemsFulfilled {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "items_fulfilled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemsFulfilled() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "item_rarity" field.</summary>
    public const int ItemRarityFieldNumber = 7;
    private readonly static uint ItemRarityDefaultValue = 0;

    private uint itemRarity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemRarity {
      get { if ((_hasBits0 & 32) != 0) { return itemRarity_; } else { return ItemRarityDefaultValue; } }
      set {
        _hasBits0 |= 32;
        itemRarity_ = value;
      }
    }
    /// <summary>Gets whether the "item_rarity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemRarity {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "item_rarity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemRarity() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "lootlist" field.</summary>
    public const int LootlistFieldNumber = 8;
    private readonly static string LootlistDefaultValue = "";

    private string lootlist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lootlist {
      get { return lootlist_ ?? LootlistDefaultValue; }
      set {
        lootlist_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "lootlist" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLootlist {
      get { return lootlist_ != null; }
    }
    /// <summary>Clears the value of the "lootlist" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLootlist() {
      lootlist_ = null;
    }

    /// <summary>Field number for the "fulfilled_item_id" field.</summary>
    public const int FulfilledItemIdFieldNumber = 9;
    private readonly static ulong FulfilledItemIdDefaultValue = 0UL;

    private ulong fulfilledItemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong FulfilledItemId {
      get { if ((_hasBits0 & 64) != 0) { return fulfilledItemId_; } else { return FulfilledItemIdDefaultValue; } }
      set {
        _hasBits0 |= 64;
        fulfilledItemId_ = value;
      }
    }
    /// <summary>Gets whether the "fulfilled_item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasFulfilledItemId {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "fulfilled_item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFulfilledItemId() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "associated_item_def" field.</summary>
    public const int AssociatedItemDefFieldNumber = 10;
    private readonly static uint AssociatedItemDefDefaultValue = 0;

    private uint associatedItemDef_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AssociatedItemDef {
      get { if ((_hasBits0 & 128) != 0) { return associatedItemDef_; } else { return AssociatedItemDefDefaultValue; } }
      set {
        _hasBits0 |= 128;
        associatedItemDef_ = value;
      }
    }
    /// <summary>Gets whether the "associated_item_def" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssociatedItemDef {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "associated_item_def" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssociatedItemDef() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CAttribute_ItemDynamicRecipeComponent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CAttribute_ItemDynamicRecipeComponent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemDef != other.ItemDef) return false;
      if (ItemQuality != other.ItemQuality) return false;
      if (ItemFlags != other.ItemFlags) return false;
      if (AttributesString != other.AttributesString) return false;
      if (ItemCount != other.ItemCount) return false;
      if (ItemsFulfilled != other.ItemsFulfilled) return false;
      if (ItemRarity != other.ItemRarity) return false;
      if (Lootlist != other.Lootlist) return false;
      if (FulfilledItemId != other.FulfilledItemId) return false;
      if (AssociatedItemDef != other.AssociatedItemDef) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemDef) hash ^= ItemDef.GetHashCode();
      if (HasItemQuality) hash ^= ItemQuality.GetHashCode();
      if (HasItemFlags) hash ^= ItemFlags.GetHashCode();
      if (HasAttributesString) hash ^= AttributesString.GetHashCode();
      if (HasItemCount) hash ^= ItemCount.GetHashCode();
      if (HasItemsFulfilled) hash ^= ItemsFulfilled.GetHashCode();
      if (HasItemRarity) hash ^= ItemRarity.GetHashCode();
      if (HasLootlist) hash ^= Lootlist.GetHashCode();
      if (HasFulfilledItemId) hash ^= FulfilledItemId.GetHashCode();
      if (HasAssociatedItemDef) hash ^= AssociatedItemDef.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemDef) {
        output.WriteRawTag(8);
        output.WriteUInt32(ItemDef);
      }
      if (HasItemQuality) {
        output.WriteRawTag(16);
        output.WriteUInt32(ItemQuality);
      }
      if (HasItemFlags) {
        output.WriteRawTag(24);
        output.WriteUInt32(ItemFlags);
      }
      if (HasAttributesString) {
        output.WriteRawTag(34);
        output.WriteString(AttributesString);
      }
      if (HasItemCount) {
        output.WriteRawTag(40);
        output.WriteUInt32(ItemCount);
      }
      if (HasItemsFulfilled) {
        output.WriteRawTag(48);
        output.WriteUInt32(ItemsFulfilled);
      }
      if (HasItemRarity) {
        output.WriteRawTag(56);
        output.WriteUInt32(ItemRarity);
      }
      if (HasLootlist) {
        output.WriteRawTag(66);
        output.WriteString(Lootlist);
      }
      if (HasFulfilledItemId) {
        output.WriteRawTag(72);
        output.WriteUInt64(FulfilledItemId);
      }
      if (HasAssociatedItemDef) {
        output.WriteRawTag(80);
        output.WriteUInt32(AssociatedItemDef);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemDef) {
        output.WriteRawTag(8);
        output.WriteUInt32(ItemDef);
      }
      if (HasItemQuality) {
        output.WriteRawTag(16);
        output.WriteUInt32(ItemQuality);
      }
      if (HasItemFlags) {
        output.WriteRawTag(24);
        output.WriteUInt32(ItemFlags);
      }
      if (HasAttributesString) {
        output.WriteRawTag(34);
        output.WriteString(AttributesString);
      }
      if (HasItemCount) {
        output.WriteRawTag(40);
        output.WriteUInt32(ItemCount);
      }
      if (HasItemsFulfilled) {
        output.WriteRawTag(48);
        output.WriteUInt32(ItemsFulfilled);
      }
      if (HasItemRarity) {
        output.WriteRawTag(56);
        output.WriteUInt32(ItemRarity);
      }
      if (HasLootlist) {
        output.WriteRawTag(66);
        output.WriteString(Lootlist);
      }
      if (HasFulfilledItemId) {
        output.WriteRawTag(72);
        output.WriteUInt64(FulfilledItemId);
      }
      if (HasAssociatedItemDef) {
        output.WriteRawTag(80);
        output.WriteUInt32(AssociatedItemDef);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemDef) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemDef);
      }
      if (HasItemQuality) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemQuality);
      }
      if (HasItemFlags) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemFlags);
      }
      if (HasAttributesString) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AttributesString);
      }
      if (HasItemCount) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemCount);
      }
      if (HasItemsFulfilled) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemsFulfilled);
      }
      if (HasItemRarity) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemRarity);
      }
      if (HasLootlist) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lootlist);
      }
      if (HasFulfilledItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FulfilledItemId);
      }
      if (HasAssociatedItemDef) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AssociatedItemDef);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CAttribute_ItemDynamicRecipeComponent other) {
      if (other == null) {
        return;
      }
      if (other.HasItemDef) {
        ItemDef = other.ItemDef;
      }
      if (other.HasItemQuality) {
        ItemQuality = other.ItemQuality;
      }
      if (other.HasItemFlags) {
        ItemFlags = other.ItemFlags;
      }
      if (other.HasAttributesString) {
        AttributesString = other.AttributesString;
      }
      if (other.HasItemCount) {
        ItemCount = other.ItemCount;
      }
      if (other.HasItemsFulfilled) {
        ItemsFulfilled = other.ItemsFulfilled;
      }
      if (other.HasItemRarity) {
        ItemRarity = other.ItemRarity;
      }
      if (other.HasLootlist) {
        Lootlist = other.Lootlist;
      }
      if (other.HasFulfilledItemId) {
        FulfilledItemId = other.FulfilledItemId;
      }
      if (other.HasAssociatedItemDef) {
        AssociatedItemDef = other.AssociatedItemDef;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemDef = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemQuality = input.ReadUInt32();
            break;
          }
          case 24: {
            ItemFlags = input.ReadUInt32();
            break;
          }
          case 34: {
            AttributesString = input.ReadString();
            break;
          }
          case 40: {
            ItemCount = input.ReadUInt32();
            break;
          }
          case 48: {
            ItemsFulfilled = input.ReadUInt32();
            break;
          }
          case 56: {
            ItemRarity = input.ReadUInt32();
            break;
          }
          case 66: {
            Lootlist = input.ReadString();
            break;
          }
          case 72: {
            FulfilledItemId = input.ReadUInt64();
            break;
          }
          case 80: {
            AssociatedItemDef = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemDef = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemQuality = input.ReadUInt32();
            break;
          }
          case 24: {
            ItemFlags = input.ReadUInt32();
            break;
          }
          case 34: {
            AttributesString = input.ReadString();
            break;
          }
          case 40: {
            ItemCount = input.ReadUInt32();
            break;
          }
          case 48: {
            ItemsFulfilled = input.ReadUInt32();
            break;
          }
          case 56: {
            ItemRarity = input.ReadUInt32();
            break;
          }
          case 66: {
            Lootlist = input.ReadString();
            break;
          }
          case 72: {
            FulfilledItemId = input.ReadUInt64();
            break;
          }
          case 80: {
            AssociatedItemDef = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CProtoItemSocket : pb::IMessage<CProtoItemSocket>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CProtoItemSocket> _parser = new pb::MessageParser<CProtoItemSocket>(() => new CProtoItemSocket());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CProtoItemSocket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket(CProtoItemSocket other) : this() {
      _hasBits0 = other._hasBits0;
      itemId_ = other.itemId_;
      attrDefIndex_ = other.attrDefIndex_;
      requiredType_ = other.requiredType_;
      requiredHero_ = other.requiredHero_;
      gemDefIndex_ = other.gemDefIndex_;
      notTradable_ = other.notTradable_;
      requiredItemSlot_ = other.requiredItemSlot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket Clone() {
      return new CProtoItemSocket(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private readonly static ulong ItemIdDefaultValue = 0UL;

    private ulong itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ItemId {
      get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "attr_def_index" field.</summary>
    public const int AttrDefIndexFieldNumber = 2;
    private readonly static uint AttrDefIndexDefaultValue = 0;

    private uint attrDefIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AttrDefIndex {
      get { if ((_hasBits0 & 2) != 0) { return attrDefIndex_; } else { return AttrDefIndexDefaultValue; } }
      set {
        _hasBits0 |= 2;
        attrDefIndex_ = value;
      }
    }
    /// <summary>Gets whether the "attr_def_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAttrDefIndex {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "attr_def_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAttrDefIndex() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "required_type" field.</summary>
    public const int RequiredTypeFieldNumber = 3;
    private readonly static uint RequiredTypeDefaultValue = 0;

    private uint requiredType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RequiredType {
      get { if ((_hasBits0 & 4) != 0) { return requiredType_; } else { return RequiredTypeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        requiredType_ = value;
      }
    }
    /// <summary>Gets whether the "required_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequiredType {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "required_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequiredType() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "required_hero" field.</summary>
    public const int RequiredHeroFieldNumber = 4;
    private readonly static string RequiredHeroDefaultValue = "";

    private string requiredHero_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequiredHero {
      get { return requiredHero_ ?? RequiredHeroDefaultValue; }
      set {
        requiredHero_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "required_hero" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequiredHero {
      get { return requiredHero_ != null; }
    }
    /// <summary>Clears the value of the "required_hero" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequiredHero() {
      requiredHero_ = null;
    }

    /// <summary>Field number for the "gem_def_index" field.</summary>
    public const int GemDefIndexFieldNumber = 5;
    private readonly static uint GemDefIndexDefaultValue = 0;

    private uint gemDefIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GemDefIndex {
      get { if ((_hasBits0 & 8) != 0) { return gemDefIndex_; } else { return GemDefIndexDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gemDefIndex_ = value;
      }
    }
    /// <summary>Gets whether the "gem_def_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGemDefIndex {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gem_def_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGemDefIndex() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "not_tradable" field.</summary>
    public const int NotTradableFieldNumber = 6;
    private readonly static bool NotTradableDefaultValue = false;

    private bool notTradable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NotTradable {
      get { if ((_hasBits0 & 16) != 0) { return notTradable_; } else { return NotTradableDefaultValue; } }
      set {
        _hasBits0 |= 16;
        notTradable_ = value;
      }
    }
    /// <summary>Gets whether the "not_tradable" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasNotTradable {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "not_tradable" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNotTradable() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "required_item_slot" field.</summary>
    public const int RequiredItemSlotFieldNumber = 7;
    private readonly static string RequiredItemSlotDefaultValue = "";

    private string requiredItemSlot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequiredItemSlot {
      get { return requiredItemSlot_ ?? RequiredItemSlotDefaultValue; }
      set {
        requiredItemSlot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "required_item_slot" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequiredItemSlot {
      get { return requiredItemSlot_ != null; }
    }
    /// <summary>Clears the value of the "required_item_slot" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequiredItemSlot() {
      requiredItemSlot_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CProtoItemSocket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CProtoItemSocket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (AttrDefIndex != other.AttrDefIndex) return false;
      if (RequiredType != other.RequiredType) return false;
      if (RequiredHero != other.RequiredHero) return false;
      if (GemDefIndex != other.GemDefIndex) return false;
      if (NotTradable != other.NotTradable) return false;
      if (RequiredItemSlot != other.RequiredItemSlot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (HasAttrDefIndex) hash ^= AttrDefIndex.GetHashCode();
      if (HasRequiredType) hash ^= RequiredType.GetHashCode();
      if (HasRequiredHero) hash ^= RequiredHero.GetHashCode();
      if (HasGemDefIndex) hash ^= GemDefIndex.GetHashCode();
      if (HasNotTradable) hash ^= NotTradable.GetHashCode();
      if (HasRequiredItemSlot) hash ^= RequiredItemSlot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (HasAttrDefIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(AttrDefIndex);
      }
      if (HasRequiredType) {
        output.WriteRawTag(24);
        output.WriteUInt32(RequiredType);
      }
      if (HasRequiredHero) {
        output.WriteRawTag(34);
        output.WriteString(RequiredHero);
      }
      if (HasGemDefIndex) {
        output.WriteRawTag(40);
        output.WriteUInt32(GemDefIndex);
      }
      if (HasNotTradable) {
        output.WriteRawTag(48);
        output.WriteBool(NotTradable);
      }
      if (HasRequiredItemSlot) {
        output.WriteRawTag(58);
        output.WriteString(RequiredItemSlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemId) {
        output.WriteRawTag(8);
        output.WriteUInt64(ItemId);
      }
      if (HasAttrDefIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(AttrDefIndex);
      }
      if (HasRequiredType) {
        output.WriteRawTag(24);
        output.WriteUInt32(RequiredType);
      }
      if (HasRequiredHero) {
        output.WriteRawTag(34);
        output.WriteString(RequiredHero);
      }
      if (HasGemDefIndex) {
        output.WriteRawTag(40);
        output.WriteUInt32(GemDefIndex);
      }
      if (HasNotTradable) {
        output.WriteRawTag(48);
        output.WriteBool(NotTradable);
      }
      if (HasRequiredItemSlot) {
        output.WriteRawTag(58);
        output.WriteString(RequiredItemSlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
      }
      if (HasAttrDefIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AttrDefIndex);
      }
      if (HasRequiredType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RequiredType);
      }
      if (HasRequiredHero) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequiredHero);
      }
      if (HasGemDefIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GemDefIndex);
      }
      if (HasNotTradable) {
        size += 1 + 1;
      }
      if (HasRequiredItemSlot) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequiredItemSlot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CProtoItemSocket other) {
      if (other == null) {
        return;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasAttrDefIndex) {
        AttrDefIndex = other.AttrDefIndex;
      }
      if (other.HasRequiredType) {
        RequiredType = other.RequiredType;
      }
      if (other.HasRequiredHero) {
        RequiredHero = other.RequiredHero;
      }
      if (other.HasGemDefIndex) {
        GemDefIndex = other.GemDefIndex;
      }
      if (other.HasNotTradable) {
        NotTradable = other.NotTradable;
      }
      if (other.HasRequiredItemSlot) {
        RequiredItemSlot = other.RequiredItemSlot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            AttrDefIndex = input.ReadUInt32();
            break;
          }
          case 24: {
            RequiredType = input.ReadUInt32();
            break;
          }
          case 34: {
            RequiredHero = input.ReadString();
            break;
          }
          case 40: {
            GemDefIndex = input.ReadUInt32();
            break;
          }
          case 48: {
            NotTradable = input.ReadBool();
            break;
          }
          case 58: {
            RequiredItemSlot = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadUInt64();
            break;
          }
          case 16: {
            AttrDefIndex = input.ReadUInt32();
            break;
          }
          case 24: {
            RequiredType = input.ReadUInt32();
            break;
          }
          case 34: {
            RequiredHero = input.ReadString();
            break;
          }
          case 40: {
            GemDefIndex = input.ReadUInt32();
            break;
          }
          case 48: {
            NotTradable = input.ReadBool();
            break;
          }
          case 58: {
            RequiredItemSlot = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CProtoItemSocket_Empty : pb::IMessage<CProtoItemSocket_Empty>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CProtoItemSocket_Empty> _parser = new pb::MessageParser<CProtoItemSocket_Empty>(() => new CProtoItemSocket_Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CProtoItemSocket_Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Empty(CProtoItemSocket_Empty other) : this() {
      socket_ = other.socket_ != null ? other.socket_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Empty Clone() {
      return new CProtoItemSocket_Empty(this);
    }

    /// <summary>Field number for the "socket" field.</summary>
    public const int SocketFieldNumber = 1;
    private global::Steam.Protos.Dota2.CProtoItemSocket socket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CProtoItemSocket Socket {
      get { return socket_; }
      set {
        socket_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CProtoItemSocket_Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CProtoItemSocket_Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Socket, other.Socket)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (socket_ != null) hash ^= Socket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (socket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Socket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CProtoItemSocket_Empty other) {
      if (other == null) {
        return;
      }
      if (other.socket_ != null) {
        if (socket_ == null) {
          Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
        }
        Socket.MergeFrom(other.Socket);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CProtoItemSocket_Effect : pb::IMessage<CProtoItemSocket_Effect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CProtoItemSocket_Effect> _parser = new pb::MessageParser<CProtoItemSocket_Effect>(() => new CProtoItemSocket_Effect());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CProtoItemSocket_Effect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Effect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Effect(CProtoItemSocket_Effect other) : this() {
      _hasBits0 = other._hasBits0;
      socket_ = other.socket_ != null ? other.socket_.Clone() : null;
      effect_ = other.effect_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Effect Clone() {
      return new CProtoItemSocket_Effect(this);
    }

    /// <summary>Field number for the "socket" field.</summary>
    public const int SocketFieldNumber = 1;
    private global::Steam.Protos.Dota2.CProtoItemSocket socket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CProtoItemSocket Socket {
      get { return socket_; }
      set {
        socket_ = value;
      }
    }

    /// <summary>Field number for the "effect" field.</summary>
    public const int EffectFieldNumber = 2;
    private readonly static uint EffectDefaultValue = 0;

    private uint effect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Effect {
      get { if ((_hasBits0 & 1) != 0) { return effect_; } else { return EffectDefaultValue; } }
      set {
        _hasBits0 |= 1;
        effect_ = value;
      }
    }
    /// <summary>Gets whether the "effect" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEffect {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "effect" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEffect() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CProtoItemSocket_Effect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CProtoItemSocket_Effect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Socket, other.Socket)) return false;
      if (Effect != other.Effect) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (socket_ != null) hash ^= Socket.GetHashCode();
      if (HasEffect) hash ^= Effect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasEffect) {
        output.WriteRawTag(16);
        output.WriteUInt32(Effect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasEffect) {
        output.WriteRawTag(16);
        output.WriteUInt32(Effect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (socket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Socket);
      }
      if (HasEffect) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Effect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CProtoItemSocket_Effect other) {
      if (other == null) {
        return;
      }
      if (other.socket_ != null) {
        if (socket_ == null) {
          Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
        }
        Socket.MergeFrom(other.Socket);
      }
      if (other.HasEffect) {
        Effect = other.Effect;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 16: {
            Effect = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 16: {
            Effect = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CProtoItemSocket_Color : pb::IMessage<CProtoItemSocket_Color>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CProtoItemSocket_Color> _parser = new pb::MessageParser<CProtoItemSocket_Color>(() => new CProtoItemSocket_Color());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CProtoItemSocket_Color> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Color() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Color(CProtoItemSocket_Color other) : this() {
      _hasBits0 = other._hasBits0;
      socket_ = other.socket_ != null ? other.socket_.Clone() : null;
      red_ = other.red_;
      green_ = other.green_;
      blue_ = other.blue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Color Clone() {
      return new CProtoItemSocket_Color(this);
    }

    /// <summary>Field number for the "socket" field.</summary>
    public const int SocketFieldNumber = 1;
    private global::Steam.Protos.Dota2.CProtoItemSocket socket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CProtoItemSocket Socket {
      get { return socket_; }
      set {
        socket_ = value;
      }
    }

    /// <summary>Field number for the "red" field.</summary>
    public const int RedFieldNumber = 2;
    private readonly static uint RedDefaultValue = 0;

    private uint red_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Red {
      get { if ((_hasBits0 & 1) != 0) { return red_; } else { return RedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        red_ = value;
      }
    }
    /// <summary>Gets whether the "red" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRed {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "red" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRed() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "green" field.</summary>
    public const int GreenFieldNumber = 3;
    private readonly static uint GreenDefaultValue = 0;

    private uint green_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Green {
      get { if ((_hasBits0 & 2) != 0) { return green_; } else { return GreenDefaultValue; } }
      set {
        _hasBits0 |= 2;
        green_ = value;
      }
    }
    /// <summary>Gets whether the "green" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGreen {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "green" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGreen() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "blue" field.</summary>
    public const int BlueFieldNumber = 4;
    private readonly static uint BlueDefaultValue = 0;

    private uint blue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Blue {
      get { if ((_hasBits0 & 4) != 0) { return blue_; } else { return BlueDefaultValue; } }
      set {
        _hasBits0 |= 4;
        blue_ = value;
      }
    }
    /// <summary>Gets whether the "blue" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBlue {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "blue" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBlue() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CProtoItemSocket_Color);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CProtoItemSocket_Color other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Socket, other.Socket)) return false;
      if (Red != other.Red) return false;
      if (Green != other.Green) return false;
      if (Blue != other.Blue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (socket_ != null) hash ^= Socket.GetHashCode();
      if (HasRed) hash ^= Red.GetHashCode();
      if (HasGreen) hash ^= Green.GetHashCode();
      if (HasBlue) hash ^= Blue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasRed) {
        output.WriteRawTag(16);
        output.WriteUInt32(Red);
      }
      if (HasGreen) {
        output.WriteRawTag(24);
        output.WriteUInt32(Green);
      }
      if (HasBlue) {
        output.WriteRawTag(32);
        output.WriteUInt32(Blue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasRed) {
        output.WriteRawTag(16);
        output.WriteUInt32(Red);
      }
      if (HasGreen) {
        output.WriteRawTag(24);
        output.WriteUInt32(Green);
      }
      if (HasBlue) {
        output.WriteRawTag(32);
        output.WriteUInt32(Blue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (socket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Socket);
      }
      if (HasRed) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Red);
      }
      if (HasGreen) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Green);
      }
      if (HasBlue) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Blue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CProtoItemSocket_Color other) {
      if (other == null) {
        return;
      }
      if (other.socket_ != null) {
        if (socket_ == null) {
          Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
        }
        Socket.MergeFrom(other.Socket);
      }
      if (other.HasRed) {
        Red = other.Red;
      }
      if (other.HasGreen) {
        Green = other.Green;
      }
      if (other.HasBlue) {
        Blue = other.Blue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 16: {
            Red = input.ReadUInt32();
            break;
          }
          case 24: {
            Green = input.ReadUInt32();
            break;
          }
          case 32: {
            Blue = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 16: {
            Red = input.ReadUInt32();
            break;
          }
          case 24: {
            Green = input.ReadUInt32();
            break;
          }
          case 32: {
            Blue = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CProtoItemSocket_Strange : pb::IMessage<CProtoItemSocket_Strange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CProtoItemSocket_Strange> _parser = new pb::MessageParser<CProtoItemSocket_Strange>(() => new CProtoItemSocket_Strange());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CProtoItemSocket_Strange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Strange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Strange(CProtoItemSocket_Strange other) : this() {
      _hasBits0 = other._hasBits0;
      socket_ = other.socket_ != null ? other.socket_.Clone() : null;
      strangeType_ = other.strangeType_;
      strangeValue_ = other.strangeValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Strange Clone() {
      return new CProtoItemSocket_Strange(this);
    }

    /// <summary>Field number for the "socket" field.</summary>
    public const int SocketFieldNumber = 1;
    private global::Steam.Protos.Dota2.CProtoItemSocket socket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CProtoItemSocket Socket {
      get { return socket_; }
      set {
        socket_ = value;
      }
    }

    /// <summary>Field number for the "strange_type" field.</summary>
    public const int StrangeTypeFieldNumber = 2;
    private readonly static uint StrangeTypeDefaultValue = 0;

    private uint strangeType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StrangeType {
      get { if ((_hasBits0 & 1) != 0) { return strangeType_; } else { return StrangeTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        strangeType_ = value;
      }
    }
    /// <summary>Gets whether the "strange_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStrangeType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "strange_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStrangeType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "strange_value" field.</summary>
    public const int StrangeValueFieldNumber = 3;
    private readonly static uint StrangeValueDefaultValue = 0;

    private uint strangeValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StrangeValue {
      get { if ((_hasBits0 & 2) != 0) { return strangeValue_; } else { return StrangeValueDefaultValue; } }
      set {
        _hasBits0 |= 2;
        strangeValue_ = value;
      }
    }
    /// <summary>Gets whether the "strange_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStrangeValue {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "strange_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStrangeValue() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CProtoItemSocket_Strange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CProtoItemSocket_Strange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Socket, other.Socket)) return false;
      if (StrangeType != other.StrangeType) return false;
      if (StrangeValue != other.StrangeValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (socket_ != null) hash ^= Socket.GetHashCode();
      if (HasStrangeType) hash ^= StrangeType.GetHashCode();
      if (HasStrangeValue) hash ^= StrangeValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasStrangeType) {
        output.WriteRawTag(16);
        output.WriteUInt32(StrangeType);
      }
      if (HasStrangeValue) {
        output.WriteRawTag(24);
        output.WriteUInt32(StrangeValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasStrangeType) {
        output.WriteRawTag(16);
        output.WriteUInt32(StrangeType);
      }
      if (HasStrangeValue) {
        output.WriteRawTag(24);
        output.WriteUInt32(StrangeValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (socket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Socket);
      }
      if (HasStrangeType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StrangeType);
      }
      if (HasStrangeValue) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StrangeValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CProtoItemSocket_Strange other) {
      if (other == null) {
        return;
      }
      if (other.socket_ != null) {
        if (socket_ == null) {
          Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
        }
        Socket.MergeFrom(other.Socket);
      }
      if (other.HasStrangeType) {
        StrangeType = other.StrangeType;
      }
      if (other.HasStrangeValue) {
        StrangeValue = other.StrangeValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 16: {
            StrangeType = input.ReadUInt32();
            break;
          }
          case 24: {
            StrangeValue = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 16: {
            StrangeType = input.ReadUInt32();
            break;
          }
          case 24: {
            StrangeValue = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY : pb::IMessage<CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY> _parser = new pb::MessageParser<CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY>(() => new CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY(CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY other) : this() {
      _hasBits0 = other._hasBits0;
      socket_ = other.socket_ != null ? other.socket_.Clone() : null;
      strangeType_ = other.strangeType_;
      strangeValue_ = other.strangeValue_;
      abilityEffect_ = other.abilityEffect_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY Clone() {
      return new CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY(this);
    }

    /// <summary>Field number for the "socket" field.</summary>
    public const int SocketFieldNumber = 1;
    private global::Steam.Protos.Dota2.CProtoItemSocket socket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CProtoItemSocket Socket {
      get { return socket_; }
      set {
        socket_ = value;
      }
    }

    /// <summary>Field number for the "strange_type" field.</summary>
    public const int StrangeTypeFieldNumber = 2;
    private readonly static uint StrangeTypeDefaultValue = 0;

    private uint strangeType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StrangeType {
      get { if ((_hasBits0 & 1) != 0) { return strangeType_; } else { return StrangeTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        strangeType_ = value;
      }
    }
    /// <summary>Gets whether the "strange_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStrangeType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "strange_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStrangeType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "strange_value" field.</summary>
    public const int StrangeValueFieldNumber = 3;
    private readonly static uint StrangeValueDefaultValue = 0;

    private uint strangeValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StrangeValue {
      get { if ((_hasBits0 & 2) != 0) { return strangeValue_; } else { return StrangeValueDefaultValue; } }
      set {
        _hasBits0 |= 2;
        strangeValue_ = value;
      }
    }
    /// <summary>Gets whether the "strange_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStrangeValue {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "strange_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStrangeValue() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ability_effect" field.</summary>
    public const int AbilityEffectFieldNumber = 4;
    private readonly static uint AbilityEffectDefaultValue = 0;

    private uint abilityEffect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AbilityEffect {
      get { if ((_hasBits0 & 4) != 0) { return abilityEffect_; } else { return AbilityEffectDefaultValue; } }
      set {
        _hasBits0 |= 4;
        abilityEffect_ = value;
      }
    }
    /// <summary>Gets whether the "ability_effect" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAbilityEffect {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ability_effect" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAbilityEffect() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Socket, other.Socket)) return false;
      if (StrangeType != other.StrangeType) return false;
      if (StrangeValue != other.StrangeValue) return false;
      if (AbilityEffect != other.AbilityEffect) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (socket_ != null) hash ^= Socket.GetHashCode();
      if (HasStrangeType) hash ^= StrangeType.GetHashCode();
      if (HasStrangeValue) hash ^= StrangeValue.GetHashCode();
      if (HasAbilityEffect) hash ^= AbilityEffect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasStrangeType) {
        output.WriteRawTag(16);
        output.WriteUInt32(StrangeType);
      }
      if (HasStrangeValue) {
        output.WriteRawTag(24);
        output.WriteUInt32(StrangeValue);
      }
      if (HasAbilityEffect) {
        output.WriteRawTag(32);
        output.WriteUInt32(AbilityEffect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasStrangeType) {
        output.WriteRawTag(16);
        output.WriteUInt32(StrangeType);
      }
      if (HasStrangeValue) {
        output.WriteRawTag(24);
        output.WriteUInt32(StrangeValue);
      }
      if (HasAbilityEffect) {
        output.WriteRawTag(32);
        output.WriteUInt32(AbilityEffect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (socket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Socket);
      }
      if (HasStrangeType) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StrangeType);
      }
      if (HasStrangeValue) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StrangeValue);
      }
      if (HasAbilityEffect) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AbilityEffect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CProtoItemSocket_Strange_DESERIALIZE_FROM_STRING_ONLY other) {
      if (other == null) {
        return;
      }
      if (other.socket_ != null) {
        if (socket_ == null) {
          Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
        }
        Socket.MergeFrom(other.Socket);
      }
      if (other.HasStrangeType) {
        StrangeType = other.StrangeType;
      }
      if (other.HasStrangeValue) {
        StrangeValue = other.StrangeValue;
      }
      if (other.HasAbilityEffect) {
        AbilityEffect = other.AbilityEffect;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 16: {
            StrangeType = input.ReadUInt32();
            break;
          }
          case 24: {
            StrangeValue = input.ReadUInt32();
            break;
          }
          case 32: {
            AbilityEffect = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 16: {
            StrangeType = input.ReadUInt32();
            break;
          }
          case 24: {
            StrangeValue = input.ReadUInt32();
            break;
          }
          case 32: {
            AbilityEffect = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CProtoItemSocket_Spectator : pb::IMessage<CProtoItemSocket_Spectator>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CProtoItemSocket_Spectator> _parser = new pb::MessageParser<CProtoItemSocket_Spectator>(() => new CProtoItemSocket_Spectator());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CProtoItemSocket_Spectator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Spectator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Spectator(CProtoItemSocket_Spectator other) : this() {
      _hasBits0 = other._hasBits0;
      socket_ = other.socket_ != null ? other.socket_.Clone() : null;
      gamesViewed_ = other.gamesViewed_;
      corporationId_ = other.corporationId_;
      leagueId_ = other.leagueId_;
      teamId_ = other.teamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Spectator Clone() {
      return new CProtoItemSocket_Spectator(this);
    }

    /// <summary>Field number for the "socket" field.</summary>
    public const int SocketFieldNumber = 1;
    private global::Steam.Protos.Dota2.CProtoItemSocket socket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CProtoItemSocket Socket {
      get { return socket_; }
      set {
        socket_ = value;
      }
    }

    /// <summary>Field number for the "games_viewed" field.</summary>
    public const int GamesViewedFieldNumber = 2;
    private readonly static uint GamesViewedDefaultValue = 0;

    private uint gamesViewed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GamesViewed {
      get { if ((_hasBits0 & 1) != 0) { return gamesViewed_; } else { return GamesViewedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        gamesViewed_ = value;
      }
    }
    /// <summary>Gets whether the "games_viewed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGamesViewed {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "games_viewed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGamesViewed() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "corporation_id" field.</summary>
    public const int CorporationIdFieldNumber = 3;
    private readonly static uint CorporationIdDefaultValue = 0;

    private uint corporationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CorporationId {
      get { if ((_hasBits0 & 2) != 0) { return corporationId_; } else { return CorporationIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        corporationId_ = value;
      }
    }
    /// <summary>Gets whether the "corporation_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCorporationId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "corporation_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCorporationId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "league_id" field.</summary>
    public const int LeagueIdFieldNumber = 4;
    private readonly static uint LeagueIdDefaultValue = 0;

    private uint leagueId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint LeagueId {
      get { if ((_hasBits0 & 4) != 0) { return leagueId_; } else { return LeagueIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        leagueId_ = value;
      }
    }
    /// <summary>Gets whether the "league_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLeagueId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "league_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLeagueId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 5;
    private readonly static uint TeamIdDefaultValue = 0;

    private uint teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TeamId {
      get { if ((_hasBits0 & 8) != 0) { return teamId_; } else { return TeamIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        teamId_ = value;
      }
    }
    /// <summary>Gets whether the "team_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTeamId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "team_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTeamId() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CProtoItemSocket_Spectator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CProtoItemSocket_Spectator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Socket, other.Socket)) return false;
      if (GamesViewed != other.GamesViewed) return false;
      if (CorporationId != other.CorporationId) return false;
      if (LeagueId != other.LeagueId) return false;
      if (TeamId != other.TeamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (socket_ != null) hash ^= Socket.GetHashCode();
      if (HasGamesViewed) hash ^= GamesViewed.GetHashCode();
      if (HasCorporationId) hash ^= CorporationId.GetHashCode();
      if (HasLeagueId) hash ^= LeagueId.GetHashCode();
      if (HasTeamId) hash ^= TeamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasGamesViewed) {
        output.WriteRawTag(16);
        output.WriteUInt32(GamesViewed);
      }
      if (HasCorporationId) {
        output.WriteRawTag(24);
        output.WriteUInt32(CorporationId);
      }
      if (HasLeagueId) {
        output.WriteRawTag(32);
        output.WriteUInt32(LeagueId);
      }
      if (HasTeamId) {
        output.WriteRawTag(40);
        output.WriteUInt32(TeamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasGamesViewed) {
        output.WriteRawTag(16);
        output.WriteUInt32(GamesViewed);
      }
      if (HasCorporationId) {
        output.WriteRawTag(24);
        output.WriteUInt32(CorporationId);
      }
      if (HasLeagueId) {
        output.WriteRawTag(32);
        output.WriteUInt32(LeagueId);
      }
      if (HasTeamId) {
        output.WriteRawTag(40);
        output.WriteUInt32(TeamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (socket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Socket);
      }
      if (HasGamesViewed) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GamesViewed);
      }
      if (HasCorporationId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CorporationId);
      }
      if (HasLeagueId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LeagueId);
      }
      if (HasTeamId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CProtoItemSocket_Spectator other) {
      if (other == null) {
        return;
      }
      if (other.socket_ != null) {
        if (socket_ == null) {
          Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
        }
        Socket.MergeFrom(other.Socket);
      }
      if (other.HasGamesViewed) {
        GamesViewed = other.GamesViewed;
      }
      if (other.HasCorporationId) {
        CorporationId = other.CorporationId;
      }
      if (other.HasLeagueId) {
        LeagueId = other.LeagueId;
      }
      if (other.HasTeamId) {
        TeamId = other.TeamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 16: {
            GamesViewed = input.ReadUInt32();
            break;
          }
          case 24: {
            CorporationId = input.ReadUInt32();
            break;
          }
          case 32: {
            LeagueId = input.ReadUInt32();
            break;
          }
          case 40: {
            TeamId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 16: {
            GamesViewed = input.ReadUInt32();
            break;
          }
          case 24: {
            CorporationId = input.ReadUInt32();
            break;
          }
          case 32: {
            LeagueId = input.ReadUInt32();
            break;
          }
          case 40: {
            TeamId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CProtoItemSocket_AssetModifier : pb::IMessage<CProtoItemSocket_AssetModifier>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CProtoItemSocket_AssetModifier> _parser = new pb::MessageParser<CProtoItemSocket_AssetModifier>(() => new CProtoItemSocket_AssetModifier());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CProtoItemSocket_AssetModifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_AssetModifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_AssetModifier(CProtoItemSocket_AssetModifier other) : this() {
      _hasBits0 = other._hasBits0;
      socket_ = other.socket_ != null ? other.socket_.Clone() : null;
      assetModifier_ = other.assetModifier_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_AssetModifier Clone() {
      return new CProtoItemSocket_AssetModifier(this);
    }

    /// <summary>Field number for the "socket" field.</summary>
    public const int SocketFieldNumber = 1;
    private global::Steam.Protos.Dota2.CProtoItemSocket socket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CProtoItemSocket Socket {
      get { return socket_; }
      set {
        socket_ = value;
      }
    }

    /// <summary>Field number for the "asset_modifier" field.</summary>
    public const int AssetModifierFieldNumber = 2;
    private readonly static uint AssetModifierDefaultValue = 0;

    private uint assetModifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AssetModifier {
      get { if ((_hasBits0 & 1) != 0) { return assetModifier_; } else { return AssetModifierDefaultValue; } }
      set {
        _hasBits0 |= 1;
        assetModifier_ = value;
      }
    }
    /// <summary>Gets whether the "asset_modifier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssetModifier {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "asset_modifier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssetModifier() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CProtoItemSocket_AssetModifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CProtoItemSocket_AssetModifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Socket, other.Socket)) return false;
      if (AssetModifier != other.AssetModifier) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (socket_ != null) hash ^= Socket.GetHashCode();
      if (HasAssetModifier) hash ^= AssetModifier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasAssetModifier) {
        output.WriteRawTag(16);
        output.WriteUInt32(AssetModifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasAssetModifier) {
        output.WriteRawTag(16);
        output.WriteUInt32(AssetModifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (socket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Socket);
      }
      if (HasAssetModifier) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AssetModifier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CProtoItemSocket_AssetModifier other) {
      if (other == null) {
        return;
      }
      if (other.socket_ != null) {
        if (socket_ == null) {
          Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
        }
        Socket.MergeFrom(other.Socket);
      }
      if (other.HasAssetModifier) {
        AssetModifier = other.AssetModifier;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 16: {
            AssetModifier = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 16: {
            AssetModifier = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY : pb::IMessage<CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY> _parser = new pb::MessageParser<CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY>(() => new CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY other) : this() {
      _hasBits0 = other._hasBits0;
      socket_ = other.socket_ != null ? other.socket_.Clone() : null;
      assetModifier_ = other.assetModifier_;
      animModifier_ = other.animModifier_;
      abilityEffect_ = other.abilityEffect_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY Clone() {
      return new CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(this);
    }

    /// <summary>Field number for the "socket" field.</summary>
    public const int SocketFieldNumber = 1;
    private global::Steam.Protos.Dota2.CProtoItemSocket socket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CProtoItemSocket Socket {
      get { return socket_; }
      set {
        socket_ = value;
      }
    }

    /// <summary>Field number for the "asset_modifier" field.</summary>
    public const int AssetModifierFieldNumber = 2;
    private readonly static uint AssetModifierDefaultValue = 0;

    private uint assetModifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AssetModifier {
      get { if ((_hasBits0 & 1) != 0) { return assetModifier_; } else { return AssetModifierDefaultValue; } }
      set {
        _hasBits0 |= 1;
        assetModifier_ = value;
      }
    }
    /// <summary>Gets whether the "asset_modifier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAssetModifier {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "asset_modifier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAssetModifier() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "anim_modifier" field.</summary>
    public const int AnimModifierFieldNumber = 3;
    private readonly static uint AnimModifierDefaultValue = 0;

    private uint animModifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AnimModifier {
      get { if ((_hasBits0 & 2) != 0) { return animModifier_; } else { return AnimModifierDefaultValue; } }
      set {
        _hasBits0 |= 2;
        animModifier_ = value;
      }
    }
    /// <summary>Gets whether the "anim_modifier" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAnimModifier {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "anim_modifier" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAnimModifier() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "ability_effect" field.</summary>
    public const int AbilityEffectFieldNumber = 4;
    private readonly static uint AbilityEffectDefaultValue = 0;

    private uint abilityEffect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AbilityEffect {
      get { if ((_hasBits0 & 4) != 0) { return abilityEffect_; } else { return AbilityEffectDefaultValue; } }
      set {
        _hasBits0 |= 4;
        abilityEffect_ = value;
      }
    }
    /// <summary>Gets whether the "ability_effect" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAbilityEffect {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "ability_effect" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAbilityEffect() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Socket, other.Socket)) return false;
      if (AssetModifier != other.AssetModifier) return false;
      if (AnimModifier != other.AnimModifier) return false;
      if (AbilityEffect != other.AbilityEffect) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (socket_ != null) hash ^= Socket.GetHashCode();
      if (HasAssetModifier) hash ^= AssetModifier.GetHashCode();
      if (HasAnimModifier) hash ^= AnimModifier.GetHashCode();
      if (HasAbilityEffect) hash ^= AbilityEffect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasAssetModifier) {
        output.WriteRawTag(16);
        output.WriteUInt32(AssetModifier);
      }
      if (HasAnimModifier) {
        output.WriteRawTag(24);
        output.WriteUInt32(AnimModifier);
      }
      if (HasAbilityEffect) {
        output.WriteRawTag(32);
        output.WriteUInt32(AbilityEffect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasAssetModifier) {
        output.WriteRawTag(16);
        output.WriteUInt32(AssetModifier);
      }
      if (HasAnimModifier) {
        output.WriteRawTag(24);
        output.WriteUInt32(AnimModifier);
      }
      if (HasAbilityEffect) {
        output.WriteRawTag(32);
        output.WriteUInt32(AbilityEffect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (socket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Socket);
      }
      if (HasAssetModifier) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AssetModifier);
      }
      if (HasAnimModifier) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AnimModifier);
      }
      if (HasAbilityEffect) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AbilityEffect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY other) {
      if (other == null) {
        return;
      }
      if (other.socket_ != null) {
        if (socket_ == null) {
          Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
        }
        Socket.MergeFrom(other.Socket);
      }
      if (other.HasAssetModifier) {
        AssetModifier = other.AssetModifier;
      }
      if (other.HasAnimModifier) {
        AnimModifier = other.AnimModifier;
      }
      if (other.HasAbilityEffect) {
        AbilityEffect = other.AbilityEffect;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 16: {
            AssetModifier = input.ReadUInt32();
            break;
          }
          case 24: {
            AnimModifier = input.ReadUInt32();
            break;
          }
          case 32: {
            AbilityEffect = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 16: {
            AssetModifier = input.ReadUInt32();
            break;
          }
          case 24: {
            AnimModifier = input.ReadUInt32();
            break;
          }
          case 32: {
            AbilityEffect = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CProtoItemSocket_Autograph : pb::IMessage<CProtoItemSocket_Autograph>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CProtoItemSocket_Autograph> _parser = new pb::MessageParser<CProtoItemSocket_Autograph>(() => new CProtoItemSocket_Autograph());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CProtoItemSocket_Autograph> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Autograph() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Autograph(CProtoItemSocket_Autograph other) : this() {
      _hasBits0 = other._hasBits0;
      socket_ = other.socket_ != null ? other.socket_.Clone() : null;
      autograph_ = other.autograph_;
      autographId_ = other.autographId_;
      autographScore_ = other.autographScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_Autograph Clone() {
      return new CProtoItemSocket_Autograph(this);
    }

    /// <summary>Field number for the "socket" field.</summary>
    public const int SocketFieldNumber = 1;
    private global::Steam.Protos.Dota2.CProtoItemSocket socket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CProtoItemSocket Socket {
      get { return socket_; }
      set {
        socket_ = value;
      }
    }

    /// <summary>Field number for the "autograph" field.</summary>
    public const int AutographFieldNumber = 2;
    private readonly static string AutographDefaultValue = "";

    private string autograph_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Autograph {
      get { return autograph_ ?? AutographDefaultValue; }
      set {
        autograph_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "autograph" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAutograph {
      get { return autograph_ != null; }
    }
    /// <summary>Clears the value of the "autograph" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAutograph() {
      autograph_ = null;
    }

    /// <summary>Field number for the "autograph_id" field.</summary>
    public const int AutographIdFieldNumber = 3;
    private readonly static uint AutographIdDefaultValue = 0;

    private uint autographId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AutographId {
      get { if ((_hasBits0 & 1) != 0) { return autographId_; } else { return AutographIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        autographId_ = value;
      }
    }
    /// <summary>Gets whether the "autograph_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAutographId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "autograph_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAutographId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "autograph_score" field.</summary>
    public const int AutographScoreFieldNumber = 4;
    private readonly static uint AutographScoreDefaultValue = 0;

    private uint autographScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AutographScore {
      get { if ((_hasBits0 & 2) != 0) { return autographScore_; } else { return AutographScoreDefaultValue; } }
      set {
        _hasBits0 |= 2;
        autographScore_ = value;
      }
    }
    /// <summary>Gets whether the "autograph_score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAutographScore {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "autograph_score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAutographScore() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CProtoItemSocket_Autograph);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CProtoItemSocket_Autograph other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Socket, other.Socket)) return false;
      if (Autograph != other.Autograph) return false;
      if (AutographId != other.AutographId) return false;
      if (AutographScore != other.AutographScore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (socket_ != null) hash ^= Socket.GetHashCode();
      if (HasAutograph) hash ^= Autograph.GetHashCode();
      if (HasAutographId) hash ^= AutographId.GetHashCode();
      if (HasAutographScore) hash ^= AutographScore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasAutograph) {
        output.WriteRawTag(18);
        output.WriteString(Autograph);
      }
      if (HasAutographId) {
        output.WriteRawTag(24);
        output.WriteUInt32(AutographId);
      }
      if (HasAutographScore) {
        output.WriteRawTag(32);
        output.WriteUInt32(AutographScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (HasAutograph) {
        output.WriteRawTag(18);
        output.WriteString(Autograph);
      }
      if (HasAutographId) {
        output.WriteRawTag(24);
        output.WriteUInt32(AutographId);
      }
      if (HasAutographScore) {
        output.WriteRawTag(32);
        output.WriteUInt32(AutographScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (socket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Socket);
      }
      if (HasAutograph) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Autograph);
      }
      if (HasAutographId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AutographId);
      }
      if (HasAutographScore) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AutographScore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CProtoItemSocket_Autograph other) {
      if (other == null) {
        return;
      }
      if (other.socket_ != null) {
        if (socket_ == null) {
          Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
        }
        Socket.MergeFrom(other.Socket);
      }
      if (other.HasAutograph) {
        Autograph = other.Autograph;
      }
      if (other.HasAutographId) {
        AutographId = other.AutographId;
      }
      if (other.HasAutographScore) {
        AutographScore = other.AutographScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 18: {
            Autograph = input.ReadString();
            break;
          }
          case 24: {
            AutographId = input.ReadUInt32();
            break;
          }
          case 32: {
            AutographScore = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
          case 18: {
            Autograph = input.ReadString();
            break;
          }
          case 24: {
            AutographId = input.ReadUInt32();
            break;
          }
          case 32: {
            AutographScore = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CProtoItemSocket_StaticVisuals : pb::IMessage<CProtoItemSocket_StaticVisuals>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CProtoItemSocket_StaticVisuals> _parser = new pb::MessageParser<CProtoItemSocket_StaticVisuals>(() => new CProtoItemSocket_StaticVisuals());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CProtoItemSocket_StaticVisuals> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_StaticVisuals() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_StaticVisuals(CProtoItemSocket_StaticVisuals other) : this() {
      socket_ = other.socket_ != null ? other.socket_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CProtoItemSocket_StaticVisuals Clone() {
      return new CProtoItemSocket_StaticVisuals(this);
    }

    /// <summary>Field number for the "socket" field.</summary>
    public const int SocketFieldNumber = 1;
    private global::Steam.Protos.Dota2.CProtoItemSocket socket_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CProtoItemSocket Socket {
      get { return socket_; }
      set {
        socket_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CProtoItemSocket_StaticVisuals);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CProtoItemSocket_StaticVisuals other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Socket, other.Socket)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (socket_ != null) hash ^= Socket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (socket_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Socket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (socket_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Socket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CProtoItemSocket_StaticVisuals other) {
      if (other == null) {
        return;
      }
      if (other.socket_ != null) {
        if (socket_ == null) {
          Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
        }
        Socket.MergeFrom(other.Socket);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (socket_ == null) {
              Socket = new global::Steam.Protos.Dota2.CProtoItemSocket();
            }
            input.ReadMessage(Socket);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CAttribute_String : pb::IMessage<CAttribute_String>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CAttribute_String> _parser = new pb::MessageParser<CAttribute_String>(() => new CAttribute_String());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CAttribute_String> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CAttribute_String() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CAttribute_String(CAttribute_String other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CAttribute_String Clone() {
      return new CAttribute_String(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearValue() {
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CAttribute_String);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CAttribute_String other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasValue) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasValue) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CAttribute_String other) {
      if (other == null) {
        return;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CWorkshop_GetItemDailyRevenue_Request : pb::IMessage<CWorkshop_GetItemDailyRevenue_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CWorkshop_GetItemDailyRevenue_Request> _parser = new pb::MessageParser<CWorkshop_GetItemDailyRevenue_Request>(() => new CWorkshop_GetItemDailyRevenue_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CWorkshop_GetItemDailyRevenue_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CWorkshop_GetItemDailyRevenue_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CWorkshop_GetItemDailyRevenue_Request(CWorkshop_GetItemDailyRevenue_Request other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      itemId_ = other.itemId_;
      dateStart_ = other.dateStart_;
      dateEnd_ = other.dateEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CWorkshop_GetItemDailyRevenue_Request Clone() {
      return new CWorkshop_GetItemDailyRevenue_Request(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private readonly static uint ItemIdDefaultValue = 0;

    private uint itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemId {
      get { if ((_hasBits0 & 2) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        itemId_ = value;
      }
    }
    /// <summary>Gets whether the "item_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "item_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "date_start" field.</summary>
    public const int DateStartFieldNumber = 3;
    private readonly static uint DateStartDefaultValue = 0;

    private uint dateStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DateStart {
      get { if ((_hasBits0 & 4) != 0) { return dateStart_; } else { return DateStartDefaultValue; } }
      set {
        _hasBits0 |= 4;
        dateStart_ = value;
      }
    }
    /// <summary>Gets whether the "date_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDateStart {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "date_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDateStart() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "date_end" field.</summary>
    public const int DateEndFieldNumber = 4;
    private readonly static uint DateEndDefaultValue = 0;

    private uint dateEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DateEnd {
      get { if ((_hasBits0 & 8) != 0) { return dateEnd_; } else { return DateEndDefaultValue; } }
      set {
        _hasBits0 |= 8;
        dateEnd_ = value;
      }
    }
    /// <summary>Gets whether the "date_end" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDateEnd {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "date_end" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDateEnd() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CWorkshop_GetItemDailyRevenue_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CWorkshop_GetItemDailyRevenue_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (ItemId != other.ItemId) return false;
      if (DateStart != other.DateStart) return false;
      if (DateEnd != other.DateEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasItemId) hash ^= ItemId.GetHashCode();
      if (HasDateStart) hash ^= DateStart.GetHashCode();
      if (HasDateEnd) hash ^= DateEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasItemId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ItemId);
      }
      if (HasDateStart) {
        output.WriteRawTag(24);
        output.WriteUInt32(DateStart);
      }
      if (HasDateEnd) {
        output.WriteRawTag(32);
        output.WriteUInt32(DateEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasItemId) {
        output.WriteRawTag(16);
        output.WriteUInt32(ItemId);
      }
      if (HasDateStart) {
        output.WriteRawTag(24);
        output.WriteUInt32(DateStart);
      }
      if (HasDateEnd) {
        output.WriteRawTag(32);
        output.WriteUInt32(DateEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasItemId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemId);
      }
      if (HasDateStart) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DateStart);
      }
      if (HasDateEnd) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DateEnd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CWorkshop_GetItemDailyRevenue_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasDateStart) {
        DateStart = other.DateStart;
      }
      if (other.HasDateEnd) {
        DateEnd = other.DateEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt32();
            break;
          }
          case 24: {
            DateStart = input.ReadUInt32();
            break;
          }
          case 32: {
            DateEnd = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadUInt32();
            break;
          }
          case 24: {
            DateStart = input.ReadUInt32();
            break;
          }
          case 32: {
            DateEnd = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CWorkshop_GetItemDailyRevenue_Response : pb::IMessage<CWorkshop_GetItemDailyRevenue_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CWorkshop_GetItemDailyRevenue_Response> _parser = new pb::MessageParser<CWorkshop_GetItemDailyRevenue_Response>(() => new CWorkshop_GetItemDailyRevenue_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CWorkshop_GetItemDailyRevenue_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CWorkshop_GetItemDailyRevenue_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CWorkshop_GetItemDailyRevenue_Response(CWorkshop_GetItemDailyRevenue_Response other) : this() {
      countryRevenue_ = other.countryRevenue_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CWorkshop_GetItemDailyRevenue_Response Clone() {
      return new CWorkshop_GetItemDailyRevenue_Response(this);
    }

    /// <summary>Field number for the "country_revenue" field.</summary>
    public const int CountryRevenueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CWorkshop_GetItemDailyRevenue_Response.Types.CountryDailyRevenue> _repeated_countryRevenue_codec
        = pb::FieldCodec.ForMessage(10, global::Steam.Protos.Dota2.CWorkshop_GetItemDailyRevenue_Response.Types.CountryDailyRevenue.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CWorkshop_GetItemDailyRevenue_Response.Types.CountryDailyRevenue> countryRevenue_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CWorkshop_GetItemDailyRevenue_Response.Types.CountryDailyRevenue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CWorkshop_GetItemDailyRevenue_Response.Types.CountryDailyRevenue> CountryRevenue {
      get { return countryRevenue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CWorkshop_GetItemDailyRevenue_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CWorkshop_GetItemDailyRevenue_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!countryRevenue_.Equals(other.countryRevenue_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= countryRevenue_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      countryRevenue_.WriteTo(output, _repeated_countryRevenue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      countryRevenue_.WriteTo(ref output, _repeated_countryRevenue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += countryRevenue_.CalculateSize(_repeated_countryRevenue_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CWorkshop_GetItemDailyRevenue_Response other) {
      if (other == null) {
        return;
      }
      countryRevenue_.Add(other.countryRevenue_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            countryRevenue_.AddEntriesFrom(input, _repeated_countryRevenue_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            countryRevenue_.AddEntriesFrom(ref input, _repeated_countryRevenue_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CWorkshop_GetItemDailyRevenue_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class CountryDailyRevenue : pb::IMessage<CountryDailyRevenue>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CountryDailyRevenue> _parser = new pb::MessageParser<CountryDailyRevenue>(() => new CountryDailyRevenue());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CountryDailyRevenue> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CWorkshop_GetItemDailyRevenue_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CountryDailyRevenue() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CountryDailyRevenue(CountryDailyRevenue other) : this() {
          _hasBits0 = other._hasBits0;
          countryCode_ = other.countryCode_;
          date_ = other.date_;
          revenueUsd_ = other.revenueUsd_;
          units_ = other.units_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CountryDailyRevenue Clone() {
          return new CountryDailyRevenue(this);
        }

        /// <summary>Field number for the "country_code" field.</summary>
        public const int CountryCodeFieldNumber = 1;
        private readonly static string CountryCodeDefaultValue = "";

        private string countryCode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CountryCode {
          get { return countryCode_ ?? CountryCodeDefaultValue; }
          set {
            countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "country_code" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasCountryCode {
          get { return countryCode_ != null; }
        }
        /// <summary>Clears the value of the "country_code" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearCountryCode() {
          countryCode_ = null;
        }

        /// <summary>Field number for the "date" field.</summary>
        public const int DateFieldNumber = 2;
        private readonly static uint DateDefaultValue = 0;

        private uint date_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Date {
          get { if ((_hasBits0 & 1) != 0) { return date_; } else { return DateDefaultValue; } }
          set {
            _hasBits0 |= 1;
            date_ = value;
          }
        }
        /// <summary>Gets whether the "date" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasDate {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "date" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearDate() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "revenue_usd" field.</summary>
        public const int RevenueUsdFieldNumber = 3;
        private readonly static long RevenueUsdDefaultValue = 0L;

        private long revenueUsd_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long RevenueUsd {
          get { if ((_hasBits0 & 2) != 0) { return revenueUsd_; } else { return RevenueUsdDefaultValue; } }
          set {
            _hasBits0 |= 2;
            revenueUsd_ = value;
          }
        }
        /// <summary>Gets whether the "revenue_usd" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasRevenueUsd {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "revenue_usd" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearRevenueUsd() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "units" field.</summary>
        public const int UnitsFieldNumber = 4;
        private readonly static int UnitsDefaultValue = 0;

        private int units_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Units {
          get { if ((_hasBits0 & 4) != 0) { return units_; } else { return UnitsDefaultValue; } }
          set {
            _hasBits0 |= 4;
            units_ = value;
          }
        }
        /// <summary>Gets whether the "units" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasUnits {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "units" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearUnits() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CountryDailyRevenue);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CountryDailyRevenue other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CountryCode != other.CountryCode) return false;
          if (Date != other.Date) return false;
          if (RevenueUsd != other.RevenueUsd) return false;
          if (Units != other.Units) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasCountryCode) hash ^= CountryCode.GetHashCode();
          if (HasDate) hash ^= Date.GetHashCode();
          if (HasRevenueUsd) hash ^= RevenueUsd.GetHashCode();
          if (HasUnits) hash ^= Units.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasCountryCode) {
            output.WriteRawTag(10);
            output.WriteString(CountryCode);
          }
          if (HasDate) {
            output.WriteRawTag(16);
            output.WriteUInt32(Date);
          }
          if (HasRevenueUsd) {
            output.WriteRawTag(24);
            output.WriteInt64(RevenueUsd);
          }
          if (HasUnits) {
            output.WriteRawTag(32);
            output.WriteInt32(Units);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasCountryCode) {
            output.WriteRawTag(10);
            output.WriteString(CountryCode);
          }
          if (HasDate) {
            output.WriteRawTag(16);
            output.WriteUInt32(Date);
          }
          if (HasRevenueUsd) {
            output.WriteRawTag(24);
            output.WriteInt64(RevenueUsd);
          }
          if (HasUnits) {
            output.WriteRawTag(32);
            output.WriteInt32(Units);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasCountryCode) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
          }
          if (HasDate) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Date);
          }
          if (HasRevenueUsd) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(RevenueUsd);
          }
          if (HasUnits) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Units);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CountryDailyRevenue other) {
          if (other == null) {
            return;
          }
          if (other.HasCountryCode) {
            CountryCode = other.CountryCode;
          }
          if (other.HasDate) {
            Date = other.Date;
          }
          if (other.HasRevenueUsd) {
            RevenueUsd = other.RevenueUsd;
          }
          if (other.HasUnits) {
            Units = other.Units;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                CountryCode = input.ReadString();
                break;
              }
              case 16: {
                Date = input.ReadUInt32();
                break;
              }
              case 24: {
                RevenueUsd = input.ReadInt64();
                break;
              }
              case 32: {
                Units = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                CountryCode = input.ReadString();
                break;
              }
              case 16: {
                Date = input.ReadUInt32();
                break;
              }
              case 24: {
                RevenueUsd = input.ReadInt64();
                break;
              }
              case 32: {
                Units = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CWorkshop_GetPackageDailyRevenue_Request : pb::IMessage<CWorkshop_GetPackageDailyRevenue_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CWorkshop_GetPackageDailyRevenue_Request> _parser = new pb::MessageParser<CWorkshop_GetPackageDailyRevenue_Request>(() => new CWorkshop_GetPackageDailyRevenue_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CWorkshop_GetPackageDailyRevenue_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CWorkshop_GetPackageDailyRevenue_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CWorkshop_GetPackageDailyRevenue_Request(CWorkshop_GetPackageDailyRevenue_Request other) : this() {
      _hasBits0 = other._hasBits0;
      packageid_ = other.packageid_;
      dateStart_ = other.dateStart_;
      dateEnd_ = other.dateEnd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CWorkshop_GetPackageDailyRevenue_Request Clone() {
      return new CWorkshop_GetPackageDailyRevenue_Request(this);
    }

    /// <summary>Field number for the "packageid" field.</summary>
    public const int PackageidFieldNumber = 1;
    private readonly static uint PackageidDefaultValue = 0;

    private uint packageid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Packageid {
      get { if ((_hasBits0 & 1) != 0) { return packageid_; } else { return PackageidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        packageid_ = value;
      }
    }
    /// <summary>Gets whether the "packageid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPackageid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "packageid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPackageid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "date_start" field.</summary>
    public const int DateStartFieldNumber = 2;
    private readonly static uint DateStartDefaultValue = 0;

    private uint dateStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DateStart {
      get { if ((_hasBits0 & 2) != 0) { return dateStart_; } else { return DateStartDefaultValue; } }
      set {
        _hasBits0 |= 2;
        dateStart_ = value;
      }
    }
    /// <summary>Gets whether the "date_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDateStart {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "date_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDateStart() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "date_end" field.</summary>
    public const int DateEndFieldNumber = 3;
    private readonly static uint DateEndDefaultValue = 0;

    private uint dateEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DateEnd {
      get { if ((_hasBits0 & 4) != 0) { return dateEnd_; } else { return DateEndDefaultValue; } }
      set {
        _hasBits0 |= 4;
        dateEnd_ = value;
      }
    }
    /// <summary>Gets whether the "date_end" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDateEnd {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "date_end" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDateEnd() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CWorkshop_GetPackageDailyRevenue_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CWorkshop_GetPackageDailyRevenue_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Packageid != other.Packageid) return false;
      if (DateStart != other.DateStart) return false;
      if (DateEnd != other.DateEnd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPackageid) hash ^= Packageid.GetHashCode();
      if (HasDateStart) hash ^= DateStart.GetHashCode();
      if (HasDateEnd) hash ^= DateEnd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPackageid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Packageid);
      }
      if (HasDateStart) {
        output.WriteRawTag(16);
        output.WriteUInt32(DateStart);
      }
      if (HasDateEnd) {
        output.WriteRawTag(24);
        output.WriteUInt32(DateEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPackageid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Packageid);
      }
      if (HasDateStart) {
        output.WriteRawTag(16);
        output.WriteUInt32(DateStart);
      }
      if (HasDateEnd) {
        output.WriteRawTag(24);
        output.WriteUInt32(DateEnd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPackageid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Packageid);
      }
      if (HasDateStart) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DateStart);
      }
      if (HasDateEnd) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DateEnd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CWorkshop_GetPackageDailyRevenue_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasPackageid) {
        Packageid = other.Packageid;
      }
      if (other.HasDateStart) {
        DateStart = other.DateStart;
      }
      if (other.HasDateEnd) {
        DateEnd = other.DateEnd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Packageid = input.ReadUInt32();
            break;
          }
          case 16: {
            DateStart = input.ReadUInt32();
            break;
          }
          case 24: {
            DateEnd = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Packageid = input.ReadUInt32();
            break;
          }
          case 16: {
            DateStart = input.ReadUInt32();
            break;
          }
          case 24: {
            DateEnd = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CWorkshop_GetPackageDailyRevenue_Response : pb::IMessage<CWorkshop_GetPackageDailyRevenue_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CWorkshop_GetPackageDailyRevenue_Response> _parser = new pb::MessageParser<CWorkshop_GetPackageDailyRevenue_Response>(() => new CWorkshop_GetPackageDailyRevenue_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CWorkshop_GetPackageDailyRevenue_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CWorkshop_GetPackageDailyRevenue_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CWorkshop_GetPackageDailyRevenue_Response(CWorkshop_GetPackageDailyRevenue_Response other) : this() {
      countryRevenue_ = other.countryRevenue_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CWorkshop_GetPackageDailyRevenue_Response Clone() {
      return new CWorkshop_GetPackageDailyRevenue_Response(this);
    }

    /// <summary>Field number for the "country_revenue" field.</summary>
    public const int CountryRevenueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CWorkshop_GetPackageDailyRevenue_Response.Types.CountryDailyRevenue> _repeated_countryRevenue_codec
        = pb::FieldCodec.ForMessage(10, global::Steam.Protos.Dota2.CWorkshop_GetPackageDailyRevenue_Response.Types.CountryDailyRevenue.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CWorkshop_GetPackageDailyRevenue_Response.Types.CountryDailyRevenue> countryRevenue_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CWorkshop_GetPackageDailyRevenue_Response.Types.CountryDailyRevenue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CWorkshop_GetPackageDailyRevenue_Response.Types.CountryDailyRevenue> CountryRevenue {
      get { return countryRevenue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CWorkshop_GetPackageDailyRevenue_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CWorkshop_GetPackageDailyRevenue_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!countryRevenue_.Equals(other.countryRevenue_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= countryRevenue_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      countryRevenue_.WriteTo(output, _repeated_countryRevenue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      countryRevenue_.WriteTo(ref output, _repeated_countryRevenue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += countryRevenue_.CalculateSize(_repeated_countryRevenue_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CWorkshop_GetPackageDailyRevenue_Response other) {
      if (other == null) {
        return;
      }
      countryRevenue_.Add(other.countryRevenue_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            countryRevenue_.AddEntriesFrom(input, _repeated_countryRevenue_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            countryRevenue_.AddEntriesFrom(ref input, _repeated_countryRevenue_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CWorkshop_GetPackageDailyRevenue_Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class CountryDailyRevenue : pb::IMessage<CountryDailyRevenue>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<CountryDailyRevenue> _parser = new pb::MessageParser<CountryDailyRevenue>(() => new CountryDailyRevenue());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CountryDailyRevenue> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CWorkshop_GetPackageDailyRevenue_Response.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CountryDailyRevenue() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CountryDailyRevenue(CountryDailyRevenue other) : this() {
          _hasBits0 = other._hasBits0;
          countryCode_ = other.countryCode_;
          date_ = other.date_;
          revenueUsd_ = other.revenueUsd_;
          units_ = other.units_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CountryDailyRevenue Clone() {
          return new CountryDailyRevenue(this);
        }

        /// <summary>Field number for the "country_code" field.</summary>
        public const int CountryCodeFieldNumber = 1;
        private readonly static string CountryCodeDefaultValue = "";

        private string countryCode_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CountryCode {
          get { return countryCode_ ?? CountryCodeDefaultValue; }
          set {
            countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "country_code" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasCountryCode {
          get { return countryCode_ != null; }
        }
        /// <summary>Clears the value of the "country_code" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearCountryCode() {
          countryCode_ = null;
        }

        /// <summary>Field number for the "date" field.</summary>
        public const int DateFieldNumber = 2;
        private readonly static uint DateDefaultValue = 0;

        private uint date_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Date {
          get { if ((_hasBits0 & 1) != 0) { return date_; } else { return DateDefaultValue; } }
          set {
            _hasBits0 |= 1;
            date_ = value;
          }
        }
        /// <summary>Gets whether the "date" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasDate {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "date" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearDate() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "revenue_usd" field.</summary>
        public const int RevenueUsdFieldNumber = 3;
        private readonly static long RevenueUsdDefaultValue = 0L;

        private long revenueUsd_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long RevenueUsd {
          get { if ((_hasBits0 & 2) != 0) { return revenueUsd_; } else { return RevenueUsdDefaultValue; } }
          set {
            _hasBits0 |= 2;
            revenueUsd_ = value;
          }
        }
        /// <summary>Gets whether the "revenue_usd" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasRevenueUsd {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "revenue_usd" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearRevenueUsd() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "units" field.</summary>
        public const int UnitsFieldNumber = 4;
        private readonly static int UnitsDefaultValue = 0;

        private int units_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Units {
          get { if ((_hasBits0 & 4) != 0) { return units_; } else { return UnitsDefaultValue; } }
          set {
            _hasBits0 |= 4;
            units_ = value;
          }
        }
        /// <summary>Gets whether the "units" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasUnits {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "units" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearUnits() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CountryDailyRevenue);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CountryDailyRevenue other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CountryCode != other.CountryCode) return false;
          if (Date != other.Date) return false;
          if (RevenueUsd != other.RevenueUsd) return false;
          if (Units != other.Units) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasCountryCode) hash ^= CountryCode.GetHashCode();
          if (HasDate) hash ^= Date.GetHashCode();
          if (HasRevenueUsd) hash ^= RevenueUsd.GetHashCode();
          if (HasUnits) hash ^= Units.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasCountryCode) {
            output.WriteRawTag(10);
            output.WriteString(CountryCode);
          }
          if (HasDate) {
            output.WriteRawTag(16);
            output.WriteUInt32(Date);
          }
          if (HasRevenueUsd) {
            output.WriteRawTag(24);
            output.WriteInt64(RevenueUsd);
          }
          if (HasUnits) {
            output.WriteRawTag(32);
            output.WriteInt32(Units);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasCountryCode) {
            output.WriteRawTag(10);
            output.WriteString(CountryCode);
          }
          if (HasDate) {
            output.WriteRawTag(16);
            output.WriteUInt32(Date);
          }
          if (HasRevenueUsd) {
            output.WriteRawTag(24);
            output.WriteInt64(RevenueUsd);
          }
          if (HasUnits) {
            output.WriteRawTag(32);
            output.WriteInt32(Units);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasCountryCode) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
          }
          if (HasDate) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Date);
          }
          if (HasRevenueUsd) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(RevenueUsd);
          }
          if (HasUnits) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Units);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CountryDailyRevenue other) {
          if (other == null) {
            return;
          }
          if (other.HasCountryCode) {
            CountryCode = other.CountryCode;
          }
          if (other.HasDate) {
            Date = other.Date;
          }
          if (other.HasRevenueUsd) {
            RevenueUsd = other.RevenueUsd;
          }
          if (other.HasUnits) {
            Units = other.Units;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                CountryCode = input.ReadString();
                break;
              }
              case 16: {
                Date = input.ReadUInt32();
                break;
              }
              case 24: {
                RevenueUsd = input.ReadInt64();
                break;
              }
              case 32: {
                Units = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                CountryCode = input.ReadString();
                break;
              }
              case 16: {
                Date = input.ReadUInt32();
                break;
              }
              case 24: {
                RevenueUsd = input.ReadInt64();
                break;
              }
              case 32: {
                Units = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgSQLGCToGCGrantBackpackSlots : pb::IMessage<CMsgSQLGCToGCGrantBackpackSlots>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgSQLGCToGCGrantBackpackSlots> _parser = new pb::MessageParser<CMsgSQLGCToGCGrantBackpackSlots>(() => new CMsgSQLGCToGCGrantBackpackSlots());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgSQLGCToGCGrantBackpackSlots> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSQLGCToGCGrantBackpackSlots() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSQLGCToGCGrantBackpackSlots(CMsgSQLGCToGCGrantBackpackSlots other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      addSlots_ = other.addSlots_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgSQLGCToGCGrantBackpackSlots Clone() {
      return new CMsgSQLGCToGCGrantBackpackSlots(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "add_slots" field.</summary>
    public const int AddSlotsFieldNumber = 2;
    private readonly static uint AddSlotsDefaultValue = 0;

    private uint addSlots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AddSlots {
      get { if ((_hasBits0 & 2) != 0) { return addSlots_; } else { return AddSlotsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        addSlots_ = value;
      }
    }
    /// <summary>Gets whether the "add_slots" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAddSlots {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "add_slots" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAddSlots() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgSQLGCToGCGrantBackpackSlots);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgSQLGCToGCGrantBackpackSlots other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (AddSlots != other.AddSlots) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasAddSlots) hash ^= AddSlots.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasAddSlots) {
        output.WriteRawTag(16);
        output.WriteUInt32(AddSlots);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasAddSlots) {
        output.WriteRawTag(16);
        output.WriteUInt32(AddSlots);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (HasAddSlots) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AddSlots);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgSQLGCToGCGrantBackpackSlots other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasAddSlots) {
        AddSlots = other.AddSlots;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            AddSlots = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            AddSlots = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCLookupAccountName : pb::IMessage<CMsgClientToGCLookupAccountName>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCLookupAccountName> _parser = new pb::MessageParser<CMsgClientToGCLookupAccountName>(() => new CMsgClientToGCLookupAccountName());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCLookupAccountName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCLookupAccountName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCLookupAccountName(CMsgClientToGCLookupAccountName other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCLookupAccountName Clone() {
      return new CMsgClientToGCLookupAccountName(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCLookupAccountName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCLookupAccountName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCLookupAccountName other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCLookupAccountNameResponse : pb::IMessage<CMsgClientToGCLookupAccountNameResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCLookupAccountNameResponse> _parser = new pb::MessageParser<CMsgClientToGCLookupAccountNameResponse>(() => new CMsgClientToGCLookupAccountNameResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCLookupAccountNameResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCLookupAccountNameResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCLookupAccountNameResponse(CMsgClientToGCLookupAccountNameResponse other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      accountName_ = other.accountName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCLookupAccountNameResponse Clone() {
      return new CMsgClientToGCLookupAccountNameResponse(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "account_name" field.</summary>
    public const int AccountNameFieldNumber = 2;
    private readonly static string AccountNameDefaultValue = "";

    private string accountName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountName {
      get { return accountName_ ?? AccountNameDefaultValue; }
      set {
        accountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "account_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountName {
      get { return accountName_ != null; }
    }
    /// <summary>Clears the value of the "account_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountName() {
      accountName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCLookupAccountNameResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCLookupAccountNameResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (AccountName != other.AccountName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasAccountName) hash ^= AccountName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasAccountName) {
        output.WriteRawTag(18);
        output.WriteString(AccountName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasAccountName) {
        output.WriteRawTag(18);
        output.WriteString(AccountName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (HasAccountName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCLookupAccountNameResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasAccountName) {
        AccountName = other.AccountName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 18: {
            AccountName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 18: {
            AccountName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCCreateStaticRecipe : pb::IMessage<CMsgClientToGCCreateStaticRecipe>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCCreateStaticRecipe> _parser = new pb::MessageParser<CMsgClientToGCCreateStaticRecipe>(() => new CMsgClientToGCCreateStaticRecipe());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCCreateStaticRecipe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCCreateStaticRecipe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCCreateStaticRecipe(CMsgClientToGCCreateStaticRecipe other) : this() {
      _hasBits0 = other._hasBits0;
      items_ = other.items_.Clone();
      recipeDefIndex_ = other.recipeDefIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCCreateStaticRecipe Clone() {
      return new CMsgClientToGCCreateStaticRecipe(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipe.Types.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipe.Types.Item.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipe.Types.Item> items_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipe.Types.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipe.Types.Item> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "recipe_def_index" field.</summary>
    public const int RecipeDefIndexFieldNumber = 2;
    private readonly static uint RecipeDefIndexDefaultValue = 0;

    private uint recipeDefIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RecipeDefIndex {
      get { if ((_hasBits0 & 1) != 0) { return recipeDefIndex_; } else { return RecipeDefIndexDefaultValue; } }
      set {
        _hasBits0 |= 1;
        recipeDefIndex_ = value;
      }
    }
    /// <summary>Gets whether the "recipe_def_index" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRecipeDefIndex {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "recipe_def_index" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRecipeDefIndex() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCCreateStaticRecipe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCCreateStaticRecipe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      if (RecipeDefIndex != other.RecipeDefIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (HasRecipeDefIndex) hash ^= RecipeDefIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (HasRecipeDefIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(RecipeDefIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (HasRecipeDefIndex) {
        output.WriteRawTag(16);
        output.WriteUInt32(RecipeDefIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (HasRecipeDefIndex) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RecipeDefIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCCreateStaticRecipe other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      if (other.HasRecipeDefIndex) {
        RecipeDefIndex = other.RecipeDefIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 16: {
            RecipeDefIndex = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
          case 16: {
            RecipeDefIndex = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgClientToGCCreateStaticRecipe message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Item : pb::IMessage<Item>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Item> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipe.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item(Item other) : this() {
          _hasBits0 = other._hasBits0;
          itemId_ = other.itemId_;
          slotId_ = other.slotId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item Clone() {
          return new Item(this);
        }

        /// <summary>Field number for the "item_id" field.</summary>
        public const int ItemIdFieldNumber = 1;
        private readonly static ulong ItemIdDefaultValue = 0UL;

        private ulong itemId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ItemId {
          get { if ((_hasBits0 & 1) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            itemId_ = value;
          }
        }
        /// <summary>Gets whether the "item_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasItemId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "item_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearItemId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "slot_id" field.</summary>
        public const int SlotIdFieldNumber = 2;
        private readonly static uint SlotIdDefaultValue = 0;

        private uint slotId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint SlotId {
          get { if ((_hasBits0 & 2) != 0) { return slotId_; } else { return SlotIdDefaultValue; } }
          set {
            _hasBits0 |= 2;
            slotId_ = value;
          }
        }
        /// <summary>Gets whether the "slot_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasSlotId {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "slot_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSlotId() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Item);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Item other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ItemId != other.ItemId) return false;
          if (SlotId != other.SlotId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasItemId) hash ^= ItemId.GetHashCode();
          if (HasSlotId) hash ^= SlotId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasItemId) {
            output.WriteRawTag(8);
            output.WriteUInt64(ItemId);
          }
          if (HasSlotId) {
            output.WriteRawTag(16);
            output.WriteUInt32(SlotId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasItemId) {
            output.WriteRawTag(8);
            output.WriteUInt64(ItemId);
          }
          if (HasSlotId) {
            output.WriteRawTag(16);
            output.WriteUInt32(SlotId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasItemId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
          }
          if (HasSlotId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SlotId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Item other) {
          if (other == null) {
            return;
          }
          if (other.HasItemId) {
            ItemId = other.ItemId;
          }
          if (other.HasSlotId) {
            SlotId = other.SlotId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ItemId = input.ReadUInt64();
                break;
              }
              case 16: {
                SlotId = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ItemId = input.ReadUInt64();
                break;
              }
              case 16: {
                SlotId = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgClientToGCCreateStaticRecipeResponse : pb::IMessage<CMsgClientToGCCreateStaticRecipeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCCreateStaticRecipeResponse> _parser = new pb::MessageParser<CMsgClientToGCCreateStaticRecipeResponse>(() => new CMsgClientToGCCreateStaticRecipeResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCCreateStaticRecipeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCCreateStaticRecipeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCCreateStaticRecipeResponse(CMsgClientToGCCreateStaticRecipeResponse other) : this() {
      _hasBits0 = other._hasBits0;
      response_ = other.response_;
      outputItems_ = other.outputItems_.Clone();
      inputErrors_ = other.inputErrors_.Clone();
      additionalOutputs_ = other.additionalOutputs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCCreateStaticRecipeResponse Clone() {
      return new CMsgClientToGCCreateStaticRecipeResponse(this);
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 1;
    private readonly static global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.EResponse ResponseDefaultValue = global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.EResponse.Success;

    private global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.EResponse response_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.EResponse Response {
      get { if ((_hasBits0 & 1) != 0) { return response_; } else { return ResponseDefaultValue; } }
      set {
        _hasBits0 |= 1;
        response_ = value;
      }
    }
    /// <summary>Gets whether the "response" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResponse {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "response" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "output_items" field.</summary>
    public const int OutputItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.OutputItem> _repeated_outputItems_codec
        = pb::FieldCodec.ForMessage(18, global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.OutputItem.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.OutputItem> outputItems_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.OutputItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.OutputItem> OutputItems {
      get { return outputItems_; }
    }

    /// <summary>Field number for the "input_errors" field.</summary>
    public const int InputErrorsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.InputError> _repeated_inputErrors_codec
        = pb::FieldCodec.ForMessage(26, global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.InputError.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.InputError> inputErrors_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.InputError>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.InputError> InputErrors {
      get { return inputErrors_; }
    }

    /// <summary>Field number for the "additional_outputs" field.</summary>
    public const int AdditionalOutputsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.AdditionalOutput> _repeated_additionalOutputs_codec
        = pb::FieldCodec.ForMessage(34, global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.AdditionalOutput.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.AdditionalOutput> additionalOutputs_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.AdditionalOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.AdditionalOutput> AdditionalOutputs {
      get { return additionalOutputs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCCreateStaticRecipeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCCreateStaticRecipeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Response != other.Response) return false;
      if(!outputItems_.Equals(other.outputItems_)) return false;
      if(!inputErrors_.Equals(other.inputErrors_)) return false;
      if(!additionalOutputs_.Equals(other.additionalOutputs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResponse) hash ^= Response.GetHashCode();
      hash ^= outputItems_.GetHashCode();
      hash ^= inputErrors_.GetHashCode();
      hash ^= additionalOutputs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Response);
      }
      outputItems_.WriteTo(output, _repeated_outputItems_codec);
      inputErrors_.WriteTo(output, _repeated_inputErrors_codec);
      additionalOutputs_.WriteTo(output, _repeated_additionalOutputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResponse) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Response);
      }
      outputItems_.WriteTo(ref output, _repeated_outputItems_codec);
      inputErrors_.WriteTo(ref output, _repeated_inputErrors_codec);
      additionalOutputs_.WriteTo(ref output, _repeated_additionalOutputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResponse) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Response);
      }
      size += outputItems_.CalculateSize(_repeated_outputItems_codec);
      size += inputErrors_.CalculateSize(_repeated_inputErrors_codec);
      size += additionalOutputs_.CalculateSize(_repeated_additionalOutputs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCCreateStaticRecipeResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResponse) {
        Response = other.Response;
      }
      outputItems_.Add(other.outputItems_);
      inputErrors_.Add(other.inputErrors_);
      additionalOutputs_.Add(other.additionalOutputs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Response = (global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.EResponse) input.ReadEnum();
            break;
          }
          case 18: {
            outputItems_.AddEntriesFrom(input, _repeated_outputItems_codec);
            break;
          }
          case 26: {
            inputErrors_.AddEntriesFrom(input, _repeated_inputErrors_codec);
            break;
          }
          case 34: {
            additionalOutputs_.AddEntriesFrom(input, _repeated_additionalOutputs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Response = (global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.EResponse) input.ReadEnum();
            break;
          }
          case 18: {
            outputItems_.AddEntriesFrom(ref input, _repeated_outputItems_codec);
            break;
          }
          case 26: {
            inputErrors_.AddEntriesFrom(ref input, _repeated_inputErrors_codec);
            break;
          }
          case 34: {
            additionalOutputs_.AddEntriesFrom(ref input, _repeated_additionalOutputs_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgClientToGCCreateStaticRecipeResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EResponse {
        [pbr::OriginalName("eResponse_Success")] Success = 0,
        [pbr::OriginalName("eResponse_OfferingDisabled")] OfferingDisabled = 1,
        [pbr::OriginalName("eResponse_InvalidItems")] InvalidItems = 2,
        [pbr::OriginalName("eResponse_InternalError")] InternalError = 3,
        [pbr::OriginalName("eResponse_MissingLeague")] MissingLeague = 4,
        [pbr::OriginalName("eResponse_MissingEvent")] MissingEvent = 5,
      }

      public sealed partial class OutputItem : pb::IMessage<OutputItem>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<OutputItem> _parser = new pb::MessageParser<OutputItem>(() => new OutputItem());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OutputItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OutputItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OutputItem(OutputItem other) : this() {
          _hasBits0 = other._hasBits0;
          defIndex_ = other.defIndex_;
          itemId_ = other.itemId_;
          slotId_ = other.slotId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OutputItem Clone() {
          return new OutputItem(this);
        }

        /// <summary>Field number for the "def_index" field.</summary>
        public const int DefIndexFieldNumber = 1;
        private readonly static uint DefIndexDefaultValue = 0;

        private uint defIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint DefIndex {
          get { if ((_hasBits0 & 1) != 0) { return defIndex_; } else { return DefIndexDefaultValue; } }
          set {
            _hasBits0 |= 1;
            defIndex_ = value;
          }
        }
        /// <summary>Gets whether the "def_index" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasDefIndex {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "def_index" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearDefIndex() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "item_id" field.</summary>
        public const int ItemIdFieldNumber = 2;
        private readonly static ulong ItemIdDefaultValue = 0UL;

        private ulong itemId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong ItemId {
          get { if ((_hasBits0 & 2) != 0) { return itemId_; } else { return ItemIdDefaultValue; } }
          set {
            _hasBits0 |= 2;
            itemId_ = value;
          }
        }
        /// <summary>Gets whether the "item_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasItemId {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "item_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearItemId() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "slot_id" field.</summary>
        public const int SlotIdFieldNumber = 3;
        private readonly static uint SlotIdDefaultValue = 0;

        private uint slotId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint SlotId {
          get { if ((_hasBits0 & 4) != 0) { return slotId_; } else { return SlotIdDefaultValue; } }
          set {
            _hasBits0 |= 4;
            slotId_ = value;
          }
        }
        /// <summary>Gets whether the "slot_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasSlotId {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "slot_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSlotId() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OutputItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OutputItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DefIndex != other.DefIndex) return false;
          if (ItemId != other.ItemId) return false;
          if (SlotId != other.SlotId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasDefIndex) hash ^= DefIndex.GetHashCode();
          if (HasItemId) hash ^= ItemId.GetHashCode();
          if (HasSlotId) hash ^= SlotId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasDefIndex) {
            output.WriteRawTag(8);
            output.WriteUInt32(DefIndex);
          }
          if (HasItemId) {
            output.WriteRawTag(16);
            output.WriteUInt64(ItemId);
          }
          if (HasSlotId) {
            output.WriteRawTag(24);
            output.WriteUInt32(SlotId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasDefIndex) {
            output.WriteRawTag(8);
            output.WriteUInt32(DefIndex);
          }
          if (HasItemId) {
            output.WriteRawTag(16);
            output.WriteUInt64(ItemId);
          }
          if (HasSlotId) {
            output.WriteRawTag(24);
            output.WriteUInt32(SlotId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasDefIndex) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(DefIndex);
          }
          if (HasItemId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ItemId);
          }
          if (HasSlotId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SlotId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OutputItem other) {
          if (other == null) {
            return;
          }
          if (other.HasDefIndex) {
            DefIndex = other.DefIndex;
          }
          if (other.HasItemId) {
            ItemId = other.ItemId;
          }
          if (other.HasSlotId) {
            SlotId = other.SlotId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                DefIndex = input.ReadUInt32();
                break;
              }
              case 16: {
                ItemId = input.ReadUInt64();
                break;
              }
              case 24: {
                SlotId = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                DefIndex = input.ReadUInt32();
                break;
              }
              case 16: {
                ItemId = input.ReadUInt64();
                break;
              }
              case 24: {
                SlotId = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class InputError : pb::IMessage<InputError>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<InputError> _parser = new pb::MessageParser<InputError>(() => new InputError());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<InputError> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InputError() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InputError(InputError other) : this() {
          _hasBits0 = other._hasBits0;
          slotId_ = other.slotId_;
          error_ = other.error_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InputError Clone() {
          return new InputError(this);
        }

        /// <summary>Field number for the "slot_id" field.</summary>
        public const int SlotIdFieldNumber = 1;
        private readonly static uint SlotIdDefaultValue = 0;

        private uint slotId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint SlotId {
          get { if ((_hasBits0 & 1) != 0) { return slotId_; } else { return SlotIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            slotId_ = value;
          }
        }
        /// <summary>Gets whether the "slot_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasSlotId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "slot_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSlotId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "error" field.</summary>
        public const int ErrorFieldNumber = 2;
        private readonly static global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.EResponse ErrorDefaultValue = global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.EResponse.Success;

        private global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.EResponse error_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.EResponse Error {
          get { if ((_hasBits0 & 2) != 0) { return error_; } else { return ErrorDefaultValue; } }
          set {
            _hasBits0 |= 2;
            error_ = value;
          }
        }
        /// <summary>Gets whether the "error" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasError {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "error" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearError() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as InputError);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(InputError other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SlotId != other.SlotId) return false;
          if (Error != other.Error) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasSlotId) hash ^= SlotId.GetHashCode();
          if (HasError) hash ^= Error.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasSlotId) {
            output.WriteRawTag(8);
            output.WriteUInt32(SlotId);
          }
          if (HasError) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Error);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasSlotId) {
            output.WriteRawTag(8);
            output.WriteUInt32(SlotId);
          }
          if (HasError) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Error);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasSlotId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SlotId);
          }
          if (HasError) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(InputError other) {
          if (other == null) {
            return;
          }
          if (other.HasSlotId) {
            SlotId = other.SlotId;
          }
          if (other.HasError) {
            Error = other.Error;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SlotId = input.ReadUInt32();
                break;
              }
              case 16: {
                Error = (global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.EResponse) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                SlotId = input.ReadUInt32();
                break;
              }
              case 16: {
                Error = (global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Types.EResponse) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class AdditionalOutput : pb::IMessage<AdditionalOutput>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AdditionalOutput> _parser = new pb::MessageParser<AdditionalOutput>(() => new AdditionalOutput());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AdditionalOutput> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgClientToGCCreateStaticRecipeResponse.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AdditionalOutput() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AdditionalOutput(AdditionalOutput other) : this() {
          _hasBits0 = other._hasBits0;
          slotId_ = other.slotId_;
          value_ = other.value_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AdditionalOutput Clone() {
          return new AdditionalOutput(this);
        }

        /// <summary>Field number for the "slot_id" field.</summary>
        public const int SlotIdFieldNumber = 1;
        private readonly static uint SlotIdDefaultValue = 0;

        private uint slotId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint SlotId {
          get { if ((_hasBits0 & 1) != 0) { return slotId_; } else { return SlotIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            slotId_ = value;
          }
        }
        /// <summary>Gets whether the "slot_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasSlotId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "slot_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSlotId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private readonly static ulong ValueDefaultValue = 0UL;

        private ulong value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Value {
          get { if ((_hasBits0 & 2) != 0) { return value_; } else { return ValueDefaultValue; } }
          set {
            _hasBits0 |= 2;
            value_ = value;
          }
        }
        /// <summary>Gets whether the "value" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasValue {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "value" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearValue() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AdditionalOutput);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AdditionalOutput other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SlotId != other.SlotId) return false;
          if (Value != other.Value) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasSlotId) hash ^= SlotId.GetHashCode();
          if (HasValue) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasSlotId) {
            output.WriteRawTag(8);
            output.WriteUInt32(SlotId);
          }
          if (HasValue) {
            output.WriteRawTag(16);
            output.WriteUInt64(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasSlotId) {
            output.WriteRawTag(8);
            output.WriteUInt32(SlotId);
          }
          if (HasValue) {
            output.WriteRawTag(16);
            output.WriteUInt64(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasSlotId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SlotId);
          }
          if (HasValue) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AdditionalOutput other) {
          if (other == null) {
            return;
          }
          if (other.HasSlotId) {
            SlotId = other.SlotId;
          }
          if (other.HasValue) {
            Value = other.Value;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SlotId = input.ReadUInt32();
                break;
              }
              case 16: {
                Value = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                SlotId = input.ReadUInt32();
                break;
              }
              case 16: {
                Value = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgProcessTransactionOrder : pb::IMessage<CMsgProcessTransactionOrder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgProcessTransactionOrder> _parser = new pb::MessageParser<CMsgProcessTransactionOrder>(() => new CMsgProcessTransactionOrder());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgProcessTransactionOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgProcessTransactionOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgProcessTransactionOrder(CMsgProcessTransactionOrder other) : this() {
      _hasBits0 = other._hasBits0;
      txnId_ = other.txnId_;
      steamTxnId_ = other.steamTxnId_;
      partnerTxnId_ = other.partnerTxnId_;
      steamId_ = other.steamId_;
      timeStamp_ = other.timeStamp_;
      watermark_ = other.watermark_;
      purchaseReportStatus_ = other.purchaseReportStatus_;
      currency_ = other.currency_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgProcessTransactionOrder Clone() {
      return new CMsgProcessTransactionOrder(this);
    }

    /// <summary>Field number for the "txn_id" field.</summary>
    public const int TxnIdFieldNumber = 1;
    private readonly static ulong TxnIdDefaultValue = 0UL;

    private ulong txnId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TxnId {
      get { if ((_hasBits0 & 1) != 0) { return txnId_; } else { return TxnIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        txnId_ = value;
      }
    }
    /// <summary>Gets whether the "txn_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTxnId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "txn_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTxnId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "steam_txn_id" field.</summary>
    public const int SteamTxnIdFieldNumber = 2;
    private readonly static ulong SteamTxnIdDefaultValue = 0UL;

    private ulong steamTxnId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SteamTxnId {
      get { if ((_hasBits0 & 2) != 0) { return steamTxnId_; } else { return SteamTxnIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        steamTxnId_ = value;
      }
    }
    /// <summary>Gets whether the "steam_txn_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSteamTxnId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "steam_txn_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSteamTxnId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "partner_txn_id" field.</summary>
    public const int PartnerTxnIdFieldNumber = 3;
    private readonly static ulong PartnerTxnIdDefaultValue = 0UL;

    private ulong partnerTxnId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PartnerTxnId {
      get { if ((_hasBits0 & 4) != 0) { return partnerTxnId_; } else { return PartnerTxnIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        partnerTxnId_ = value;
      }
    }
    /// <summary>Gets whether the "partner_txn_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPartnerTxnId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "partner_txn_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPartnerTxnId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "steam_id" field.</summary>
    public const int SteamIdFieldNumber = 4;
    private readonly static ulong SteamIdDefaultValue = 0UL;

    private ulong steamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SteamId {
      get { if ((_hasBits0 & 8) != 0) { return steamId_; } else { return SteamIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        steamId_ = value;
      }
    }
    /// <summary>Gets whether the "steam_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSteamId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "steam_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSteamId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "time_stamp" field.</summary>
    public const int TimeStampFieldNumber = 5;
    private readonly static uint TimeStampDefaultValue = 0;

    private uint timeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TimeStamp {
      get { if ((_hasBits0 & 16) != 0) { return timeStamp_; } else { return TimeStampDefaultValue; } }
      set {
        _hasBits0 |= 16;
        timeStamp_ = value;
      }
    }
    /// <summary>Gets whether the "time_stamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimeStamp {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "time_stamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimeStamp() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "watermark" field.</summary>
    public const int WatermarkFieldNumber = 6;
    private readonly static ulong WatermarkDefaultValue = 0UL;

    private ulong watermark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Watermark {
      get { if ((_hasBits0 & 32) != 0) { return watermark_; } else { return WatermarkDefaultValue; } }
      set {
        _hasBits0 |= 32;
        watermark_ = value;
      }
    }
    /// <summary>Gets whether the "watermark" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWatermark {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "watermark" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWatermark() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "purchase_report_status" field.</summary>
    public const int PurchaseReportStatusFieldNumber = 7;
    private readonly static int PurchaseReportStatusDefaultValue = 0;

    private int purchaseReportStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PurchaseReportStatus {
      get { if ((_hasBits0 & 64) != 0) { return purchaseReportStatus_; } else { return PurchaseReportStatusDefaultValue; } }
      set {
        _hasBits0 |= 64;
        purchaseReportStatus_ = value;
      }
    }
    /// <summary>Gets whether the "purchase_report_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPurchaseReportStatus {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "purchase_report_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPurchaseReportStatus() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 8;
    private readonly static uint CurrencyDefaultValue = 0;

    private uint currency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Currency {
      get { if ((_hasBits0 & 128) != 0) { return currency_; } else { return CurrencyDefaultValue; } }
      set {
        _hasBits0 |= 128;
        currency_ = value;
      }
    }
    /// <summary>Gets whether the "currency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrency {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "currency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrency() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgProcessTransactionOrder.Types.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(74, global::Steam.Protos.Dota2.CMsgProcessTransactionOrder.Types.Item.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgProcessTransactionOrder.Types.Item> items_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgProcessTransactionOrder.Types.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgProcessTransactionOrder.Types.Item> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgProcessTransactionOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgProcessTransactionOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TxnId != other.TxnId) return false;
      if (SteamTxnId != other.SteamTxnId) return false;
      if (PartnerTxnId != other.PartnerTxnId) return false;
      if (SteamId != other.SteamId) return false;
      if (TimeStamp != other.TimeStamp) return false;
      if (Watermark != other.Watermark) return false;
      if (PurchaseReportStatus != other.PurchaseReportStatus) return false;
      if (Currency != other.Currency) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTxnId) hash ^= TxnId.GetHashCode();
      if (HasSteamTxnId) hash ^= SteamTxnId.GetHashCode();
      if (HasPartnerTxnId) hash ^= PartnerTxnId.GetHashCode();
      if (HasSteamId) hash ^= SteamId.GetHashCode();
      if (HasTimeStamp) hash ^= TimeStamp.GetHashCode();
      if (HasWatermark) hash ^= Watermark.GetHashCode();
      if (HasPurchaseReportStatus) hash ^= PurchaseReportStatus.GetHashCode();
      if (HasCurrency) hash ^= Currency.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTxnId) {
        output.WriteRawTag(8);
        output.WriteUInt64(TxnId);
      }
      if (HasSteamTxnId) {
        output.WriteRawTag(16);
        output.WriteUInt64(SteamTxnId);
      }
      if (HasPartnerTxnId) {
        output.WriteRawTag(24);
        output.WriteUInt64(PartnerTxnId);
      }
      if (HasSteamId) {
        output.WriteRawTag(33);
        output.WriteFixed64(SteamId);
      }
      if (HasTimeStamp) {
        output.WriteRawTag(40);
        output.WriteUInt32(TimeStamp);
      }
      if (HasWatermark) {
        output.WriteRawTag(48);
        output.WriteUInt64(Watermark);
      }
      if (HasPurchaseReportStatus) {
        output.WriteRawTag(56);
        output.WriteInt32(PurchaseReportStatus);
      }
      if (HasCurrency) {
        output.WriteRawTag(64);
        output.WriteUInt32(Currency);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTxnId) {
        output.WriteRawTag(8);
        output.WriteUInt64(TxnId);
      }
      if (HasSteamTxnId) {
        output.WriteRawTag(16);
        output.WriteUInt64(SteamTxnId);
      }
      if (HasPartnerTxnId) {
        output.WriteRawTag(24);
        output.WriteUInt64(PartnerTxnId);
      }
      if (HasSteamId) {
        output.WriteRawTag(33);
        output.WriteFixed64(SteamId);
      }
      if (HasTimeStamp) {
        output.WriteRawTag(40);
        output.WriteUInt32(TimeStamp);
      }
      if (HasWatermark) {
        output.WriteRawTag(48);
        output.WriteUInt64(Watermark);
      }
      if (HasPurchaseReportStatus) {
        output.WriteRawTag(56);
        output.WriteInt32(PurchaseReportStatus);
      }
      if (HasCurrency) {
        output.WriteRawTag(64);
        output.WriteUInt32(Currency);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTxnId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TxnId);
      }
      if (HasSteamTxnId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SteamTxnId);
      }
      if (HasPartnerTxnId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PartnerTxnId);
      }
      if (HasSteamId) {
        size += 1 + 8;
      }
      if (HasTimeStamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeStamp);
      }
      if (HasWatermark) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Watermark);
      }
      if (HasPurchaseReportStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PurchaseReportStatus);
      }
      if (HasCurrency) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Currency);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgProcessTransactionOrder other) {
      if (other == null) {
        return;
      }
      if (other.HasTxnId) {
        TxnId = other.TxnId;
      }
      if (other.HasSteamTxnId) {
        SteamTxnId = other.SteamTxnId;
      }
      if (other.HasPartnerTxnId) {
        PartnerTxnId = other.PartnerTxnId;
      }
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      if (other.HasTimeStamp) {
        TimeStamp = other.TimeStamp;
      }
      if (other.HasWatermark) {
        Watermark = other.Watermark;
      }
      if (other.HasPurchaseReportStatus) {
        PurchaseReportStatus = other.PurchaseReportStatus;
      }
      if (other.HasCurrency) {
        Currency = other.Currency;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TxnId = input.ReadUInt64();
            break;
          }
          case 16: {
            SteamTxnId = input.ReadUInt64();
            break;
          }
          case 24: {
            PartnerTxnId = input.ReadUInt64();
            break;
          }
          case 33: {
            SteamId = input.ReadFixed64();
            break;
          }
          case 40: {
            TimeStamp = input.ReadUInt32();
            break;
          }
          case 48: {
            Watermark = input.ReadUInt64();
            break;
          }
          case 56: {
            PurchaseReportStatus = input.ReadInt32();
            break;
          }
          case 64: {
            Currency = input.ReadUInt32();
            break;
          }
          case 74: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TxnId = input.ReadUInt64();
            break;
          }
          case 16: {
            SteamTxnId = input.ReadUInt64();
            break;
          }
          case 24: {
            PartnerTxnId = input.ReadUInt64();
            break;
          }
          case 33: {
            SteamId = input.ReadFixed64();
            break;
          }
          case 40: {
            TimeStamp = input.ReadUInt32();
            break;
          }
          case 48: {
            Watermark = input.ReadUInt64();
            break;
          }
          case 56: {
            PurchaseReportStatus = input.ReadInt32();
            break;
          }
          case 64: {
            Currency = input.ReadUInt32();
            break;
          }
          case 74: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgProcessTransactionOrder message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Item : pb::IMessage<Item>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Item> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgProcessTransactionOrder.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item(Item other) : this() {
          _hasBits0 = other._hasBits0;
          itemDefIndex_ = other.itemDefIndex_;
          itemPrice_ = other.itemPrice_;
          quantity_ = other.quantity_;
          categoryDesc_ = other.categoryDesc_;
          storePurchaseType_ = other.storePurchaseType_;
          sourceReferenceId_ = other.sourceReferenceId_;
          parentStackIndex_ = other.parentStackIndex_;
          defaultPrice_ = other.defaultPrice_;
          isUserFacing_ = other.isUserFacing_;
          priceIndex_ = other.priceIndex_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item Clone() {
          return new Item(this);
        }

        /// <summary>Field number for the "item_def_index" field.</summary>
        public const int ItemDefIndexFieldNumber = 1;
        private readonly static uint ItemDefIndexDefaultValue = 0;

        private uint itemDefIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ItemDefIndex {
          get { if ((_hasBits0 & 1) != 0) { return itemDefIndex_; } else { return ItemDefIndexDefaultValue; } }
          set {
            _hasBits0 |= 1;
            itemDefIndex_ = value;
          }
        }
        /// <summary>Gets whether the "item_def_index" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasItemDefIndex {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "item_def_index" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearItemDefIndex() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "item_price" field.</summary>
        public const int ItemPriceFieldNumber = 2;
        private readonly static uint ItemPriceDefaultValue = 0;

        private uint itemPrice_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ItemPrice {
          get { if ((_hasBits0 & 2) != 0) { return itemPrice_; } else { return ItemPriceDefaultValue; } }
          set {
            _hasBits0 |= 2;
            itemPrice_ = value;
          }
        }
        /// <summary>Gets whether the "item_price" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasItemPrice {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "item_price" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearItemPrice() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 3;
        private readonly static uint QuantityDefaultValue = 0;

        private uint quantity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Quantity {
          get { if ((_hasBits0 & 4) != 0) { return quantity_; } else { return QuantityDefaultValue; } }
          set {
            _hasBits0 |= 4;
            quantity_ = value;
          }
        }
        /// <summary>Gets whether the "quantity" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasQuantity {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "quantity" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearQuantity() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "category_desc" field.</summary>
        public const int CategoryDescFieldNumber = 4;
        private readonly static string CategoryDescDefaultValue = "";

        private string categoryDesc_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CategoryDesc {
          get { return categoryDesc_ ?? CategoryDescDefaultValue; }
          set {
            categoryDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "category_desc" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasCategoryDesc {
          get { return categoryDesc_ != null; }
        }
        /// <summary>Clears the value of the "category_desc" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearCategoryDesc() {
          categoryDesc_ = null;
        }

        /// <summary>Field number for the "store_purchase_type" field.</summary>
        public const int StorePurchaseTypeFieldNumber = 5;
        private readonly static uint StorePurchaseTypeDefaultValue = 0;

        private uint storePurchaseType_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint StorePurchaseType {
          get { if ((_hasBits0 & 8) != 0) { return storePurchaseType_; } else { return StorePurchaseTypeDefaultValue; } }
          set {
            _hasBits0 |= 8;
            storePurchaseType_ = value;
          }
        }
        /// <summary>Gets whether the "store_purchase_type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasStorePurchaseType {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "store_purchase_type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearStorePurchaseType() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "source_reference_id" field.</summary>
        public const int SourceReferenceIdFieldNumber = 6;
        private readonly static ulong SourceReferenceIdDefaultValue = 0UL;

        private ulong sourceReferenceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong SourceReferenceId {
          get { if ((_hasBits0 & 16) != 0) { return sourceReferenceId_; } else { return SourceReferenceIdDefaultValue; } }
          set {
            _hasBits0 |= 16;
            sourceReferenceId_ = value;
          }
        }
        /// <summary>Gets whether the "source_reference_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasSourceReferenceId {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "source_reference_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSourceReferenceId() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "parent_stack_index" field.</summary>
        public const int ParentStackIndexFieldNumber = 7;
        private readonly static int ParentStackIndexDefaultValue = 0;

        private int parentStackIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ParentStackIndex {
          get { if ((_hasBits0 & 32) != 0) { return parentStackIndex_; } else { return ParentStackIndexDefaultValue; } }
          set {
            _hasBits0 |= 32;
            parentStackIndex_ = value;
          }
        }
        /// <summary>Gets whether the "parent_stack_index" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasParentStackIndex {
          get { return (_hasBits0 & 32) != 0; }
        }
        /// <summary>Clears the value of the "parent_stack_index" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearParentStackIndex() {
          _hasBits0 &= ~32;
        }

        /// <summary>Field number for the "default_price" field.</summary>
        public const int DefaultPriceFieldNumber = 8;
        private readonly static bool DefaultPriceDefaultValue = false;

        private bool defaultPrice_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool DefaultPrice {
          get { if ((_hasBits0 & 64) != 0) { return defaultPrice_; } else { return DefaultPriceDefaultValue; } }
          set {
            _hasBits0 |= 64;
            defaultPrice_ = value;
          }
        }
        /// <summary>Gets whether the "default_price" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasDefaultPrice {
          get { return (_hasBits0 & 64) != 0; }
        }
        /// <summary>Clears the value of the "default_price" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearDefaultPrice() {
          _hasBits0 &= ~64;
        }

        /// <summary>Field number for the "is_user_facing" field.</summary>
        public const int IsUserFacingFieldNumber = 9;
        private readonly static bool IsUserFacingDefaultValue = false;

        private bool isUserFacing_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsUserFacing {
          get { if ((_hasBits0 & 128) != 0) { return isUserFacing_; } else { return IsUserFacingDefaultValue; } }
          set {
            _hasBits0 |= 128;
            isUserFacing_ = value;
          }
        }
        /// <summary>Gets whether the "is_user_facing" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasIsUserFacing {
          get { return (_hasBits0 & 128) != 0; }
        }
        /// <summary>Clears the value of the "is_user_facing" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearIsUserFacing() {
          _hasBits0 &= ~128;
        }

        /// <summary>Field number for the "price_index" field.</summary>
        public const int PriceIndexFieldNumber = 11;
        private readonly static int PriceIndexDefaultValue = 0;

        private int priceIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PriceIndex {
          get { if ((_hasBits0 & 256) != 0) { return priceIndex_; } else { return PriceIndexDefaultValue; } }
          set {
            _hasBits0 |= 256;
            priceIndex_ = value;
          }
        }
        /// <summary>Gets whether the "price_index" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPriceIndex {
          get { return (_hasBits0 & 256) != 0; }
        }
        /// <summary>Clears the value of the "price_index" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPriceIndex() {
          _hasBits0 &= ~256;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Item);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Item other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ItemDefIndex != other.ItemDefIndex) return false;
          if (ItemPrice != other.ItemPrice) return false;
          if (Quantity != other.Quantity) return false;
          if (CategoryDesc != other.CategoryDesc) return false;
          if (StorePurchaseType != other.StorePurchaseType) return false;
          if (SourceReferenceId != other.SourceReferenceId) return false;
          if (ParentStackIndex != other.ParentStackIndex) return false;
          if (DefaultPrice != other.DefaultPrice) return false;
          if (IsUserFacing != other.IsUserFacing) return false;
          if (PriceIndex != other.PriceIndex) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasItemDefIndex) hash ^= ItemDefIndex.GetHashCode();
          if (HasItemPrice) hash ^= ItemPrice.GetHashCode();
          if (HasQuantity) hash ^= Quantity.GetHashCode();
          if (HasCategoryDesc) hash ^= CategoryDesc.GetHashCode();
          if (HasStorePurchaseType) hash ^= StorePurchaseType.GetHashCode();
          if (HasSourceReferenceId) hash ^= SourceReferenceId.GetHashCode();
          if (HasParentStackIndex) hash ^= ParentStackIndex.GetHashCode();
          if (HasDefaultPrice) hash ^= DefaultPrice.GetHashCode();
          if (HasIsUserFacing) hash ^= IsUserFacing.GetHashCode();
          if (HasPriceIndex) hash ^= PriceIndex.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasItemDefIndex) {
            output.WriteRawTag(8);
            output.WriteUInt32(ItemDefIndex);
          }
          if (HasItemPrice) {
            output.WriteRawTag(16);
            output.WriteUInt32(ItemPrice);
          }
          if (HasQuantity) {
            output.WriteRawTag(24);
            output.WriteUInt32(Quantity);
          }
          if (HasCategoryDesc) {
            output.WriteRawTag(34);
            output.WriteString(CategoryDesc);
          }
          if (HasStorePurchaseType) {
            output.WriteRawTag(40);
            output.WriteUInt32(StorePurchaseType);
          }
          if (HasSourceReferenceId) {
            output.WriteRawTag(48);
            output.WriteUInt64(SourceReferenceId);
          }
          if (HasParentStackIndex) {
            output.WriteRawTag(56);
            output.WriteInt32(ParentStackIndex);
          }
          if (HasDefaultPrice) {
            output.WriteRawTag(64);
            output.WriteBool(DefaultPrice);
          }
          if (HasIsUserFacing) {
            output.WriteRawTag(72);
            output.WriteBool(IsUserFacing);
          }
          if (HasPriceIndex) {
            output.WriteRawTag(88);
            output.WriteInt32(PriceIndex);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasItemDefIndex) {
            output.WriteRawTag(8);
            output.WriteUInt32(ItemDefIndex);
          }
          if (HasItemPrice) {
            output.WriteRawTag(16);
            output.WriteUInt32(ItemPrice);
          }
          if (HasQuantity) {
            output.WriteRawTag(24);
            output.WriteUInt32(Quantity);
          }
          if (HasCategoryDesc) {
            output.WriteRawTag(34);
            output.WriteString(CategoryDesc);
          }
          if (HasStorePurchaseType) {
            output.WriteRawTag(40);
            output.WriteUInt32(StorePurchaseType);
          }
          if (HasSourceReferenceId) {
            output.WriteRawTag(48);
            output.WriteUInt64(SourceReferenceId);
          }
          if (HasParentStackIndex) {
            output.WriteRawTag(56);
            output.WriteInt32(ParentStackIndex);
          }
          if (HasDefaultPrice) {
            output.WriteRawTag(64);
            output.WriteBool(DefaultPrice);
          }
          if (HasIsUserFacing) {
            output.WriteRawTag(72);
            output.WriteBool(IsUserFacing);
          }
          if (HasPriceIndex) {
            output.WriteRawTag(88);
            output.WriteInt32(PriceIndex);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasItemDefIndex) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemDefIndex);
          }
          if (HasItemPrice) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemPrice);
          }
          if (HasQuantity) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
          }
          if (HasCategoryDesc) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CategoryDesc);
          }
          if (HasStorePurchaseType) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StorePurchaseType);
          }
          if (HasSourceReferenceId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SourceReferenceId);
          }
          if (HasParentStackIndex) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ParentStackIndex);
          }
          if (HasDefaultPrice) {
            size += 1 + 1;
          }
          if (HasIsUserFacing) {
            size += 1 + 1;
          }
          if (HasPriceIndex) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PriceIndex);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Item other) {
          if (other == null) {
            return;
          }
          if (other.HasItemDefIndex) {
            ItemDefIndex = other.ItemDefIndex;
          }
          if (other.HasItemPrice) {
            ItemPrice = other.ItemPrice;
          }
          if (other.HasQuantity) {
            Quantity = other.Quantity;
          }
          if (other.HasCategoryDesc) {
            CategoryDesc = other.CategoryDesc;
          }
          if (other.HasStorePurchaseType) {
            StorePurchaseType = other.StorePurchaseType;
          }
          if (other.HasSourceReferenceId) {
            SourceReferenceId = other.SourceReferenceId;
          }
          if (other.HasParentStackIndex) {
            ParentStackIndex = other.ParentStackIndex;
          }
          if (other.HasDefaultPrice) {
            DefaultPrice = other.DefaultPrice;
          }
          if (other.HasIsUserFacing) {
            IsUserFacing = other.IsUserFacing;
          }
          if (other.HasPriceIndex) {
            PriceIndex = other.PriceIndex;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ItemDefIndex = input.ReadUInt32();
                break;
              }
              case 16: {
                ItemPrice = input.ReadUInt32();
                break;
              }
              case 24: {
                Quantity = input.ReadUInt32();
                break;
              }
              case 34: {
                CategoryDesc = input.ReadString();
                break;
              }
              case 40: {
                StorePurchaseType = input.ReadUInt32();
                break;
              }
              case 48: {
                SourceReferenceId = input.ReadUInt64();
                break;
              }
              case 56: {
                ParentStackIndex = input.ReadInt32();
                break;
              }
              case 64: {
                DefaultPrice = input.ReadBool();
                break;
              }
              case 72: {
                IsUserFacing = input.ReadBool();
                break;
              }
              case 88: {
                PriceIndex = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ItemDefIndex = input.ReadUInt32();
                break;
              }
              case 16: {
                ItemPrice = input.ReadUInt32();
                break;
              }
              case 24: {
                Quantity = input.ReadUInt32();
                break;
              }
              case 34: {
                CategoryDesc = input.ReadString();
                break;
              }
              case 40: {
                StorePurchaseType = input.ReadUInt32();
                break;
              }
              case 48: {
                SourceReferenceId = input.ReadUInt64();
                break;
              }
              case 56: {
                ParentStackIndex = input.ReadInt32();
                break;
              }
              case 64: {
                DefaultPrice = input.ReadBool();
                break;
              }
              case 72: {
                IsUserFacing = input.ReadBool();
                break;
              }
              case 88: {
                PriceIndex = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgGCToGCStoreProcessCDKeyTransaction : pb::IMessage<CMsgGCToGCStoreProcessCDKeyTransaction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCStoreProcessCDKeyTransaction> _parser = new pb::MessageParser<CMsgGCToGCStoreProcessCDKeyTransaction>(() => new CMsgGCToGCStoreProcessCDKeyTransaction());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCStoreProcessCDKeyTransaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCStoreProcessCDKeyTransaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCStoreProcessCDKeyTransaction(CMsgGCToGCStoreProcessCDKeyTransaction other) : this() {
      _hasBits0 = other._hasBits0;
      order_ = other.order_ != null ? other.order_.Clone() : null;
      reasonCode_ = other.reasonCode_;
      partner_ = other.partner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCStoreProcessCDKeyTransaction Clone() {
      return new CMsgGCToGCStoreProcessCDKeyTransaction(this);
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 1;
    private global::Steam.Protos.Dota2.CMsgProcessTransactionOrder order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CMsgProcessTransactionOrder Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "reason_code" field.</summary>
    public const int ReasonCodeFieldNumber = 2;
    private readonly static uint ReasonCodeDefaultValue = 0;

    private uint reasonCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ReasonCode {
      get { if ((_hasBits0 & 1) != 0) { return reasonCode_; } else { return ReasonCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reasonCode_ = value;
      }
    }
    /// <summary>Gets whether the "reason_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReasonCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "reason_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReasonCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "partner" field.</summary>
    public const int PartnerFieldNumber = 3;
    private readonly static uint PartnerDefaultValue = 0;

    private uint partner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Partner {
      get { if ((_hasBits0 & 2) != 0) { return partner_; } else { return PartnerDefaultValue; } }
      set {
        _hasBits0 |= 2;
        partner_ = value;
      }
    }
    /// <summary>Gets whether the "partner" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPartner {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "partner" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPartner() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCStoreProcessCDKeyTransaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCStoreProcessCDKeyTransaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Order, other.Order)) return false;
      if (ReasonCode != other.ReasonCode) return false;
      if (Partner != other.Partner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (order_ != null) hash ^= Order.GetHashCode();
      if (HasReasonCode) hash ^= ReasonCode.GetHashCode();
      if (HasPartner) hash ^= Partner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (order_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Order);
      }
      if (HasReasonCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(ReasonCode);
      }
      if (HasPartner) {
        output.WriteRawTag(24);
        output.WriteUInt32(Partner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (order_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Order);
      }
      if (HasReasonCode) {
        output.WriteRawTag(16);
        output.WriteUInt32(ReasonCode);
      }
      if (HasPartner) {
        output.WriteRawTag(24);
        output.WriteUInt32(Partner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (order_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Order);
      }
      if (HasReasonCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ReasonCode);
      }
      if (HasPartner) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Partner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCStoreProcessCDKeyTransaction other) {
      if (other == null) {
        return;
      }
      if (other.order_ != null) {
        if (order_ == null) {
          Order = new global::Steam.Protos.Dota2.CMsgProcessTransactionOrder();
        }
        Order.MergeFrom(other.Order);
      }
      if (other.HasReasonCode) {
        ReasonCode = other.ReasonCode;
      }
      if (other.HasPartner) {
        Partner = other.Partner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (order_ == null) {
              Order = new global::Steam.Protos.Dota2.CMsgProcessTransactionOrder();
            }
            input.ReadMessage(Order);
            break;
          }
          case 16: {
            ReasonCode = input.ReadUInt32();
            break;
          }
          case 24: {
            Partner = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (order_ == null) {
              Order = new global::Steam.Protos.Dota2.CMsgProcessTransactionOrder();
            }
            input.ReadMessage(Order);
            break;
          }
          case 16: {
            ReasonCode = input.ReadUInt32();
            break;
          }
          case 24: {
            Partner = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCStoreProcessCDKeyTransactionResponse : pb::IMessage<CMsgGCToGCStoreProcessCDKeyTransactionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCStoreProcessCDKeyTransactionResponse> _parser = new pb::MessageParser<CMsgGCToGCStoreProcessCDKeyTransactionResponse>(() => new CMsgGCToGCStoreProcessCDKeyTransactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCStoreProcessCDKeyTransactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCStoreProcessCDKeyTransactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCStoreProcessCDKeyTransactionResponse(CMsgGCToGCStoreProcessCDKeyTransactionResponse other) : this() {
      _hasBits0 = other._hasBits0;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCStoreProcessCDKeyTransactionResponse Clone() {
      return new CMsgGCToGCStoreProcessCDKeyTransactionResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCStoreProcessCDKeyTransactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCStoreProcessCDKeyTransactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCStoreProcessCDKeyTransactionResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCStoreProcessSettlement : pb::IMessage<CMsgGCToGCStoreProcessSettlement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCStoreProcessSettlement> _parser = new pb::MessageParser<CMsgGCToGCStoreProcessSettlement>(() => new CMsgGCToGCStoreProcessSettlement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCStoreProcessSettlement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCStoreProcessSettlement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCStoreProcessSettlement(CMsgGCToGCStoreProcessSettlement other) : this() {
      order_ = other.order_ != null ? other.order_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCStoreProcessSettlement Clone() {
      return new CMsgGCToGCStoreProcessSettlement(this);
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 1;
    private global::Steam.Protos.Dota2.CMsgProcessTransactionOrder order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CMsgProcessTransactionOrder Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCStoreProcessSettlement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCStoreProcessSettlement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Order, other.Order)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (order_ != null) hash ^= Order.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (order_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (order_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (order_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Order);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCStoreProcessSettlement other) {
      if (other == null) {
        return;
      }
      if (other.order_ != null) {
        if (order_ == null) {
          Order = new global::Steam.Protos.Dota2.CMsgProcessTransactionOrder();
        }
        Order.MergeFrom(other.Order);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (order_ == null) {
              Order = new global::Steam.Protos.Dota2.CMsgProcessTransactionOrder();
            }
            input.ReadMessage(Order);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (order_ == null) {
              Order = new global::Steam.Protos.Dota2.CMsgProcessTransactionOrder();
            }
            input.ReadMessage(Order);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCStoreProcessSettlementResponse : pb::IMessage<CMsgGCToGCStoreProcessSettlementResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCStoreProcessSettlementResponse> _parser = new pb::MessageParser<CMsgGCToGCStoreProcessSettlementResponse>(() => new CMsgGCToGCStoreProcessSettlementResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCStoreProcessSettlementResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCStoreProcessSettlementResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCStoreProcessSettlementResponse(CMsgGCToGCStoreProcessSettlementResponse other) : this() {
      _hasBits0 = other._hasBits0;
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCStoreProcessSettlementResponse Clone() {
      return new CMsgGCToGCStoreProcessSettlementResponse(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private readonly static bool SuccessDefaultValue = false;

    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { if ((_hasBits0 & 1) != 0) { return success_; } else { return SuccessDefaultValue; } }
      set {
        _hasBits0 |= 1;
        success_ = value;
      }
    }
    /// <summary>Gets whether the "success" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSuccess {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "success" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSuccess() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCStoreProcessSettlementResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCStoreProcessSettlementResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSuccess) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSuccess) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSuccess) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCStoreProcessSettlementResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasSuccess) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCBroadcastConsoleCommand : pb::IMessage<CMsgGCToGCBroadcastConsoleCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCBroadcastConsoleCommand> _parser = new pb::MessageParser<CMsgGCToGCBroadcastConsoleCommand>(() => new CMsgGCToGCBroadcastConsoleCommand());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCBroadcastConsoleCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCBroadcastConsoleCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCBroadcastConsoleCommand(CMsgGCToGCBroadcastConsoleCommand other) : this() {
      _hasBits0 = other._hasBits0;
      conCommand_ = other.conCommand_;
      reportOutput_ = other.reportOutput_;
      sendingGc_ = other.sendingGc_;
      outputInitiator_ = other.outputInitiator_;
      senderSource_ = other.senderSource_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCBroadcastConsoleCommand Clone() {
      return new CMsgGCToGCBroadcastConsoleCommand(this);
    }

    /// <summary>Field number for the "con_command" field.</summary>
    public const int ConCommandFieldNumber = 1;
    private readonly static string ConCommandDefaultValue = "";

    private string conCommand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConCommand {
      get { return conCommand_ ?? ConCommandDefaultValue; }
      set {
        conCommand_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "con_command" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConCommand {
      get { return conCommand_ != null; }
    }
    /// <summary>Clears the value of the "con_command" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConCommand() {
      conCommand_ = null;
    }

    /// <summary>Field number for the "report_output" field.</summary>
    public const int ReportOutputFieldNumber = 2;
    private readonly static bool ReportOutputDefaultValue = false;

    private bool reportOutput_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReportOutput {
      get { if ((_hasBits0 & 1) != 0) { return reportOutput_; } else { return ReportOutputDefaultValue; } }
      set {
        _hasBits0 |= 1;
        reportOutput_ = value;
      }
    }
    /// <summary>Gets whether the "report_output" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReportOutput {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "report_output" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReportOutput() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sending_gc" field.</summary>
    public const int SendingGcFieldNumber = 3;
    private readonly static int SendingGcDefaultValue = -1;

    private int sendingGc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendingGc {
      get { if ((_hasBits0 & 2) != 0) { return sendingGc_; } else { return SendingGcDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sendingGc_ = value;
      }
    }
    /// <summary>Gets whether the "sending_gc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSendingGc {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sending_gc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSendingGc() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "output_initiator" field.</summary>
    public const int OutputInitiatorFieldNumber = 4;
    private readonly static string OutputInitiatorDefaultValue = "";

    private string outputInitiator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OutputInitiator {
      get { return outputInitiator_ ?? OutputInitiatorDefaultValue; }
      set {
        outputInitiator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "output_initiator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOutputInitiator {
      get { return outputInitiator_ != null; }
    }
    /// <summary>Clears the value of the "output_initiator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOutputInitiator() {
      outputInitiator_ = null;
    }

    /// <summary>Field number for the "sender_source" field.</summary>
    public const int SenderSourceFieldNumber = 5;
    private readonly static string SenderSourceDefaultValue = "";

    private string senderSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderSource {
      get { return senderSource_ ?? SenderSourceDefaultValue; }
      set {
        senderSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "sender_source" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSenderSource {
      get { return senderSource_ != null; }
    }
    /// <summary>Clears the value of the "sender_source" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSenderSource() {
      senderSource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCBroadcastConsoleCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCBroadcastConsoleCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConCommand != other.ConCommand) return false;
      if (ReportOutput != other.ReportOutput) return false;
      if (SendingGc != other.SendingGc) return false;
      if (OutputInitiator != other.OutputInitiator) return false;
      if (SenderSource != other.SenderSource) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasConCommand) hash ^= ConCommand.GetHashCode();
      if (HasReportOutput) hash ^= ReportOutput.GetHashCode();
      if (HasSendingGc) hash ^= SendingGc.GetHashCode();
      if (HasOutputInitiator) hash ^= OutputInitiator.GetHashCode();
      if (HasSenderSource) hash ^= SenderSource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasConCommand) {
        output.WriteRawTag(10);
        output.WriteString(ConCommand);
      }
      if (HasReportOutput) {
        output.WriteRawTag(16);
        output.WriteBool(ReportOutput);
      }
      if (HasSendingGc) {
        output.WriteRawTag(24);
        output.WriteInt32(SendingGc);
      }
      if (HasOutputInitiator) {
        output.WriteRawTag(34);
        output.WriteString(OutputInitiator);
      }
      if (HasSenderSource) {
        output.WriteRawTag(42);
        output.WriteString(SenderSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasConCommand) {
        output.WriteRawTag(10);
        output.WriteString(ConCommand);
      }
      if (HasReportOutput) {
        output.WriteRawTag(16);
        output.WriteBool(ReportOutput);
      }
      if (HasSendingGc) {
        output.WriteRawTag(24);
        output.WriteInt32(SendingGc);
      }
      if (HasOutputInitiator) {
        output.WriteRawTag(34);
        output.WriteString(OutputInitiator);
      }
      if (HasSenderSource) {
        output.WriteRawTag(42);
        output.WriteString(SenderSource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasConCommand) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConCommand);
      }
      if (HasReportOutput) {
        size += 1 + 1;
      }
      if (HasSendingGc) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendingGc);
      }
      if (HasOutputInitiator) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OutputInitiator);
      }
      if (HasSenderSource) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderSource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCBroadcastConsoleCommand other) {
      if (other == null) {
        return;
      }
      if (other.HasConCommand) {
        ConCommand = other.ConCommand;
      }
      if (other.HasReportOutput) {
        ReportOutput = other.ReportOutput;
      }
      if (other.HasSendingGc) {
        SendingGc = other.SendingGc;
      }
      if (other.HasOutputInitiator) {
        OutputInitiator = other.OutputInitiator;
      }
      if (other.HasSenderSource) {
        SenderSource = other.SenderSource;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConCommand = input.ReadString();
            break;
          }
          case 16: {
            ReportOutput = input.ReadBool();
            break;
          }
          case 24: {
            SendingGc = input.ReadInt32();
            break;
          }
          case 34: {
            OutputInitiator = input.ReadString();
            break;
          }
          case 42: {
            SenderSource = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ConCommand = input.ReadString();
            break;
          }
          case 16: {
            ReportOutput = input.ReadBool();
            break;
          }
          case 24: {
            SendingGc = input.ReadInt32();
            break;
          }
          case 34: {
            OutputInitiator = input.ReadString();
            break;
          }
          case 42: {
            SenderSource = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCConsoleOutput : pb::IMessage<CMsgGCToGCConsoleOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCConsoleOutput> _parser = new pb::MessageParser<CMsgGCToGCConsoleOutput>(() => new CMsgGCToGCConsoleOutput());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCConsoleOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCConsoleOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCConsoleOutput(CMsgGCToGCConsoleOutput other) : this() {
      _hasBits0 = other._hasBits0;
      initiator_ = other.initiator_;
      sendingGc_ = other.sendingGc_;
      msgs_ = other.msgs_.Clone();
      isLastForSourceJob_ = other.isLastForSourceJob_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCConsoleOutput Clone() {
      return new CMsgGCToGCConsoleOutput(this);
    }

    /// <summary>Field number for the "initiator" field.</summary>
    public const int InitiatorFieldNumber = 1;
    private readonly static string InitiatorDefaultValue = "";

    private string initiator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Initiator {
      get { return initiator_ ?? InitiatorDefaultValue; }
      set {
        initiator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "initiator" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasInitiator {
      get { return initiator_ != null; }
    }
    /// <summary>Clears the value of the "initiator" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInitiator() {
      initiator_ = null;
    }

    /// <summary>Field number for the "sending_gc" field.</summary>
    public const int SendingGcFieldNumber = 2;
    private readonly static int SendingGcDefaultValue = -1;

    private int sendingGc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendingGc {
      get { if ((_hasBits0 & 1) != 0) { return sendingGc_; } else { return SendingGcDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sendingGc_ = value;
      }
    }
    /// <summary>Gets whether the "sending_gc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSendingGc {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sending_gc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSendingGc() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "msgs" field.</summary>
    public const int MsgsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgGCToGCConsoleOutput.Types.OutputLine> _repeated_msgs_codec
        = pb::FieldCodec.ForMessage(26, global::Steam.Protos.Dota2.CMsgGCToGCConsoleOutput.Types.OutputLine.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCConsoleOutput.Types.OutputLine> msgs_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCConsoleOutput.Types.OutputLine>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCConsoleOutput.Types.OutputLine> Msgs {
      get { return msgs_; }
    }

    /// <summary>Field number for the "is_last_for_source_job" field.</summary>
    public const int IsLastForSourceJobFieldNumber = 4;
    private readonly static bool IsLastForSourceJobDefaultValue = false;

    private bool isLastForSourceJob_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsLastForSourceJob {
      get { if ((_hasBits0 & 2) != 0) { return isLastForSourceJob_; } else { return IsLastForSourceJobDefaultValue; } }
      set {
        _hasBits0 |= 2;
        isLastForSourceJob_ = value;
      }
    }
    /// <summary>Gets whether the "is_last_for_source_job" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIsLastForSourceJob {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "is_last_for_source_job" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIsLastForSourceJob() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCConsoleOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCConsoleOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Initiator != other.Initiator) return false;
      if (SendingGc != other.SendingGc) return false;
      if(!msgs_.Equals(other.msgs_)) return false;
      if (IsLastForSourceJob != other.IsLastForSourceJob) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInitiator) hash ^= Initiator.GetHashCode();
      if (HasSendingGc) hash ^= SendingGc.GetHashCode();
      hash ^= msgs_.GetHashCode();
      if (HasIsLastForSourceJob) hash ^= IsLastForSourceJob.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInitiator) {
        output.WriteRawTag(10);
        output.WriteString(Initiator);
      }
      if (HasSendingGc) {
        output.WriteRawTag(16);
        output.WriteInt32(SendingGc);
      }
      msgs_.WriteTo(output, _repeated_msgs_codec);
      if (HasIsLastForSourceJob) {
        output.WriteRawTag(32);
        output.WriteBool(IsLastForSourceJob);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInitiator) {
        output.WriteRawTag(10);
        output.WriteString(Initiator);
      }
      if (HasSendingGc) {
        output.WriteRawTag(16);
        output.WriteInt32(SendingGc);
      }
      msgs_.WriteTo(ref output, _repeated_msgs_codec);
      if (HasIsLastForSourceJob) {
        output.WriteRawTag(32);
        output.WriteBool(IsLastForSourceJob);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasInitiator) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Initiator);
      }
      if (HasSendingGc) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendingGc);
      }
      size += msgs_.CalculateSize(_repeated_msgs_codec);
      if (HasIsLastForSourceJob) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCConsoleOutput other) {
      if (other == null) {
        return;
      }
      if (other.HasInitiator) {
        Initiator = other.Initiator;
      }
      if (other.HasSendingGc) {
        SendingGc = other.SendingGc;
      }
      msgs_.Add(other.msgs_);
      if (other.HasIsLastForSourceJob) {
        IsLastForSourceJob = other.IsLastForSourceJob;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Initiator = input.ReadString();
            break;
          }
          case 16: {
            SendingGc = input.ReadInt32();
            break;
          }
          case 26: {
            msgs_.AddEntriesFrom(input, _repeated_msgs_codec);
            break;
          }
          case 32: {
            IsLastForSourceJob = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Initiator = input.ReadString();
            break;
          }
          case 16: {
            SendingGc = input.ReadInt32();
            break;
          }
          case 26: {
            msgs_.AddEntriesFrom(ref input, _repeated_msgs_codec);
            break;
          }
          case 32: {
            IsLastForSourceJob = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgGCToGCConsoleOutput message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class OutputLine : pb::IMessage<OutputLine>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<OutputLine> _parser = new pb::MessageParser<OutputLine>(() => new OutputLine());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<OutputLine> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgGCToGCConsoleOutput.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OutputLine() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OutputLine(OutputLine other) : this() {
          _hasBits0 = other._hasBits0;
          text_ = other.text_;
          spewLevel_ = other.spewLevel_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public OutputLine Clone() {
          return new OutputLine(this);
        }

        /// <summary>Field number for the "text" field.</summary>
        public const int TextFieldNumber = 1;
        private readonly static string TextDefaultValue = "";

        private string text_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Text {
          get { return text_ ?? TextDefaultValue; }
          set {
            text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "text" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasText {
          get { return text_ != null; }
        }
        /// <summary>Clears the value of the "text" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearText() {
          text_ = null;
        }

        /// <summary>Field number for the "spew_level" field.</summary>
        public const int SpewLevelFieldNumber = 2;
        private readonly static uint SpewLevelDefaultValue = 0;

        private uint spewLevel_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint SpewLevel {
          get { if ((_hasBits0 & 1) != 0) { return spewLevel_; } else { return SpewLevelDefaultValue; } }
          set {
            _hasBits0 |= 1;
            spewLevel_ = value;
          }
        }
        /// <summary>Gets whether the "spew_level" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasSpewLevel {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "spew_level" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSpewLevel() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as OutputLine);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(OutputLine other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Text != other.Text) return false;
          if (SpewLevel != other.SpewLevel) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasText) hash ^= Text.GetHashCode();
          if (HasSpewLevel) hash ^= SpewLevel.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasText) {
            output.WriteRawTag(10);
            output.WriteString(Text);
          }
          if (HasSpewLevel) {
            output.WriteRawTag(16);
            output.WriteUInt32(SpewLevel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasText) {
            output.WriteRawTag(10);
            output.WriteString(Text);
          }
          if (HasSpewLevel) {
            output.WriteRawTag(16);
            output.WriteUInt32(SpewLevel);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasText) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
          }
          if (HasSpewLevel) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SpewLevel);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(OutputLine other) {
          if (other == null) {
            return;
          }
          if (other.HasText) {
            Text = other.Text;
          }
          if (other.HasSpewLevel) {
            SpewLevel = other.SpewLevel;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Text = input.ReadString();
                break;
              }
              case 16: {
                SpewLevel = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Text = input.ReadString();
                break;
              }
              case 16: {
                SpewLevel = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgItemAges : pb::IMessage<CMsgItemAges>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgItemAges> _parser = new pb::MessageParser<CMsgItemAges>(() => new CMsgItemAges());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgItemAges> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgItemAges() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgItemAges(CMsgItemAges other) : this() {
      maxItemIdTimestamps_ = other.maxItemIdTimestamps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgItemAges Clone() {
      return new CMsgItemAges(this);
    }

    /// <summary>Field number for the "max_item_id_timestamps" field.</summary>
    public const int MaxItemIdTimestampsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgItemAges.Types.MaxItemIDTimestamp> _repeated_maxItemIdTimestamps_codec
        = pb::FieldCodec.ForMessage(10, global::Steam.Protos.Dota2.CMsgItemAges.Types.MaxItemIDTimestamp.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgItemAges.Types.MaxItemIDTimestamp> maxItemIdTimestamps_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgItemAges.Types.MaxItemIDTimestamp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgItemAges.Types.MaxItemIDTimestamp> MaxItemIdTimestamps {
      get { return maxItemIdTimestamps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgItemAges);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgItemAges other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!maxItemIdTimestamps_.Equals(other.maxItemIdTimestamps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= maxItemIdTimestamps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      maxItemIdTimestamps_.WriteTo(output, _repeated_maxItemIdTimestamps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      maxItemIdTimestamps_.WriteTo(ref output, _repeated_maxItemIdTimestamps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += maxItemIdTimestamps_.CalculateSize(_repeated_maxItemIdTimestamps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgItemAges other) {
      if (other == null) {
        return;
      }
      maxItemIdTimestamps_.Add(other.maxItemIdTimestamps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            maxItemIdTimestamps_.AddEntriesFrom(input, _repeated_maxItemIdTimestamps_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            maxItemIdTimestamps_.AddEntriesFrom(ref input, _repeated_maxItemIdTimestamps_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgItemAges message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class MaxItemIDTimestamp : pb::IMessage<MaxItemIDTimestamp>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MaxItemIDTimestamp> _parser = new pb::MessageParser<MaxItemIDTimestamp>(() => new MaxItemIDTimestamp());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MaxItemIDTimestamp> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgItemAges.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MaxItemIDTimestamp() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MaxItemIDTimestamp(MaxItemIDTimestamp other) : this() {
          _hasBits0 = other._hasBits0;
          timestamp_ = other.timestamp_;
          maxItemId_ = other.maxItemId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MaxItemIDTimestamp Clone() {
          return new MaxItemIDTimestamp(this);
        }

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 1;
        private readonly static uint TimestampDefaultValue = 0;

        private uint timestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Timestamp {
          get { if ((_hasBits0 & 1) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
          set {
            _hasBits0 |= 1;
            timestamp_ = value;
          }
        }
        /// <summary>Gets whether the "timestamp" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasTimestamp {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "timestamp" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearTimestamp() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "max_item_id" field.</summary>
        public const int MaxItemIdFieldNumber = 2;
        private readonly static ulong MaxItemIdDefaultValue = 0UL;

        private ulong maxItemId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong MaxItemId {
          get { if ((_hasBits0 & 2) != 0) { return maxItemId_; } else { return MaxItemIdDefaultValue; } }
          set {
            _hasBits0 |= 2;
            maxItemId_ = value;
          }
        }
        /// <summary>Gets whether the "max_item_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasMaxItemId {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "max_item_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearMaxItemId() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MaxItemIDTimestamp);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MaxItemIDTimestamp other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Timestamp != other.Timestamp) return false;
          if (MaxItemId != other.MaxItemId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasTimestamp) hash ^= Timestamp.GetHashCode();
          if (HasMaxItemId) hash ^= MaxItemId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasTimestamp) {
            output.WriteRawTag(8);
            output.WriteUInt32(Timestamp);
          }
          if (HasMaxItemId) {
            output.WriteRawTag(16);
            output.WriteUInt64(MaxItemId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasTimestamp) {
            output.WriteRawTag(8);
            output.WriteUInt32(Timestamp);
          }
          if (HasMaxItemId) {
            output.WriteRawTag(16);
            output.WriteUInt64(MaxItemId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasTimestamp) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Timestamp);
          }
          if (HasMaxItemId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxItemId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MaxItemIDTimestamp other) {
          if (other == null) {
            return;
          }
          if (other.HasTimestamp) {
            Timestamp = other.Timestamp;
          }
          if (other.HasMaxItemId) {
            MaxItemId = other.MaxItemId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Timestamp = input.ReadUInt32();
                break;
              }
              case 16: {
                MaxItemId = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Timestamp = input.ReadUInt32();
                break;
              }
              case 16: {
                MaxItemId = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgGCToGCInternalTestMsg : pb::IMessage<CMsgGCToGCInternalTestMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCInternalTestMsg> _parser = new pb::MessageParser<CMsgGCToGCInternalTestMsg>(() => new CMsgGCToGCInternalTestMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCInternalTestMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCInternalTestMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCInternalTestMsg(CMsgGCToGCInternalTestMsg other) : this() {
      _hasBits0 = other._hasBits0;
      sendingGc_ = other.sendingGc_;
      senderId_ = other.senderId_;
      context_ = other.context_;
      messageId_ = other.messageId_;
      messageBody_ = other.messageBody_;
      jobIdSource_ = other.jobIdSource_;
      jobIdTarget_ = other.jobIdTarget_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCInternalTestMsg Clone() {
      return new CMsgGCToGCInternalTestMsg(this);
    }

    /// <summary>Field number for the "sending_gc" field.</summary>
    public const int SendingGcFieldNumber = 1;
    private readonly static int SendingGcDefaultValue = -1;

    private int sendingGc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SendingGc {
      get { if ((_hasBits0 & 1) != 0) { return sendingGc_; } else { return SendingGcDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sendingGc_ = value;
      }
    }
    /// <summary>Gets whether the "sending_gc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSendingGc {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sending_gc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSendingGc() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sender_id" field.</summary>
    public const int SenderIdFieldNumber = 2;
    private readonly static ulong SenderIdDefaultValue = 0UL;

    private ulong senderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SenderId {
      get { if ((_hasBits0 & 2) != 0) { return senderId_; } else { return SenderIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        senderId_ = value;
      }
    }
    /// <summary>Gets whether the "sender_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSenderId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sender_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSenderId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 3;
    private readonly static uint ContextDefaultValue = 0;

    private uint context_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Context {
      get { if ((_hasBits0 & 4) != 0) { return context_; } else { return ContextDefaultValue; } }
      set {
        _hasBits0 |= 4;
        context_ = value;
      }
    }
    /// <summary>Gets whether the "context" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContext {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "context" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContext() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "message_id" field.</summary>
    public const int MessageIdFieldNumber = 4;
    private readonly static uint MessageIdDefaultValue = 0;

    private uint messageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MessageId {
      get { if ((_hasBits0 & 8) != 0) { return messageId_; } else { return MessageIdDefaultValue; } }
      set {
        _hasBits0 |= 8;
        messageId_ = value;
      }
    }
    /// <summary>Gets whether the "message_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessageId {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "message_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageId() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "message_body" field.</summary>
    public const int MessageBodyFieldNumber = 5;
    private readonly static pb::ByteString MessageBodyDefaultValue = pb::ByteString.Empty;

    private pb::ByteString messageBody_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MessageBody {
      get { return messageBody_ ?? MessageBodyDefaultValue; }
      set {
        messageBody_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message_body" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessageBody {
      get { return messageBody_ != null; }
    }
    /// <summary>Clears the value of the "message_body" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageBody() {
      messageBody_ = null;
    }

    /// <summary>Field number for the "job_id_source" field.</summary>
    public const int JobIdSourceFieldNumber = 6;
    private readonly static ulong JobIdSourceDefaultValue = 0UL;

    private ulong jobIdSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong JobIdSource {
      get { if ((_hasBits0 & 16) != 0) { return jobIdSource_; } else { return JobIdSourceDefaultValue; } }
      set {
        _hasBits0 |= 16;
        jobIdSource_ = value;
      }
    }
    /// <summary>Gets whether the "job_id_source" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasJobIdSource {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "job_id_source" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearJobIdSource() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "job_id_target" field.</summary>
    public const int JobIdTargetFieldNumber = 7;
    private readonly static ulong JobIdTargetDefaultValue = 0UL;

    private ulong jobIdTarget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong JobIdTarget {
      get { if ((_hasBits0 & 32) != 0) { return jobIdTarget_; } else { return JobIdTargetDefaultValue; } }
      set {
        _hasBits0 |= 32;
        jobIdTarget_ = value;
      }
    }
    /// <summary>Gets whether the "job_id_target" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasJobIdTarget {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "job_id_target" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearJobIdTarget() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCInternalTestMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCInternalTestMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SendingGc != other.SendingGc) return false;
      if (SenderId != other.SenderId) return false;
      if (Context != other.Context) return false;
      if (MessageId != other.MessageId) return false;
      if (MessageBody != other.MessageBody) return false;
      if (JobIdSource != other.JobIdSource) return false;
      if (JobIdTarget != other.JobIdTarget) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSendingGc) hash ^= SendingGc.GetHashCode();
      if (HasSenderId) hash ^= SenderId.GetHashCode();
      if (HasContext) hash ^= Context.GetHashCode();
      if (HasMessageId) hash ^= MessageId.GetHashCode();
      if (HasMessageBody) hash ^= MessageBody.GetHashCode();
      if (HasJobIdSource) hash ^= JobIdSource.GetHashCode();
      if (HasJobIdTarget) hash ^= JobIdTarget.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSendingGc) {
        output.WriteRawTag(8);
        output.WriteInt32(SendingGc);
      }
      if (HasSenderId) {
        output.WriteRawTag(17);
        output.WriteFixed64(SenderId);
      }
      if (HasContext) {
        output.WriteRawTag(24);
        output.WriteUInt32(Context);
      }
      if (HasMessageId) {
        output.WriteRawTag(32);
        output.WriteUInt32(MessageId);
      }
      if (HasMessageBody) {
        output.WriteRawTag(42);
        output.WriteBytes(MessageBody);
      }
      if (HasJobIdSource) {
        output.WriteRawTag(49);
        output.WriteFixed64(JobIdSource);
      }
      if (HasJobIdTarget) {
        output.WriteRawTag(57);
        output.WriteFixed64(JobIdTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSendingGc) {
        output.WriteRawTag(8);
        output.WriteInt32(SendingGc);
      }
      if (HasSenderId) {
        output.WriteRawTag(17);
        output.WriteFixed64(SenderId);
      }
      if (HasContext) {
        output.WriteRawTag(24);
        output.WriteUInt32(Context);
      }
      if (HasMessageId) {
        output.WriteRawTag(32);
        output.WriteUInt32(MessageId);
      }
      if (HasMessageBody) {
        output.WriteRawTag(42);
        output.WriteBytes(MessageBody);
      }
      if (HasJobIdSource) {
        output.WriteRawTag(49);
        output.WriteFixed64(JobIdSource);
      }
      if (HasJobIdTarget) {
        output.WriteRawTag(57);
        output.WriteFixed64(JobIdTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSendingGc) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SendingGc);
      }
      if (HasSenderId) {
        size += 1 + 8;
      }
      if (HasContext) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Context);
      }
      if (HasMessageId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MessageId);
      }
      if (HasMessageBody) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MessageBody);
      }
      if (HasJobIdSource) {
        size += 1 + 8;
      }
      if (HasJobIdTarget) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCInternalTestMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasSendingGc) {
        SendingGc = other.SendingGc;
      }
      if (other.HasSenderId) {
        SenderId = other.SenderId;
      }
      if (other.HasContext) {
        Context = other.Context;
      }
      if (other.HasMessageId) {
        MessageId = other.MessageId;
      }
      if (other.HasMessageBody) {
        MessageBody = other.MessageBody;
      }
      if (other.HasJobIdSource) {
        JobIdSource = other.JobIdSource;
      }
      if (other.HasJobIdTarget) {
        JobIdTarget = other.JobIdTarget;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SendingGc = input.ReadInt32();
            break;
          }
          case 17: {
            SenderId = input.ReadFixed64();
            break;
          }
          case 24: {
            Context = input.ReadUInt32();
            break;
          }
          case 32: {
            MessageId = input.ReadUInt32();
            break;
          }
          case 42: {
            MessageBody = input.ReadBytes();
            break;
          }
          case 49: {
            JobIdSource = input.ReadFixed64();
            break;
          }
          case 57: {
            JobIdTarget = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SendingGc = input.ReadInt32();
            break;
          }
          case 17: {
            SenderId = input.ReadFixed64();
            break;
          }
          case 24: {
            Context = input.ReadUInt32();
            break;
          }
          case 32: {
            MessageId = input.ReadUInt32();
            break;
          }
          case 42: {
            MessageBody = input.ReadBytes();
            break;
          }
          case 49: {
            JobIdSource = input.ReadFixed64();
            break;
          }
          case 57: {
            JobIdTarget = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCClientServerVersionsUpdated : pb::IMessage<CMsgGCToGCClientServerVersionsUpdated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCClientServerVersionsUpdated> _parser = new pb::MessageParser<CMsgGCToGCClientServerVersionsUpdated>(() => new CMsgGCToGCClientServerVersionsUpdated());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCClientServerVersionsUpdated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCClientServerVersionsUpdated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCClientServerVersionsUpdated(CMsgGCToGCClientServerVersionsUpdated other) : this() {
      _hasBits0 = other._hasBits0;
      clientMinAllowedVersion_ = other.clientMinAllowedVersion_;
      clientActiveVersion_ = other.clientActiveVersion_;
      serverActiveVersion_ = other.serverActiveVersion_;
      serverDeployedVersion_ = other.serverDeployedVersion_;
      whatChanged_ = other.whatChanged_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCClientServerVersionsUpdated Clone() {
      return new CMsgGCToGCClientServerVersionsUpdated(this);
    }

    /// <summary>Field number for the "client_min_allowed_version" field.</summary>
    public const int ClientMinAllowedVersionFieldNumber = 1;
    private readonly static uint ClientMinAllowedVersionDefaultValue = 0;

    private uint clientMinAllowedVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ClientMinAllowedVersion {
      get { if ((_hasBits0 & 1) != 0) { return clientMinAllowedVersion_; } else { return ClientMinAllowedVersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        clientMinAllowedVersion_ = value;
      }
    }
    /// <summary>Gets whether the "client_min_allowed_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClientMinAllowedVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "client_min_allowed_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClientMinAllowedVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "client_active_version" field.</summary>
    public const int ClientActiveVersionFieldNumber = 2;
    private readonly static uint ClientActiveVersionDefaultValue = 0;

    private uint clientActiveVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ClientActiveVersion {
      get { if ((_hasBits0 & 2) != 0) { return clientActiveVersion_; } else { return ClientActiveVersionDefaultValue; } }
      set {
        _hasBits0 |= 2;
        clientActiveVersion_ = value;
      }
    }
    /// <summary>Gets whether the "client_active_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClientActiveVersion {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "client_active_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClientActiveVersion() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "server_active_version" field.</summary>
    public const int ServerActiveVersionFieldNumber = 3;
    private readonly static uint ServerActiveVersionDefaultValue = 0;

    private uint serverActiveVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ServerActiveVersion {
      get { if ((_hasBits0 & 4) != 0) { return serverActiveVersion_; } else { return ServerActiveVersionDefaultValue; } }
      set {
        _hasBits0 |= 4;
        serverActiveVersion_ = value;
      }
    }
    /// <summary>Gets whether the "server_active_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerActiveVersion {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "server_active_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerActiveVersion() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "server_deployed_version" field.</summary>
    public const int ServerDeployedVersionFieldNumber = 4;
    private readonly static uint ServerDeployedVersionDefaultValue = 0;

    private uint serverDeployedVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ServerDeployedVersion {
      get { if ((_hasBits0 & 8) != 0) { return serverDeployedVersion_; } else { return ServerDeployedVersionDefaultValue; } }
      set {
        _hasBits0 |= 8;
        serverDeployedVersion_ = value;
      }
    }
    /// <summary>Gets whether the "server_deployed_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServerDeployedVersion {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "server_deployed_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServerDeployedVersion() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "what_changed" field.</summary>
    public const int WhatChangedFieldNumber = 5;
    private readonly static uint WhatChangedDefaultValue = 0;

    private uint whatChanged_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WhatChanged {
      get { if ((_hasBits0 & 16) != 0) { return whatChanged_; } else { return WhatChangedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        whatChanged_ = value;
      }
    }
    /// <summary>Gets whether the "what_changed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWhatChanged {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "what_changed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearWhatChanged() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCClientServerVersionsUpdated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCClientServerVersionsUpdated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientMinAllowedVersion != other.ClientMinAllowedVersion) return false;
      if (ClientActiveVersion != other.ClientActiveVersion) return false;
      if (ServerActiveVersion != other.ServerActiveVersion) return false;
      if (ServerDeployedVersion != other.ServerDeployedVersion) return false;
      if (WhatChanged != other.WhatChanged) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasClientMinAllowedVersion) hash ^= ClientMinAllowedVersion.GetHashCode();
      if (HasClientActiveVersion) hash ^= ClientActiveVersion.GetHashCode();
      if (HasServerActiveVersion) hash ^= ServerActiveVersion.GetHashCode();
      if (HasServerDeployedVersion) hash ^= ServerDeployedVersion.GetHashCode();
      if (HasWhatChanged) hash ^= WhatChanged.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasClientMinAllowedVersion) {
        output.WriteRawTag(8);
        output.WriteUInt32(ClientMinAllowedVersion);
      }
      if (HasClientActiveVersion) {
        output.WriteRawTag(16);
        output.WriteUInt32(ClientActiveVersion);
      }
      if (HasServerActiveVersion) {
        output.WriteRawTag(24);
        output.WriteUInt32(ServerActiveVersion);
      }
      if (HasServerDeployedVersion) {
        output.WriteRawTag(32);
        output.WriteUInt32(ServerDeployedVersion);
      }
      if (HasWhatChanged) {
        output.WriteRawTag(40);
        output.WriteUInt32(WhatChanged);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasClientMinAllowedVersion) {
        output.WriteRawTag(8);
        output.WriteUInt32(ClientMinAllowedVersion);
      }
      if (HasClientActiveVersion) {
        output.WriteRawTag(16);
        output.WriteUInt32(ClientActiveVersion);
      }
      if (HasServerActiveVersion) {
        output.WriteRawTag(24);
        output.WriteUInt32(ServerActiveVersion);
      }
      if (HasServerDeployedVersion) {
        output.WriteRawTag(32);
        output.WriteUInt32(ServerDeployedVersion);
      }
      if (HasWhatChanged) {
        output.WriteRawTag(40);
        output.WriteUInt32(WhatChanged);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasClientMinAllowedVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientMinAllowedVersion);
      }
      if (HasClientActiveVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ClientActiveVersion);
      }
      if (HasServerActiveVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerActiveVersion);
      }
      if (HasServerDeployedVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerDeployedVersion);
      }
      if (HasWhatChanged) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WhatChanged);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCClientServerVersionsUpdated other) {
      if (other == null) {
        return;
      }
      if (other.HasClientMinAllowedVersion) {
        ClientMinAllowedVersion = other.ClientMinAllowedVersion;
      }
      if (other.HasClientActiveVersion) {
        ClientActiveVersion = other.ClientActiveVersion;
      }
      if (other.HasServerActiveVersion) {
        ServerActiveVersion = other.ServerActiveVersion;
      }
      if (other.HasServerDeployedVersion) {
        ServerDeployedVersion = other.ServerDeployedVersion;
      }
      if (other.HasWhatChanged) {
        WhatChanged = other.WhatChanged;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientMinAllowedVersion = input.ReadUInt32();
            break;
          }
          case 16: {
            ClientActiveVersion = input.ReadUInt32();
            break;
          }
          case 24: {
            ServerActiveVersion = input.ReadUInt32();
            break;
          }
          case 32: {
            ServerDeployedVersion = input.ReadUInt32();
            break;
          }
          case 40: {
            WhatChanged = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientMinAllowedVersion = input.ReadUInt32();
            break;
          }
          case 16: {
            ClientActiveVersion = input.ReadUInt32();
            break;
          }
          case 24: {
            ServerActiveVersion = input.ReadUInt32();
            break;
          }
          case 32: {
            ServerDeployedVersion = input.ReadUInt32();
            break;
          }
          case 40: {
            WhatChanged = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCBroadcastMessageFromSub : pb::IMessage<CMsgGCToGCBroadcastMessageFromSub>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCBroadcastMessageFromSub> _parser = new pb::MessageParser<CMsgGCToGCBroadcastMessageFromSub>(() => new CMsgGCToGCBroadcastMessageFromSub());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCBroadcastMessageFromSub> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCBroadcastMessageFromSub() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCBroadcastMessageFromSub(CMsgGCToGCBroadcastMessageFromSub other) : this() {
      _hasBits0 = other._hasBits0;
      msgId_ = other.msgId_;
      serializedMsg_ = other.serializedMsg_;
      accountIdList_ = other.accountIdList_.Clone();
      steamIdList_ = other.steamIdList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCBroadcastMessageFromSub Clone() {
      return new CMsgGCToGCBroadcastMessageFromSub(this);
    }

    /// <summary>Field number for the "msg_id" field.</summary>
    public const int MsgIdFieldNumber = 1;
    private readonly static uint MsgIdDefaultValue = 0;

    private uint msgId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MsgId {
      get { if ((_hasBits0 & 1) != 0) { return msgId_; } else { return MsgIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        msgId_ = value;
      }
    }
    /// <summary>Gets whether the "msg_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMsgId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "msg_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMsgId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "serialized_msg" field.</summary>
    public const int SerializedMsgFieldNumber = 2;
    private readonly static pb::ByteString SerializedMsgDefaultValue = pb::ByteString.Empty;

    private pb::ByteString serializedMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SerializedMsg {
      get { return serializedMsg_ ?? SerializedMsgDefaultValue; }
      set {
        serializedMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "serialized_msg" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSerializedMsg {
      get { return serializedMsg_ != null; }
    }
    /// <summary>Clears the value of the "serialized_msg" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSerializedMsg() {
      serializedMsg_ = null;
    }

    /// <summary>Field number for the "account_id_list" field.</summary>
    public const int AccountIdListFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_accountIdList_codec
        = pb::FieldCodec.ForUInt32(26);
    private readonly pbc::RepeatedField<uint> accountIdList_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> AccountIdList {
      get { return accountIdList_; }
    }

    /// <summary>Field number for the "steam_id_list" field.</summary>
    public const int SteamIdListFieldNumber = 4;
    private static readonly pb::FieldCodec<ulong> _repeated_steamIdList_codec
        = pb::FieldCodec.ForFixed64(34);
    private readonly pbc::RepeatedField<ulong> steamIdList_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> SteamIdList {
      get { return steamIdList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCBroadcastMessageFromSub);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCBroadcastMessageFromSub other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgId != other.MsgId) return false;
      if (SerializedMsg != other.SerializedMsg) return false;
      if(!accountIdList_.Equals(other.accountIdList_)) return false;
      if(!steamIdList_.Equals(other.steamIdList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMsgId) hash ^= MsgId.GetHashCode();
      if (HasSerializedMsg) hash ^= SerializedMsg.GetHashCode();
      hash ^= accountIdList_.GetHashCode();
      hash ^= steamIdList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMsgId) {
        output.WriteRawTag(8);
        output.WriteUInt32(MsgId);
      }
      if (HasSerializedMsg) {
        output.WriteRawTag(18);
        output.WriteBytes(SerializedMsg);
      }
      accountIdList_.WriteTo(output, _repeated_accountIdList_codec);
      steamIdList_.WriteTo(output, _repeated_steamIdList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMsgId) {
        output.WriteRawTag(8);
        output.WriteUInt32(MsgId);
      }
      if (HasSerializedMsg) {
        output.WriteRawTag(18);
        output.WriteBytes(SerializedMsg);
      }
      accountIdList_.WriteTo(ref output, _repeated_accountIdList_codec);
      steamIdList_.WriteTo(ref output, _repeated_steamIdList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMsgId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MsgId);
      }
      if (HasSerializedMsg) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SerializedMsg);
      }
      size += accountIdList_.CalculateSize(_repeated_accountIdList_codec);
      size += steamIdList_.CalculateSize(_repeated_steamIdList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCBroadcastMessageFromSub other) {
      if (other == null) {
        return;
      }
      if (other.HasMsgId) {
        MsgId = other.MsgId;
      }
      if (other.HasSerializedMsg) {
        SerializedMsg = other.SerializedMsg;
      }
      accountIdList_.Add(other.accountIdList_);
      steamIdList_.Add(other.steamIdList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MsgId = input.ReadUInt32();
            break;
          }
          case 18: {
            SerializedMsg = input.ReadBytes();
            break;
          }
          case 26:
          case 24: {
            accountIdList_.AddEntriesFrom(input, _repeated_accountIdList_codec);
            break;
          }
          case 34:
          case 33: {
            steamIdList_.AddEntriesFrom(input, _repeated_steamIdList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MsgId = input.ReadUInt32();
            break;
          }
          case 18: {
            SerializedMsg = input.ReadBytes();
            break;
          }
          case 26:
          case 24: {
            accountIdList_.AddEntriesFrom(ref input, _repeated_accountIdList_codec);
            break;
          }
          case 34:
          case 33: {
            steamIdList_.AddEntriesFrom(ref input, _repeated_steamIdList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToClientCurrencyPricePoints : pb::IMessage<CMsgGCToClientCurrencyPricePoints>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToClientCurrencyPricePoints> _parser = new pb::MessageParser<CMsgGCToClientCurrencyPricePoints>(() => new CMsgGCToClientCurrencyPricePoints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToClientCurrencyPricePoints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToClientCurrencyPricePoints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToClientCurrencyPricePoints(CMsgGCToClientCurrencyPricePoints other) : this() {
      priceKey_ = other.priceKey_.Clone();
      currencies_ = other.currencies_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToClientCurrencyPricePoints Clone() {
      return new CMsgGCToClientCurrencyPricePoints(this);
    }

    /// <summary>Field number for the "price_key" field.</summary>
    public const int PriceKeyFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_priceKey_codec
        = pb::FieldCodec.ForUInt64(10);
    private readonly pbc::RepeatedField<ulong> priceKey_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> PriceKey {
      get { return priceKey_; }
    }

    /// <summary>Field number for the "currencies" field.</summary>
    public const int CurrenciesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgGCToClientCurrencyPricePoints.Types.Currency> _repeated_currencies_codec
        = pb::FieldCodec.ForMessage(18, global::Steam.Protos.Dota2.CMsgGCToClientCurrencyPricePoints.Types.Currency.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToClientCurrencyPricePoints.Types.Currency> currencies_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToClientCurrencyPricePoints.Types.Currency>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToClientCurrencyPricePoints.Types.Currency> Currencies {
      get { return currencies_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToClientCurrencyPricePoints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToClientCurrencyPricePoints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!priceKey_.Equals(other.priceKey_)) return false;
      if(!currencies_.Equals(other.currencies_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= priceKey_.GetHashCode();
      hash ^= currencies_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      priceKey_.WriteTo(output, _repeated_priceKey_codec);
      currencies_.WriteTo(output, _repeated_currencies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      priceKey_.WriteTo(ref output, _repeated_priceKey_codec);
      currencies_.WriteTo(ref output, _repeated_currencies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += priceKey_.CalculateSize(_repeated_priceKey_codec);
      size += currencies_.CalculateSize(_repeated_currencies_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToClientCurrencyPricePoints other) {
      if (other == null) {
        return;
      }
      priceKey_.Add(other.priceKey_);
      currencies_.Add(other.currencies_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            priceKey_.AddEntriesFrom(input, _repeated_priceKey_codec);
            break;
          }
          case 18: {
            currencies_.AddEntriesFrom(input, _repeated_currencies_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            priceKey_.AddEntriesFrom(ref input, _repeated_priceKey_codec);
            break;
          }
          case 18: {
            currencies_.AddEntriesFrom(ref input, _repeated_currencies_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgGCToClientCurrencyPricePoints message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Currency : pb::IMessage<Currency>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Currency> _parser = new pb::MessageParser<Currency>(() => new Currency());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Currency> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgGCToClientCurrencyPricePoints.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Currency() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Currency(Currency other) : this() {
          _hasBits0 = other._hasBits0;
          currencyId_ = other.currencyId_;
          currencyPrice_ = other.currencyPrice_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Currency Clone() {
          return new Currency(this);
        }

        /// <summary>Field number for the "currency_id" field.</summary>
        public const int CurrencyIdFieldNumber = 1;
        private readonly static uint CurrencyIdDefaultValue = 0;

        private uint currencyId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint CurrencyId {
          get { if ((_hasBits0 & 1) != 0) { return currencyId_; } else { return CurrencyIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            currencyId_ = value;
          }
        }
        /// <summary>Gets whether the "currency_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasCurrencyId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "currency_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearCurrencyId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "currency_price" field.</summary>
        public const int CurrencyPriceFieldNumber = 2;
        private static readonly pb::FieldCodec<ulong> _repeated_currencyPrice_codec
            = pb::FieldCodec.ForUInt64(18);
        private readonly pbc::RepeatedField<ulong> currencyPrice_ = new pbc::RepeatedField<ulong>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<ulong> CurrencyPrice {
          get { return currencyPrice_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Currency);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Currency other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CurrencyId != other.CurrencyId) return false;
          if(!currencyPrice_.Equals(other.currencyPrice_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasCurrencyId) hash ^= CurrencyId.GetHashCode();
          hash ^= currencyPrice_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasCurrencyId) {
            output.WriteRawTag(8);
            output.WriteUInt32(CurrencyId);
          }
          currencyPrice_.WriteTo(output, _repeated_currencyPrice_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasCurrencyId) {
            output.WriteRawTag(8);
            output.WriteUInt32(CurrencyId);
          }
          currencyPrice_.WriteTo(ref output, _repeated_currencyPrice_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasCurrencyId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurrencyId);
          }
          size += currencyPrice_.CalculateSize(_repeated_currencyPrice_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Currency other) {
          if (other == null) {
            return;
          }
          if (other.HasCurrencyId) {
            CurrencyId = other.CurrencyId;
          }
          currencyPrice_.Add(other.currencyPrice_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                CurrencyId = input.ReadUInt32();
                break;
              }
              case 18:
              case 16: {
                currencyPrice_.AddEntriesFrom(input, _repeated_currencyPrice_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                CurrencyId = input.ReadUInt32();
                break;
              }
              case 18:
              case 16: {
                currencyPrice_.AddEntriesFrom(ref input, _repeated_currencyPrice_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgBannedWordList : pb::IMessage<CMsgBannedWordList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgBannedWordList> _parser = new pb::MessageParser<CMsgBannedWordList>(() => new CMsgBannedWordList());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgBannedWordList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgBannedWordList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgBannedWordList(CMsgBannedWordList other) : this() {
      _hasBits0 = other._hasBits0;
      version_ = other.version_;
      bannedWords_ = other.bannedWords_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgBannedWordList Clone() {
      return new CMsgBannedWordList(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private readonly static uint VersionDefaultValue = 0;

    private uint version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Version {
      get { if ((_hasBits0 & 1) != 0) { return version_; } else { return VersionDefaultValue; } }
      set {
        _hasBits0 |= 1;
        version_ = value;
      }
    }
    /// <summary>Gets whether the "version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasVersion {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVersion() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "banned_words" field.</summary>
    public const int BannedWordsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_bannedWords_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> bannedWords_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BannedWords {
      get { return bannedWords_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgBannedWordList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgBannedWordList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if(!bannedWords_.Equals(other.bannedWords_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasVersion) hash ^= Version.GetHashCode();
      hash ^= bannedWords_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasVersion) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      bannedWords_.WriteTo(output, _repeated_bannedWords_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasVersion) {
        output.WriteRawTag(8);
        output.WriteUInt32(Version);
      }
      bannedWords_.WriteTo(ref output, _repeated_bannedWords_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasVersion) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Version);
      }
      size += bannedWords_.CalculateSize(_repeated_bannedWords_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgBannedWordList other) {
      if (other == null) {
        return;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      bannedWords_.Add(other.bannedWords_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 18: {
            bannedWords_.AddEntriesFrom(input, _repeated_bannedWords_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Version = input.ReadUInt32();
            break;
          }
          case 18: {
            bannedWords_.AddEntriesFrom(ref input, _repeated_bannedWords_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCFlushSteamInventoryCache : pb::IMessage<CMsgGCToGCFlushSteamInventoryCache>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCFlushSteamInventoryCache> _parser = new pb::MessageParser<CMsgGCToGCFlushSteamInventoryCache>(() => new CMsgGCToGCFlushSteamInventoryCache());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCFlushSteamInventoryCache> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCFlushSteamInventoryCache() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCFlushSteamInventoryCache(CMsgGCToGCFlushSteamInventoryCache other) : this() {
      keys_ = other.keys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCFlushSteamInventoryCache Clone() {
      return new CMsgGCToGCFlushSteamInventoryCache(this);
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgGCToGCFlushSteamInventoryCache.Types.Key> _repeated_keys_codec
        = pb::FieldCodec.ForMessage(10, global::Steam.Protos.Dota2.CMsgGCToGCFlushSteamInventoryCache.Types.Key.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCFlushSteamInventoryCache.Types.Key> keys_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCFlushSteamInventoryCache.Types.Key>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToGCFlushSteamInventoryCache.Types.Key> Keys {
      get { return keys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCFlushSteamInventoryCache);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCFlushSteamInventoryCache other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!keys_.Equals(other.keys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= keys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      keys_.WriteTo(output, _repeated_keys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      keys_.WriteTo(ref output, _repeated_keys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCFlushSteamInventoryCache other) {
      if (other == null) {
        return;
      }
      keys_.Add(other.keys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            keys_.AddEntriesFrom(ref input, _repeated_keys_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgGCToGCFlushSteamInventoryCache message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Key : pb::IMessage<Key>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Key> _parser = new pb::MessageParser<Key>(() => new Key());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Key> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgGCToGCFlushSteamInventoryCache.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Key() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Key(Key other) : this() {
          _hasBits0 = other._hasBits0;
          steamid_ = other.steamid_;
          contextid_ = other.contextid_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Key Clone() {
          return new Key(this);
        }

        /// <summary>Field number for the "steamid" field.</summary>
        public const int SteamidFieldNumber = 1;
        private readonly static ulong SteamidDefaultValue = 0UL;

        private ulong steamid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Steamid {
          get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            steamid_ = value;
          }
        }
        /// <summary>Gets whether the "steamid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasSteamid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "steamid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSteamid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "contextid" field.</summary>
        public const int ContextidFieldNumber = 2;
        private readonly static ulong ContextidDefaultValue = 0UL;

        private ulong contextid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong Contextid {
          get { if ((_hasBits0 & 2) != 0) { return contextid_; } else { return ContextidDefaultValue; } }
          set {
            _hasBits0 |= 2;
            contextid_ = value;
          }
        }
        /// <summary>Gets whether the "contextid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasContextid {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "contextid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearContextid() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Key);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Key other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Steamid != other.Steamid) return false;
          if (Contextid != other.Contextid) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasSteamid) hash ^= Steamid.GetHashCode();
          if (HasContextid) hash ^= Contextid.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasSteamid) {
            output.WriteRawTag(8);
            output.WriteUInt64(Steamid);
          }
          if (HasContextid) {
            output.WriteRawTag(16);
            output.WriteUInt64(Contextid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasSteamid) {
            output.WriteRawTag(8);
            output.WriteUInt64(Steamid);
          }
          if (HasContextid) {
            output.WriteRawTag(16);
            output.WriteUInt64(Contextid);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasSteamid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steamid);
          }
          if (HasContextid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Contextid);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Key other) {
          if (other == null) {
            return;
          }
          if (other.HasSteamid) {
            Steamid = other.Steamid;
          }
          if (other.HasContextid) {
            Contextid = other.Contextid;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Steamid = input.ReadUInt64();
                break;
              }
              case 16: {
                Contextid = input.ReadUInt64();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Steamid = input.ReadUInt64();
                break;
              }
              case 16: {
                Contextid = input.ReadUInt64();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgGCToGCUpdateSubscriptionItems : pb::IMessage<CMsgGCToGCUpdateSubscriptionItems>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCUpdateSubscriptionItems> _parser = new pb::MessageParser<CMsgGCToGCUpdateSubscriptionItems>(() => new CMsgGCToGCUpdateSubscriptionItems());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCUpdateSubscriptionItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCUpdateSubscriptionItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCUpdateSubscriptionItems(CMsgGCToGCUpdateSubscriptionItems other) : this() {
      _hasBits0 = other._hasBits0;
      accountId_ = other.accountId_;
      alwaysNotify_ = other.alwaysNotify_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCUpdateSubscriptionItems Clone() {
      return new CMsgGCToGCUpdateSubscriptionItems(this);
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 1;
    private readonly static uint AccountIdDefaultValue = 0;

    private uint accountId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AccountId {
      get { if ((_hasBits0 & 1) != 0) { return accountId_; } else { return AccountIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        accountId_ = value;
      }
    }
    /// <summary>Gets whether the "account_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAccountId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "account_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAccountId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "always_notify" field.</summary>
    public const int AlwaysNotifyFieldNumber = 2;
    private readonly static bool AlwaysNotifyDefaultValue = false;

    private bool alwaysNotify_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AlwaysNotify {
      get { if ((_hasBits0 & 2) != 0) { return alwaysNotify_; } else { return AlwaysNotifyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        alwaysNotify_ = value;
      }
    }
    /// <summary>Gets whether the "always_notify" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAlwaysNotify {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "always_notify" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAlwaysNotify() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCUpdateSubscriptionItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCUpdateSubscriptionItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountId != other.AccountId) return false;
      if (AlwaysNotify != other.AlwaysNotify) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAccountId) hash ^= AccountId.GetHashCode();
      if (HasAlwaysNotify) hash ^= AlwaysNotify.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasAlwaysNotify) {
        output.WriteRawTag(16);
        output.WriteBool(AlwaysNotify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAccountId) {
        output.WriteRawTag(8);
        output.WriteUInt32(AccountId);
      }
      if (HasAlwaysNotify) {
        output.WriteRawTag(16);
        output.WriteBool(AlwaysNotify);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasAccountId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AccountId);
      }
      if (HasAlwaysNotify) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCUpdateSubscriptionItems other) {
      if (other == null) {
        return;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasAlwaysNotify) {
        AlwaysNotify = other.AlwaysNotify;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            AlwaysNotify = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AccountId = input.ReadUInt32();
            break;
          }
          case 16: {
            AlwaysNotify = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCSelfPing : pb::IMessage<CMsgGCToGCSelfPing>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCSelfPing> _parser = new pb::MessageParser<CMsgGCToGCSelfPing>(() => new CMsgGCToGCSelfPing());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCSelfPing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCSelfPing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCSelfPing(CMsgGCToGCSelfPing other) : this() {
      _hasBits0 = other._hasBits0;
      sampleId_ = other.sampleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCSelfPing Clone() {
      return new CMsgGCToGCSelfPing(this);
    }

    /// <summary>Field number for the "sample_id" field.</summary>
    public const int SampleIdFieldNumber = 1;
    private readonly static uint SampleIdDefaultValue = 0;

    private uint sampleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SampleId {
      get { if ((_hasBits0 & 1) != 0) { return sampleId_; } else { return SampleIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sampleId_ = value;
      }
    }
    /// <summary>Gets whether the "sample_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSampleId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sample_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSampleId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCSelfPing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCSelfPing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SampleId != other.SampleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSampleId) hash ^= SampleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSampleId) {
        output.WriteRawTag(8);
        output.WriteUInt32(SampleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSampleId) {
        output.WriteRawTag(8);
        output.WriteUInt32(SampleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasSampleId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SampleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCSelfPing other) {
      if (other == null) {
        return;
      }
      if (other.HasSampleId) {
        SampleId = other.SampleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SampleId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SampleId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCGetInfuxIntervalStats : pb::IMessage<CMsgGCToGCGetInfuxIntervalStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCGetInfuxIntervalStats> _parser = new pb::MessageParser<CMsgGCToGCGetInfuxIntervalStats>(() => new CMsgGCToGCGetInfuxIntervalStats());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCGetInfuxIntervalStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetInfuxIntervalStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetInfuxIntervalStats(CMsgGCToGCGetInfuxIntervalStats other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetInfuxIntervalStats Clone() {
      return new CMsgGCToGCGetInfuxIntervalStats(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCGetInfuxIntervalStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCGetInfuxIntervalStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCGetInfuxIntervalStats other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCGetInfuxIntervalStatsResponse : pb::IMessage<CMsgGCToGCGetInfuxIntervalStatsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCGetInfuxIntervalStatsResponse> _parser = new pb::MessageParser<CMsgGCToGCGetInfuxIntervalStatsResponse>(() => new CMsgGCToGCGetInfuxIntervalStatsResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCGetInfuxIntervalStatsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetInfuxIntervalStatsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetInfuxIntervalStatsResponse(CMsgGCToGCGetInfuxIntervalStatsResponse other) : this() {
      _hasBits0 = other._hasBits0;
      statIds_ = other.statIds_.Clone();
      statTotal_ = other.statTotal_.Clone();
      statSamples_ = other.statSamples_.Clone();
      statMax_ = other.statMax_.Clone();
      sampleDurationMs_ = other.sampleDurationMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCGetInfuxIntervalStatsResponse Clone() {
      return new CMsgGCToGCGetInfuxIntervalStatsResponse(this);
    }

    /// <summary>Field number for the "stat_ids" field.</summary>
    public const int StatIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_statIds_codec
        = pb::FieldCodec.ForFixed32(10);
    private readonly pbc::RepeatedField<uint> statIds_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> StatIds {
      get { return statIds_; }
    }

    /// <summary>Field number for the "stat_total" field.</summary>
    public const int StatTotalFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_statTotal_codec
        = pb::FieldCodec.ForUInt64(18);
    private readonly pbc::RepeatedField<ulong> statTotal_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> StatTotal {
      get { return statTotal_; }
    }

    /// <summary>Field number for the "stat_samples" field.</summary>
    public const int StatSamplesFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_statSamples_codec
        = pb::FieldCodec.ForUInt32(26);
    private readonly pbc::RepeatedField<uint> statSamples_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> StatSamples {
      get { return statSamples_; }
    }

    /// <summary>Field number for the "stat_max" field.</summary>
    public const int StatMaxFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_statMax_codec
        = pb::FieldCodec.ForUInt32(34);
    private readonly pbc::RepeatedField<uint> statMax_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> StatMax {
      get { return statMax_; }
    }

    /// <summary>Field number for the "sample_duration_ms" field.</summary>
    public const int SampleDurationMsFieldNumber = 5;
    private readonly static uint SampleDurationMsDefaultValue = 0;

    private uint sampleDurationMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SampleDurationMs {
      get { if ((_hasBits0 & 1) != 0) { return sampleDurationMs_; } else { return SampleDurationMsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sampleDurationMs_ = value;
      }
    }
    /// <summary>Gets whether the "sample_duration_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSampleDurationMs {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sample_duration_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSampleDurationMs() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCGetInfuxIntervalStatsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCGetInfuxIntervalStatsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!statIds_.Equals(other.statIds_)) return false;
      if(!statTotal_.Equals(other.statTotal_)) return false;
      if(!statSamples_.Equals(other.statSamples_)) return false;
      if(!statMax_.Equals(other.statMax_)) return false;
      if (SampleDurationMs != other.SampleDurationMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= statIds_.GetHashCode();
      hash ^= statTotal_.GetHashCode();
      hash ^= statSamples_.GetHashCode();
      hash ^= statMax_.GetHashCode();
      if (HasSampleDurationMs) hash ^= SampleDurationMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      statIds_.WriteTo(output, _repeated_statIds_codec);
      statTotal_.WriteTo(output, _repeated_statTotal_codec);
      statSamples_.WriteTo(output, _repeated_statSamples_codec);
      statMax_.WriteTo(output, _repeated_statMax_codec);
      if (HasSampleDurationMs) {
        output.WriteRawTag(40);
        output.WriteUInt32(SampleDurationMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      statIds_.WriteTo(ref output, _repeated_statIds_codec);
      statTotal_.WriteTo(ref output, _repeated_statTotal_codec);
      statSamples_.WriteTo(ref output, _repeated_statSamples_codec);
      statMax_.WriteTo(ref output, _repeated_statMax_codec);
      if (HasSampleDurationMs) {
        output.WriteRawTag(40);
        output.WriteUInt32(SampleDurationMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += statIds_.CalculateSize(_repeated_statIds_codec);
      size += statTotal_.CalculateSize(_repeated_statTotal_codec);
      size += statSamples_.CalculateSize(_repeated_statSamples_codec);
      size += statMax_.CalculateSize(_repeated_statMax_codec);
      if (HasSampleDurationMs) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SampleDurationMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCGetInfuxIntervalStatsResponse other) {
      if (other == null) {
        return;
      }
      statIds_.Add(other.statIds_);
      statTotal_.Add(other.statTotal_);
      statSamples_.Add(other.statSamples_);
      statMax_.Add(other.statMax_);
      if (other.HasSampleDurationMs) {
        SampleDurationMs = other.SampleDurationMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            statIds_.AddEntriesFrom(input, _repeated_statIds_codec);
            break;
          }
          case 18:
          case 16: {
            statTotal_.AddEntriesFrom(input, _repeated_statTotal_codec);
            break;
          }
          case 26:
          case 24: {
            statSamples_.AddEntriesFrom(input, _repeated_statSamples_codec);
            break;
          }
          case 34:
          case 32: {
            statMax_.AddEntriesFrom(input, _repeated_statMax_codec);
            break;
          }
          case 40: {
            SampleDurationMs = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 13: {
            statIds_.AddEntriesFrom(ref input, _repeated_statIds_codec);
            break;
          }
          case 18:
          case 16: {
            statTotal_.AddEntriesFrom(ref input, _repeated_statTotal_codec);
            break;
          }
          case 26:
          case 24: {
            statSamples_.AddEntriesFrom(ref input, _repeated_statSamples_codec);
            break;
          }
          case 34:
          case 32: {
            statMax_.AddEntriesFrom(ref input, _repeated_statMax_codec);
            break;
          }
          case 40: {
            SampleDurationMs = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCPurchaseSucceeded : pb::IMessage<CMsgGCToGCPurchaseSucceeded>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCPurchaseSucceeded> _parser = new pb::MessageParser<CMsgGCToGCPurchaseSucceeded>(() => new CMsgGCToGCPurchaseSucceeded());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCPurchaseSucceeded> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCPurchaseSucceeded() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCPurchaseSucceeded(CMsgGCToGCPurchaseSucceeded other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCPurchaseSucceeded Clone() {
      return new CMsgGCToGCPurchaseSucceeded(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCPurchaseSucceeded);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCPurchaseSucceeded other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCPurchaseSucceeded other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCGetLimitedItemPurchaseQuantity : pb::IMessage<CMsgClientToGCGetLimitedItemPurchaseQuantity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCGetLimitedItemPurchaseQuantity> _parser = new pb::MessageParser<CMsgClientToGCGetLimitedItemPurchaseQuantity>(() => new CMsgClientToGCGetLimitedItemPurchaseQuantity());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCGetLimitedItemPurchaseQuantity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetLimitedItemPurchaseQuantity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetLimitedItemPurchaseQuantity(CMsgClientToGCGetLimitedItemPurchaseQuantity other) : this() {
      _hasBits0 = other._hasBits0;
      itemDef_ = other.itemDef_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetLimitedItemPurchaseQuantity Clone() {
      return new CMsgClientToGCGetLimitedItemPurchaseQuantity(this);
    }

    /// <summary>Field number for the "item_def" field.</summary>
    public const int ItemDefFieldNumber = 1;
    private readonly static uint ItemDefDefaultValue = 0;

    private uint itemDef_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemDef {
      get { if ((_hasBits0 & 1) != 0) { return itemDef_; } else { return ItemDefDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemDef_ = value;
      }
    }
    /// <summary>Gets whether the "item_def" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemDef {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_def" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemDef() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCGetLimitedItemPurchaseQuantity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCGetLimitedItemPurchaseQuantity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemDef != other.ItemDef) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemDef) hash ^= ItemDef.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemDef) {
        output.WriteRawTag(8);
        output.WriteUInt32(ItemDef);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemDef) {
        output.WriteRawTag(8);
        output.WriteUInt32(ItemDef);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemDef) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemDef);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCGetLimitedItemPurchaseQuantity other) {
      if (other == null) {
        return;
      }
      if (other.HasItemDef) {
        ItemDef = other.ItemDef;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemDef = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemDef = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCGetLimitedItemPurchaseQuantityResponse : pb::IMessage<CMsgClientToGCGetLimitedItemPurchaseQuantityResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCGetLimitedItemPurchaseQuantityResponse> _parser = new pb::MessageParser<CMsgClientToGCGetLimitedItemPurchaseQuantityResponse>(() => new CMsgClientToGCGetLimitedItemPurchaseQuantityResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCGetLimitedItemPurchaseQuantityResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetLimitedItemPurchaseQuantityResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetLimitedItemPurchaseQuantityResponse(CMsgClientToGCGetLimitedItemPurchaseQuantityResponse other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      quantityPurchased_ = other.quantityPurchased_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetLimitedItemPurchaseQuantityResponse Clone() {
      return new CMsgClientToGCGetLimitedItemPurchaseQuantityResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Steam.Protos.Dota2.CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.Types.EResponse ResultDefaultValue = global::Steam.Protos.Dota2.CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.Types.EResponse.KEInternalError;

    private global::Steam.Protos.Dota2.CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.Types.EResponse result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.Types.EResponse Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "quantity_purchased" field.</summary>
    public const int QuantityPurchasedFieldNumber = 2;
    private readonly static uint QuantityPurchasedDefaultValue = 0;

    private uint quantityPurchased_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint QuantityPurchased {
      get { if ((_hasBits0 & 2) != 0) { return quantityPurchased_; } else { return QuantityPurchasedDefaultValue; } }
      set {
        _hasBits0 |= 2;
        quantityPurchased_ = value;
      }
    }
    /// <summary>Gets whether the "quantity_purchased" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuantityPurchased {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "quantity_purchased" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuantityPurchased() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCGetLimitedItemPurchaseQuantityResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCGetLimitedItemPurchaseQuantityResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (QuantityPurchased != other.QuantityPurchased) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasQuantityPurchased) hash ^= QuantityPurchased.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasQuantityPurchased) {
        output.WriteRawTag(16);
        output.WriteUInt32(QuantityPurchased);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasQuantityPurchased) {
        output.WriteRawTag(16);
        output.WriteUInt32(QuantityPurchased);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasQuantityPurchased) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(QuantityPurchased);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCGetLimitedItemPurchaseQuantityResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasQuantityPurchased) {
        QuantityPurchased = other.QuantityPurchased;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Steam.Protos.Dota2.CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.Types.EResponse) input.ReadEnum();
            break;
          }
          case 16: {
            QuantityPurchased = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Steam.Protos.Dota2.CMsgClientToGCGetLimitedItemPurchaseQuantityResponse.Types.EResponse) input.ReadEnum();
            break;
          }
          case 16: {
            QuantityPurchased = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgClientToGCGetLimitedItemPurchaseQuantityResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EResponse {
        [pbr::OriginalName("k_eInternalError")] KEInternalError = 0,
        [pbr::OriginalName("k_eSuccess")] KESuccess = 1,
        [pbr::OriginalName("k_eTooBusy")] KETooBusy = 2,
        [pbr::OriginalName("k_eDisabled")] KEDisabled = 3,
        [pbr::OriginalName("k_eTimeout")] KETimeout = 4,
        [pbr::OriginalName("k_eInvalidItemDef")] KEInvalidItemDef = 5,
        [pbr::OriginalName("k_eItemDefNotLimited")] KEItemDefNotLimited = 6,
      }

    }
    #endregion

  }

  public sealed partial class CMsgClientToGCGetInFlightItemCharges : pb::IMessage<CMsgClientToGCGetInFlightItemCharges>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCGetInFlightItemCharges> _parser = new pb::MessageParser<CMsgClientToGCGetInFlightItemCharges>(() => new CMsgClientToGCGetInFlightItemCharges());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCGetInFlightItemCharges> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetInFlightItemCharges() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetInFlightItemCharges(CMsgClientToGCGetInFlightItemCharges other) : this() {
      _hasBits0 = other._hasBits0;
      itemDef_ = other.itemDef_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetInFlightItemCharges Clone() {
      return new CMsgClientToGCGetInFlightItemCharges(this);
    }

    /// <summary>Field number for the "item_def" field.</summary>
    public const int ItemDefFieldNumber = 1;
    private readonly static uint ItemDefDefaultValue = 0;

    private uint itemDef_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemDef {
      get { if ((_hasBits0 & 1) != 0) { return itemDef_; } else { return ItemDefDefaultValue; } }
      set {
        _hasBits0 |= 1;
        itemDef_ = value;
      }
    }
    /// <summary>Gets whether the "item_def" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasItemDef {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "item_def" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearItemDef() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCGetInFlightItemCharges);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCGetInFlightItemCharges other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemDef != other.ItemDef) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasItemDef) hash ^= ItemDef.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasItemDef) {
        output.WriteRawTag(8);
        output.WriteUInt32(ItemDef);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasItemDef) {
        output.WriteRawTag(8);
        output.WriteUInt32(ItemDef);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasItemDef) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemDef);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCGetInFlightItemCharges other) {
      if (other == null) {
        return;
      }
      if (other.HasItemDef) {
        ItemDef = other.ItemDef;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemDef = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemDef = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCGetInFlightItemChargesResponse : pb::IMessage<CMsgClientToGCGetInFlightItemChargesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCGetInFlightItemChargesResponse> _parser = new pb::MessageParser<CMsgClientToGCGetInFlightItemChargesResponse>(() => new CMsgClientToGCGetInFlightItemChargesResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCGetInFlightItemChargesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetInFlightItemChargesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetInFlightItemChargesResponse(CMsgClientToGCGetInFlightItemChargesResponse other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      chargesInFlight_ = other.chargesInFlight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCGetInFlightItemChargesResponse Clone() {
      return new CMsgClientToGCGetInFlightItemChargesResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Steam.Protos.Dota2.CMsgClientToGCGetInFlightItemChargesResponse.Types.EResponse ResultDefaultValue = global::Steam.Protos.Dota2.CMsgClientToGCGetInFlightItemChargesResponse.Types.EResponse.KEInternalError;

    private global::Steam.Protos.Dota2.CMsgClientToGCGetInFlightItemChargesResponse.Types.EResponse result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CMsgClientToGCGetInFlightItemChargesResponse.Types.EResponse Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "charges_in_flight" field.</summary>
    public const int ChargesInFlightFieldNumber = 2;
    private readonly static uint ChargesInFlightDefaultValue = 0;

    private uint chargesInFlight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ChargesInFlight {
      get { if ((_hasBits0 & 2) != 0) { return chargesInFlight_; } else { return ChargesInFlightDefaultValue; } }
      set {
        _hasBits0 |= 2;
        chargesInFlight_ = value;
      }
    }
    /// <summary>Gets whether the "charges_in_flight" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChargesInFlight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "charges_in_flight" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChargesInFlight() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCGetInFlightItemChargesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCGetInFlightItemChargesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (ChargesInFlight != other.ChargesInFlight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasChargesInFlight) hash ^= ChargesInFlight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasChargesInFlight) {
        output.WriteRawTag(16);
        output.WriteUInt32(ChargesInFlight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (HasChargesInFlight) {
        output.WriteRawTag(16);
        output.WriteUInt32(ChargesInFlight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasChargesInFlight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChargesInFlight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCGetInFlightItemChargesResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasChargesInFlight) {
        ChargesInFlight = other.ChargesInFlight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Steam.Protos.Dota2.CMsgClientToGCGetInFlightItemChargesResponse.Types.EResponse) input.ReadEnum();
            break;
          }
          case 16: {
            ChargesInFlight = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Steam.Protos.Dota2.CMsgClientToGCGetInFlightItemChargesResponse.Types.EResponse) input.ReadEnum();
            break;
          }
          case 16: {
            ChargesInFlight = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgClientToGCGetInFlightItemChargesResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EResponse {
        [pbr::OriginalName("k_eInternalError")] KEInternalError = 0,
        [pbr::OriginalName("k_eSuccess")] KESuccess = 1,
        [pbr::OriginalName("k_eTooBusy")] KETooBusy = 2,
        [pbr::OriginalName("k_eDisabled")] KEDisabled = 3,
        [pbr::OriginalName("k_eTimeout")] KETimeout = 4,
        [pbr::OriginalName("k_eInvalidItemDef")] KEInvalidItemDef = 5,
      }

    }
    #endregion

  }

  public sealed partial class CMsgClientToGCPurchaseChargeCostItems : pb::IMessage<CMsgClientToGCPurchaseChargeCostItems>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCPurchaseChargeCostItems> _parser = new pb::MessageParser<CMsgClientToGCPurchaseChargeCostItems>(() => new CMsgClientToGCPurchaseChargeCostItems());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCPurchaseChargeCostItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCPurchaseChargeCostItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCPurchaseChargeCostItems(CMsgClientToGCPurchaseChargeCostItems other) : this() {
      _hasBits0 = other._hasBits0;
      items_ = other.items_.Clone();
      currency_ = other.currency_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCPurchaseChargeCostItems Clone() {
      return new CMsgClientToGCPurchaseChargeCostItems(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItems.Types.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItems.Types.Item.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItems.Types.Item> items_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItems.Types.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItems.Types.Item> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 2;
    private readonly static uint CurrencyDefaultValue = 0;

    private uint currency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Currency {
      get { if ((_hasBits0 & 1) != 0) { return currency_; } else { return CurrencyDefaultValue; } }
      set {
        _hasBits0 |= 1;
        currency_ = value;
      }
    }
    /// <summary>Gets whether the "currency" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrency {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "currency" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrency() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCPurchaseChargeCostItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCPurchaseChargeCostItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      if (Currency != other.Currency) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (HasCurrency) hash ^= Currency.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (HasCurrency) {
        output.WriteRawTag(16);
        output.WriteUInt32(Currency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (HasCurrency) {
        output.WriteRawTag(16);
        output.WriteUInt32(Currency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (HasCurrency) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Currency);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCPurchaseChargeCostItems other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      if (other.HasCurrency) {
        Currency = other.Currency;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 16: {
            Currency = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
          case 16: {
            Currency = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgClientToGCPurchaseChargeCostItems message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Item : pb::IMessage<Item>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Item> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItems.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item(Item other) : this() {
          _hasBits0 = other._hasBits0;
          itemDefIndex_ = other.itemDefIndex_;
          quantity_ = other.quantity_;
          sourceReferenceId_ = other.sourceReferenceId_;
          priceIndex_ = other.priceIndex_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item Clone() {
          return new Item(this);
        }

        /// <summary>Field number for the "item_def_index" field.</summary>
        public const int ItemDefIndexFieldNumber = 1;
        private readonly static uint ItemDefIndexDefaultValue = 0;

        private uint itemDefIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ItemDefIndex {
          get { if ((_hasBits0 & 1) != 0) { return itemDefIndex_; } else { return ItemDefIndexDefaultValue; } }
          set {
            _hasBits0 |= 1;
            itemDefIndex_ = value;
          }
        }
        /// <summary>Gets whether the "item_def_index" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasItemDefIndex {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "item_def_index" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearItemDefIndex() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 2;
        private readonly static uint QuantityDefaultValue = 0;

        private uint quantity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Quantity {
          get { if ((_hasBits0 & 2) != 0) { return quantity_; } else { return QuantityDefaultValue; } }
          set {
            _hasBits0 |= 2;
            quantity_ = value;
          }
        }
        /// <summary>Gets whether the "quantity" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasQuantity {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "quantity" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearQuantity() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "source_reference_id" field.</summary>
        public const int SourceReferenceIdFieldNumber = 3;
        private readonly static ulong SourceReferenceIdDefaultValue = 0UL;

        private ulong sourceReferenceId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ulong SourceReferenceId {
          get { if ((_hasBits0 & 4) != 0) { return sourceReferenceId_; } else { return SourceReferenceIdDefaultValue; } }
          set {
            _hasBits0 |= 4;
            sourceReferenceId_ = value;
          }
        }
        /// <summary>Gets whether the "source_reference_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasSourceReferenceId {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "source_reference_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSourceReferenceId() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "price_index" field.</summary>
        public const int PriceIndexFieldNumber = 4;
        private readonly static int PriceIndexDefaultValue = 0;

        private int priceIndex_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int PriceIndex {
          get { if ((_hasBits0 & 8) != 0) { return priceIndex_; } else { return PriceIndexDefaultValue; } }
          set {
            _hasBits0 |= 8;
            priceIndex_ = value;
          }
        }
        /// <summary>Gets whether the "price_index" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasPriceIndex {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "price_index" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPriceIndex() {
          _hasBits0 &= ~8;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Item);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Item other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ItemDefIndex != other.ItemDefIndex) return false;
          if (Quantity != other.Quantity) return false;
          if (SourceReferenceId != other.SourceReferenceId) return false;
          if (PriceIndex != other.PriceIndex) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasItemDefIndex) hash ^= ItemDefIndex.GetHashCode();
          if (HasQuantity) hash ^= Quantity.GetHashCode();
          if (HasSourceReferenceId) hash ^= SourceReferenceId.GetHashCode();
          if (HasPriceIndex) hash ^= PriceIndex.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasItemDefIndex) {
            output.WriteRawTag(8);
            output.WriteUInt32(ItemDefIndex);
          }
          if (HasQuantity) {
            output.WriteRawTag(16);
            output.WriteUInt32(Quantity);
          }
          if (HasSourceReferenceId) {
            output.WriteRawTag(24);
            output.WriteUInt64(SourceReferenceId);
          }
          if (HasPriceIndex) {
            output.WriteRawTag(32);
            output.WriteInt32(PriceIndex);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasItemDefIndex) {
            output.WriteRawTag(8);
            output.WriteUInt32(ItemDefIndex);
          }
          if (HasQuantity) {
            output.WriteRawTag(16);
            output.WriteUInt32(Quantity);
          }
          if (HasSourceReferenceId) {
            output.WriteRawTag(24);
            output.WriteUInt64(SourceReferenceId);
          }
          if (HasPriceIndex) {
            output.WriteRawTag(32);
            output.WriteInt32(PriceIndex);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasItemDefIndex) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemDefIndex);
          }
          if (HasQuantity) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Quantity);
          }
          if (HasSourceReferenceId) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SourceReferenceId);
          }
          if (HasPriceIndex) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PriceIndex);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Item other) {
          if (other == null) {
            return;
          }
          if (other.HasItemDefIndex) {
            ItemDefIndex = other.ItemDefIndex;
          }
          if (other.HasQuantity) {
            Quantity = other.Quantity;
          }
          if (other.HasSourceReferenceId) {
            SourceReferenceId = other.SourceReferenceId;
          }
          if (other.HasPriceIndex) {
            PriceIndex = other.PriceIndex;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ItemDefIndex = input.ReadUInt32();
                break;
              }
              case 16: {
                Quantity = input.ReadUInt32();
                break;
              }
              case 24: {
                SourceReferenceId = input.ReadUInt64();
                break;
              }
              case 32: {
                PriceIndex = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ItemDefIndex = input.ReadUInt32();
                break;
              }
              case 16: {
                Quantity = input.ReadUInt32();
                break;
              }
              case 24: {
                SourceReferenceId = input.ReadUInt64();
                break;
              }
              case 32: {
                PriceIndex = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgClientToGCPurchaseChargeCostItemsResponse : pb::IMessage<CMsgClientToGCPurchaseChargeCostItemsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCPurchaseChargeCostItemsResponse> _parser = new pb::MessageParser<CMsgClientToGCPurchaseChargeCostItemsResponse>(() => new CMsgClientToGCPurchaseChargeCostItemsResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCPurchaseChargeCostItemsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCPurchaseChargeCostItemsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCPurchaseChargeCostItemsResponse(CMsgClientToGCPurchaseChargeCostItemsResponse other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      itemIds_ = other.itemIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCPurchaseChargeCostItemsResponse Clone() {
      return new CMsgClientToGCPurchaseChargeCostItemsResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItemsResponse.Types.EResponse ResultDefaultValue = global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItemsResponse.Types.EResponse.KEInternalError;

    private global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItemsResponse.Types.EResponse result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItemsResponse.Types.EResponse Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "item_ids" field.</summary>
    public const int ItemIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_itemIds_codec
        = pb::FieldCodec.ForUInt64(16);
    private readonly pbc::RepeatedField<ulong> itemIds_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> ItemIds {
      get { return itemIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCPurchaseChargeCostItemsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCPurchaseChargeCostItemsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!itemIds_.Equals(other.itemIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      hash ^= itemIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      itemIds_.WriteTo(output, _repeated_itemIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      itemIds_.WriteTo(ref output, _repeated_itemIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += itemIds_.CalculateSize(_repeated_itemIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCPurchaseChargeCostItemsResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      itemIds_.Add(other.itemIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItemsResponse.Types.EResponse) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            itemIds_.AddEntriesFrom(input, _repeated_itemIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Steam.Protos.Dota2.CMsgClientToGCPurchaseChargeCostItemsResponse.Types.EResponse) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            itemIds_.AddEntriesFrom(ref input, _repeated_itemIds_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgClientToGCPurchaseChargeCostItemsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EResponse {
        [pbr::OriginalName("k_eInternalError")] KEInternalError = 0,
        [pbr::OriginalName("k_eSuccess")] KESuccess = 1,
        [pbr::OriginalName("k_eTooBusy")] KETooBusy = 2,
        [pbr::OriginalName("k_eDisabled")] KEDisabled = 3,
        [pbr::OriginalName("k_eTimeout")] KETimeout = 4,
        [pbr::OriginalName("k_eInvalidParam")] KEInvalidParam = 5,
        [pbr::OriginalName("k_eInvalidPrice")] KEInvalidPrice = 6,
        [pbr::OriginalName("k_eInsufficientCharges")] KEInsufficientCharges = 7,
        [pbr::OriginalName("k_eLimitedItem")] KELimitedItem = 8,
        [pbr::OriginalName("k_eMissingPrereq")] KEMissingPrereq = 10,
      }

    }
    #endregion

  }

  public sealed partial class CMsgGCToClientInFlightChargesUpdated : pb::IMessage<CMsgGCToClientInFlightChargesUpdated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToClientInFlightChargesUpdated> _parser = new pb::MessageParser<CMsgGCToClientInFlightChargesUpdated>(() => new CMsgGCToClientInFlightChargesUpdated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToClientInFlightChargesUpdated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToClientInFlightChargesUpdated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToClientInFlightChargesUpdated(CMsgGCToClientInFlightChargesUpdated other) : this() {
      inFlightCharges_ = other.inFlightCharges_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToClientInFlightChargesUpdated Clone() {
      return new CMsgGCToClientInFlightChargesUpdated(this);
    }

    /// <summary>Field number for the "in_flight_charges" field.</summary>
    public const int InFlightChargesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Steam.Protos.Dota2.CMsgGCToClientInFlightChargesUpdated.Types.ItemCharges> _repeated_inFlightCharges_codec
        = pb::FieldCodec.ForMessage(18, global::Steam.Protos.Dota2.CMsgGCToClientInFlightChargesUpdated.Types.ItemCharges.Parser);
    private readonly pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToClientInFlightChargesUpdated.Types.ItemCharges> inFlightCharges_ = new pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToClientInFlightChargesUpdated.Types.ItemCharges>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Steam.Protos.Dota2.CMsgGCToClientInFlightChargesUpdated.Types.ItemCharges> InFlightCharges {
      get { return inFlightCharges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToClientInFlightChargesUpdated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToClientInFlightChargesUpdated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inFlightCharges_.Equals(other.inFlightCharges_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inFlightCharges_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      inFlightCharges_.WriteTo(output, _repeated_inFlightCharges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      inFlightCharges_.WriteTo(ref output, _repeated_inFlightCharges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inFlightCharges_.CalculateSize(_repeated_inFlightCharges_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToClientInFlightChargesUpdated other) {
      if (other == null) {
        return;
      }
      inFlightCharges_.Add(other.inFlightCharges_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            inFlightCharges_.AddEntriesFrom(input, _repeated_inFlightCharges_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            inFlightCharges_.AddEntriesFrom(ref input, _repeated_inFlightCharges_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CMsgGCToClientInFlightChargesUpdated message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ItemCharges : pb::IMessage<ItemCharges>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ItemCharges> _parser = new pb::MessageParser<ItemCharges>(() => new ItemCharges());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ItemCharges> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Steam.Protos.Dota2.CMsgGCToClientInFlightChargesUpdated.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ItemCharges() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ItemCharges(ItemCharges other) : this() {
          _hasBits0 = other._hasBits0;
          itemDef_ = other.itemDef_;
          chargesInFlight_ = other.chargesInFlight_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ItemCharges Clone() {
          return new ItemCharges(this);
        }

        /// <summary>Field number for the "item_def" field.</summary>
        public const int ItemDefFieldNumber = 1;
        private readonly static uint ItemDefDefaultValue = 0;

        private uint itemDef_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ItemDef {
          get { if ((_hasBits0 & 1) != 0) { return itemDef_; } else { return ItemDefDefaultValue; } }
          set {
            _hasBits0 |= 1;
            itemDef_ = value;
          }
        }
        /// <summary>Gets whether the "item_def" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasItemDef {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "item_def" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearItemDef() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "charges_in_flight" field.</summary>
        public const int ChargesInFlightFieldNumber = 2;
        private readonly static uint ChargesInFlightDefaultValue = 0;

        private uint chargesInFlight_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint ChargesInFlight {
          get { if ((_hasBits0 & 2) != 0) { return chargesInFlight_; } else { return ChargesInFlightDefaultValue; } }
          set {
            _hasBits0 |= 2;
            chargesInFlight_ = value;
          }
        }
        /// <summary>Gets whether the "charges_in_flight" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasChargesInFlight {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "charges_in_flight" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearChargesInFlight() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ItemCharges);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ItemCharges other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ItemDef != other.ItemDef) return false;
          if (ChargesInFlight != other.ChargesInFlight) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasItemDef) hash ^= ItemDef.GetHashCode();
          if (HasChargesInFlight) hash ^= ChargesInFlight.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasItemDef) {
            output.WriteRawTag(8);
            output.WriteUInt32(ItemDef);
          }
          if (HasChargesInFlight) {
            output.WriteRawTag(16);
            output.WriteUInt32(ChargesInFlight);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasItemDef) {
            output.WriteRawTag(8);
            output.WriteUInt32(ItemDef);
          }
          if (HasChargesInFlight) {
            output.WriteRawTag(16);
            output.WriteUInt32(ChargesInFlight);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasItemDef) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemDef);
          }
          if (HasChargesInFlight) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChargesInFlight);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ItemCharges other) {
          if (other == null) {
            return;
          }
          if (other.HasItemDef) {
            ItemDef = other.ItemDef;
          }
          if (other.HasChargesInFlight) {
            ChargesInFlight = other.ChargesInFlight;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                ItemDef = input.ReadUInt32();
                break;
              }
              case 16: {
                ChargesInFlight = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                ItemDef = input.ReadUInt32();
                break;
              }
              case 16: {
                ChargesInFlight = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CMsgClientToGCCancelUnfinalizedTransactions : pb::IMessage<CMsgClientToGCCancelUnfinalizedTransactions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCCancelUnfinalizedTransactions> _parser = new pb::MessageParser<CMsgClientToGCCancelUnfinalizedTransactions>(() => new CMsgClientToGCCancelUnfinalizedTransactions());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCCancelUnfinalizedTransactions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCCancelUnfinalizedTransactions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCCancelUnfinalizedTransactions(CMsgClientToGCCancelUnfinalizedTransactions other) : this() {
      _hasBits0 = other._hasBits0;
      unused_ = other.unused_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCCancelUnfinalizedTransactions Clone() {
      return new CMsgClientToGCCancelUnfinalizedTransactions(this);
    }

    /// <summary>Field number for the "unused" field.</summary>
    public const int UnusedFieldNumber = 1;
    private readonly static uint UnusedDefaultValue = 0;

    private uint unused_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Unused {
      get { if ((_hasBits0 & 1) != 0) { return unused_; } else { return UnusedDefaultValue; } }
      set {
        _hasBits0 |= 1;
        unused_ = value;
      }
    }
    /// <summary>Gets whether the "unused" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnused {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "unused" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUnused() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCCancelUnfinalizedTransactions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCCancelUnfinalizedTransactions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Unused != other.Unused) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUnused) hash ^= Unused.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUnused) {
        output.WriteRawTag(8);
        output.WriteUInt32(Unused);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUnused) {
        output.WriteRawTag(8);
        output.WriteUInt32(Unused);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasUnused) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Unused);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCCancelUnfinalizedTransactions other) {
      if (other == null) {
        return;
      }
      if (other.HasUnused) {
        Unused = other.Unused;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Unused = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Unused = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgClientToGCCancelUnfinalizedTransactionsResponse : pb::IMessage<CMsgClientToGCCancelUnfinalizedTransactionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgClientToGCCancelUnfinalizedTransactionsResponse> _parser = new pb::MessageParser<CMsgClientToGCCancelUnfinalizedTransactionsResponse>(() => new CMsgClientToGCCancelUnfinalizedTransactionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgClientToGCCancelUnfinalizedTransactionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCCancelUnfinalizedTransactionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCCancelUnfinalizedTransactionsResponse(CMsgClientToGCCancelUnfinalizedTransactionsResponse other) : this() {
      _hasBits0 = other._hasBits0;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgClientToGCCancelUnfinalizedTransactionsResponse Clone() {
      return new CMsgClientToGCCancelUnfinalizedTransactionsResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static uint ResultDefaultValue = 0;

    private uint result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Result {
      get { if ((_hasBits0 & 1) != 0) { return result_; } else { return ResultDefaultValue; } }
      set {
        _hasBits0 |= 1;
        result_ = value;
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgClientToGCCancelUnfinalizedTransactionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgClientToGCCancelUnfinalizedTransactionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteUInt32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(8);
        output.WriteUInt32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgClientToGCCancelUnfinalizedTransactionsResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CMsgGCToGCUpdateWelcomeMsg : pb::IMessage<CMsgGCToGCUpdateWelcomeMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CMsgGCToGCUpdateWelcomeMsg> _parser = new pb::MessageParser<CMsgGCToGCUpdateWelcomeMsg>(() => new CMsgGCToGCUpdateWelcomeMsg());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CMsgGCToGCUpdateWelcomeMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Steam.Protos.Dota2.EconGcmessagesReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCUpdateWelcomeMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCUpdateWelcomeMsg(CMsgGCToGCUpdateWelcomeMsg other) : this() {
      _hasBits0 = other._hasBits0;
      server_ = other.server_;
      newMsg_ = other.newMsg_ != null ? other.newMsg_.Clone() : null;
      broadcast_ = other.broadcast_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CMsgGCToGCUpdateWelcomeMsg Clone() {
      return new CMsgGCToGCUpdateWelcomeMsg(this);
    }

    /// <summary>Field number for the "server" field.</summary>
    public const int ServerFieldNumber = 1;
    private readonly static bool ServerDefaultValue = false;

    private bool server_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Server {
      get { if ((_hasBits0 & 1) != 0) { return server_; } else { return ServerDefaultValue; } }
      set {
        _hasBits0 |= 1;
        server_ = value;
      }
    }
    /// <summary>Gets whether the "server" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasServer {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "server" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearServer() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "new_msg" field.</summary>
    public const int NewMsgFieldNumber = 2;
    private global::Steam.Protos.Dota2.CExtraMsgBlock newMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Steam.Protos.Dota2.CExtraMsgBlock NewMsg {
      get { return newMsg_; }
      set {
        newMsg_ = value;
      }
    }

    /// <summary>Field number for the "broadcast" field.</summary>
    public const int BroadcastFieldNumber = 3;
    private readonly static bool BroadcastDefaultValue = false;

    private bool broadcast_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Broadcast {
      get { if ((_hasBits0 & 2) != 0) { return broadcast_; } else { return BroadcastDefaultValue; } }
      set {
        _hasBits0 |= 2;
        broadcast_ = value;
      }
    }
    /// <summary>Gets whether the "broadcast" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBroadcast {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "broadcast" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBroadcast() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CMsgGCToGCUpdateWelcomeMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CMsgGCToGCUpdateWelcomeMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Server != other.Server) return false;
      if (!object.Equals(NewMsg, other.NewMsg)) return false;
      if (Broadcast != other.Broadcast) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasServer) hash ^= Server.GetHashCode();
      if (newMsg_ != null) hash ^= NewMsg.GetHashCode();
      if (HasBroadcast) hash ^= Broadcast.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasServer) {
        output.WriteRawTag(8);
        output.WriteBool(Server);
      }
      if (newMsg_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewMsg);
      }
      if (HasBroadcast) {
        output.WriteRawTag(24);
        output.WriteBool(Broadcast);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasServer) {
        output.WriteRawTag(8);
        output.WriteBool(Server);
      }
      if (newMsg_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewMsg);
      }
      if (HasBroadcast) {
        output.WriteRawTag(24);
        output.WriteBool(Broadcast);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasServer) {
        size += 1 + 1;
      }
      if (newMsg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewMsg);
      }
      if (HasBroadcast) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CMsgGCToGCUpdateWelcomeMsg other) {
      if (other == null) {
        return;
      }
      if (other.HasServer) {
        Server = other.Server;
      }
      if (other.newMsg_ != null) {
        if (newMsg_ == null) {
          NewMsg = new global::Steam.Protos.Dota2.CExtraMsgBlock();
        }
        NewMsg.MergeFrom(other.NewMsg);
      }
      if (other.HasBroadcast) {
        Broadcast = other.Broadcast;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Server = input.ReadBool();
            break;
          }
          case 18: {
            if (newMsg_ == null) {
              NewMsg = new global::Steam.Protos.Dota2.CExtraMsgBlock();
            }
            input.ReadMessage(NewMsg);
            break;
          }
          case 24: {
            Broadcast = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Server = input.ReadBool();
            break;
          }
          case 18: {
            if (newMsg_ == null) {
              NewMsg = new global::Steam.Protos.Dota2.CExtraMsgBlock();
            }
            input.ReadMessage(NewMsg);
            break;
          }
          case 24: {
            Broadcast = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
