using System.Diagnostics;
using necronomicon;
using necronomicon.model;
using necronomicon.model.dem;
using necronomicon.model.engine;
using Steam.Protos.Dota2;

namespace necronomicon_test;

public class UnitTest1
{
    [Fact]
    public async Task TestCallback()
    {
        Stopwatch stopwatch = new Stopwatch();

        stopwatch.Start();

        string path = Path.GetFullPath(@"test_replay.dem");
        Necronomicon parser = new Necronomicon(path);
        DemPackets packets = new DemPackets(parser);
        DemSendTables sendTables = new DemSendTables(parser);
        DemClassInfo classInfo = new DemClassInfo(parser);
        SvcPacketEntities packetEntities = new SvcPacketEntities(parser);
        SvcStringTable stringTable = new SvcStringTable(parser);
        parser.Parse();

        stopwatch.Stop();

        var commandCount = packets._embeddedMessages
            .SelectMany(em => em.Commands)
            .GroupBy(em => em)
            .OrderBy(grp => grp.Key)
            .Select(grp => (Value: grp.Key, Count: grp.Count()))
            .ToList();
        Debug.WriteLine($"Total time to execute: {stopwatch.Elapsed}");
        Debug.WriteLine(packets._embeddedMessages.Count);

        await Task.CompletedTask;
    }

    [Fact]
    public async Task TestStringtable()
    {
        byte[] testBuffer = Convert.FromBase64String("awHYhgC2JoDtCmDLAtiMADYhgA0JYAsC2IoANieAzQpg");
        int testEntries = 12;
        CSVCMsg_CreateStringTable createStringTable = new CSVCMsg_CreateStringTable();
        createStringTable.Name = "decalprecache";
        createStringTable.UserDataFixedSize = true;
        createStringTable.UserDataSize = 1;
        createStringTable.UserDataSizeBits = 2;
        createStringTable.Flags = 0;
        createStringTable.UsingVarintBitcounts = true;
        StringTable testStringTable = new StringTable(1, createStringTable);

        string path = Path.GetFullPath(@"test_replay.dem");
        Necronomicon parser = new Necronomicon(path);
        var testSvcStringTable = new SvcStringTable(parser);
        testSvcStringTable.ParseStringTable(testBuffer, testEntries, testStringTable);

        Debug.Assert(testStringTable.Items.Count() == testEntries);
        await Task.CompletedTask;
    }

    [Fact]
    public async Task TestStringtableInstanceBaseline()
    {
        byte[] testBuffer = Convert.FromBase64String("");
        int testEntries = 12;
        CSVCMsg_CreateStringTable createStringTable = new CSVCMsg_CreateStringTable();
        createStringTable.Name = "instancebaseline";
        createStringTable.UserDataFixedSize = false;
        createStringTable.UserDataSize = 0;
        createStringTable.UserDataSizeBits = 0;
        createStringTable.Flags = 1;
        createStringTable.UsingVarintBitcounts = true;
        StringTable testStringTable = new StringTable(2, createStringTable);

        string path = Path.GetFullPath(@"test_replay.dem");
        Necronomicon parser = new Necronomicon(path);
        var testSvcStringTable = new SvcStringTable(parser);
        testSvcStringTable.ParseStringTable(testBuffer, testEntries, testStringTable);

        Debug.Assert(testStringTable.Items.Count() == testEntries);
        await Task.CompletedTask;
    }
}
